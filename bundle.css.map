{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../DiceRollListener.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import RPG from \"rpg-dice-roller\";\n  import { client } from \"../lib/speechly\";\n\n  let textContent = \"\";\n\n  const appendMessage = message => {\n    textContent.innerHTML = textContent.innerHTML += `${message}\\n`;\n    textContent.scrollTop = textContent.scrollHeight;\n  };\n  const clear = () => (textContent.innerHTML = \"\");\n\n  export let recording = boolean;\n\n  $: {\n    if (recording) {\n      client.startContext(err => {\n        if (err !== undefined) {\n          console.error(err);\n          appendMessage(\"Error: Failed to start recording!\");\n        } else {\n          appendMessage(\"Listening...\");\n        }\n      });\n    } else {\n      client.stopContext();\n    }\n  }\n\n  // React to the phrases received from the API\n  client.onSegmentChange(segment => {\n    console.log(segment);\n    if (segment.isFinal) {\n      appendMessage(\n        `Heard: \"${segment.words\n          .map(({ value }) => value.toLowerCase())\n          .join(\" \")}\"`\n      );\n\n      // roll dice\n      const roller = new RPG.DiceRoller();\n      let quantity = 1;\n      for (const { type, value } of segment.entities) {\n        switch (type) {\n          case \"quantity\":\n            quantity = isNaN(value) ? 1 : value;\n            break;\n          case \"dice\":\n            if (!isNaN(value)) {\n              roller.roll(`${Number(quantity)}d${Number(value)}`);\n              quantity = 1; // reset\n            }\n            break;\n        }\n      }\n      if (roller.total) {\n        appendMessage(\n          roller\n            .toString()\n            .split(\";\")\n            .map(r => r.trim())\n            .join(\"\\n\")\n        );\n        appendMessage(`Total: ${roller.total}`);\n      } else {\n        appendMessage(\"Sorry, didn't hear any rolls this time.\");\n      }\n    }\n  });\n</script>\n\n<style>\n  pre {\n    resize: vertical;\n    height: 340px;\n    max-height: 135vh;\n    border-radius: 0.25em;\n  }\n</style>\n\n<div>\n  <pre\n    class=\"pre-scrollable bg-white small border p-3\"\n    bind:this={textContent} />\n  <button class=\"btn btn-lg btn-primary btn-block\" on:click={clear}>\n    Clear\n  </button>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAwEE,GAAG,cAAC,CAAC,AACH,MAAM,CAAE,QAAQ,CAChB,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,MAAM,AACvB,CAAC"
}