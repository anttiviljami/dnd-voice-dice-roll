{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@speechly/browser-client/speechly/types.js","../../node_modules/@speechly/browser-client/speechly/state.js","../../node_modules/iso-639-1/src/data.js","../../node_modules/iso-639-1/src/index.js","../../node_modules/iso-639-1-zh/src/data.js","../../node_modules/iso-639-1-zh/src/index.js","../../node_modules/mout/object/hasOwn.js","../../node_modules/mout/object/forIn.js","../../node_modules/mout/object/functions.js","../../node_modules/mout/array/slice.js","../../node_modules/mout/function/bind.js","../../node_modules/mout/array/forEach.js","../../node_modules/mout/object/bindAll.js","../../node_modules/mout/object/forOwn.js","../../node_modules/mout/function/identity.js","../../node_modules/mout/function/prop.js","../../node_modules/mout/lang/kindOf.js","../../node_modules/mout/lang/isKind.js","../../node_modules/mout/lang/isArray.js","../../node_modules/mout/object/deepMatches.js","../../node_modules/mout/function/makeIterator_.js","../../node_modules/mout/object/some.js","../../node_modules/mout/object/contains.js","../../node_modules/mout/lang/isPlainObject.js","../../node_modules/mout/object/deepFillIn.js","../../node_modules/mout/object/deepMixIn.js","../../node_modules/mout/object/every.js","../../node_modules/mout/lang/isObject.js","../../node_modules/mout/lang/is.js","../../node_modules/mout/object/equals.js","../../node_modules/mout/object/fillIn.js","../../node_modules/mout/object/filter.js","../../node_modules/mout/object/find.js","../../node_modules/mout/object/flatten.js","../../node_modules/mout/object/get.js","../../node_modules/mout/object/has.js","../../node_modules/mout/object/keys.js","../../node_modules/mout/object/map.js","../../node_modules/mout/object/matches.js","../../node_modules/mout/array/max.js","../../node_modules/mout/object/values.js","../../node_modules/mout/object/mixIn.js","../../node_modules/mout/lang/clone.js","../../node_modules/mout/lang/deepClone.js","../../node_modules/mout/object/merge.js","../../node_modules/mout/array/min.js","../../node_modules/mout/object/namespace.js","../../node_modules/mout/array/indexOf.js","../../node_modules/mout/array/contains.js","../../node_modules/mout/object/pluck.js","../../node_modules/mout/object/size.js","../../node_modules/mout/object/reduce.js","../../node_modules/mout/object/reject.js","../../node_modules/mout/lang/isFunction.js","../../node_modules/mout/object/set.js","../../node_modules/mout/object/unset.js","../../node_modules/mout/object.js","../../node_modules/mout/object/max.js","../../node_modules/mout/object/min.js","../../node_modules/mout/object/omit.js","../../node_modules/mout/object/pick.js","../../node_modules/mout/object/result.js","../../node_modules/iso-3166-1-alpha-2/index.js","../../node_modules/locale-code/src/index.js","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/bytesToUuid.js","../../node_modules/uuid/dist/esm-browser/v1.js","../../node_modules/uuid/dist/esm-browser/v35.js","../../node_modules/uuid/dist/esm-browser/md5.js","../../node_modules/uuid/dist/esm-browser/v3.js","../../node_modules/uuid/dist/esm-browser/sha1.js","../../node_modules/uuid/dist/esm-browser/v5.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/@speechly/browser-client/microphone/downsampler.js","../../node_modules/@speechly/browser-client/microphone/const.js","../../node_modules/@speechly/browser-client/microphone/browser_microphone.js","../../node_modules/@speechly/browser-client/microphone/index.js","../../node_modules/@speechly/browser-client/websocket/types.js","../../node_modules/@speechly/browser-client/websocket/client.js","../../node_modules/@speechly/browser-client/websocket/index.js","../../node_modules/@speechly/browser-client/speechly/segment.js","../../node_modules/@speechly/browser-client/speechly/parsers.js","../../node_modules/@speechly/browser-client/storage/const.js","../../node_modules/@speechly/browser-client/storage/storage.js","../../node_modules/@speechly/browser-client/storage/index.js","../../node_modules/@speechly/browser-client/speechly/client.js","../../node_modules/@speechly/browser-client/speechly/index.js","../../src/lib/speechly.js","../../node_modules/@speechly/browser-client/index.js","../../node_modules/rpg-dice-roller/lib/umd/bundle.js","../../src/components/DiceRollListener.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * All possible states of a Speechly API client. Failed, NoBrowserSupport and NoAudioConsent states are non-recoverable\n * erroneous states, which should be handled by the end user, according to the semantics of an application.\n * Other states can also be utilized for e.g. enabling and disabling recording buttons or showing the status in the app.\n * It is also possible to use arithmetics for state comparison, e.g. `if (state < speechly.ClientState.Disconnected)`,\n * to react to non-recoverable states.\n * @public\n */\nvar ClientState;\n(function (ClientState) {\n    ClientState[ClientState[\"Failed\"] = 0] = \"Failed\";\n    ClientState[ClientState[\"NoBrowserSupport\"] = 1] = \"NoBrowserSupport\";\n    ClientState[ClientState[\"NoAudioConsent\"] = 2] = \"NoAudioConsent\";\n    ClientState[ClientState[\"Disconnected\"] = 3] = \"Disconnected\";\n    ClientState[ClientState[\"Disconnecting\"] = 4] = \"Disconnecting\";\n    ClientState[ClientState[\"Connecting\"] = 5] = \"Connecting\";\n    ClientState[ClientState[\"Connected\"] = 6] = \"Connected\";\n    ClientState[ClientState[\"Starting\"] = 7] = \"Starting\";\n    ClientState[ClientState[\"Stopping\"] = 8] = \"Stopping\";\n    ClientState[ClientState[\"Recording\"] = 9] = \"Recording\";\n})(ClientState = exports.ClientState || (exports.ClientState = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\n/**\n * Converts client state value to a string, which could be useful for debugging or metrics.\n * @param state - the state of the client\n * @public\n */\nfunction stateToString(state) {\n    var _a;\n    return (_a = states.get(state)) !== null && _a !== void 0 ? _a : unknown;\n}\nexports.stateToString = stateToString;\n// TODO: generate this from the enum.\nconst unknown = 'Unknown';\nconst states = new Map([\n    [types_1.ClientState.Failed, 'Failed'],\n    [types_1.ClientState.NoBrowserSupport, 'NoBrowserSupport'],\n    [types_1.ClientState.NoAudioConsent, 'NoAudioConsent'],\n    [types_1.ClientState.Disconnecting, 'Disconnecting'],\n    [types_1.ClientState.Disconnected, 'Disconnected'],\n    [types_1.ClientState.Connecting, 'Connecting'],\n    [types_1.ClientState.Connected, 'Connected'],\n    [types_1.ClientState.Starting, 'Starting'],\n    [types_1.ClientState.Stopping, 'Stopping'],\n    [types_1.ClientState.Recording, 'Recording']\n]);\n//# sourceMappingURL=state.js.map","const LANGUAGES_LIST = {\n  aa: {\n    name: 'Afar',\n    nativeName: 'Afaraf',\n  },\n  ab: {\n    name: 'Abkhaz',\n    nativeName: 'аҧсуа бызшәа',\n  },\n  ae: {\n    name: 'Avestan',\n    nativeName: 'avesta',\n  },\n  af: {\n    name: 'Afrikaans',\n    nativeName: 'Afrikaans',\n  },\n  ak: {\n    name: 'Akan',\n    nativeName: 'Akan',\n  },\n  am: {\n    name: 'Amharic',\n    nativeName: 'አማርኛ',\n  },\n  an: {\n    name: 'Aragonese',\n    nativeName: 'aragonés',\n  },\n  ar: {\n    name: 'Arabic',\n    nativeName: 'اللغة العربية',\n  },\n  as: {\n    name: 'Assamese',\n    nativeName: 'অসমীয়া',\n  },\n  av: {\n    name: 'Avaric',\n    nativeName: 'авар мацӀ',\n  },\n  ay: {\n    name: 'Aymara',\n    nativeName: 'aymar aru',\n  },\n  az: {\n    name: 'Azerbaijani',\n    nativeName: 'azərbaycan dili',\n  },\n  ba: {\n    name: 'Bashkir',\n    nativeName: 'башҡорт теле',\n  },\n  be: {\n    name: 'Belarusian',\n    nativeName: 'беларуская мова',\n  },\n  bg: {\n    name: 'Bulgarian',\n    nativeName: 'български език',\n  },\n  bh: {\n    name: 'Bihari',\n    nativeName: 'भोजपुरी',\n  },\n  bi: {\n    name: 'Bislama',\n    nativeName: 'Bislama',\n  },\n  bm: {\n    name: 'Bambara',\n    nativeName: 'bamanankan',\n  },\n  bn: {\n    name: 'Bengali',\n    nativeName: 'বাংলা',\n  },\n  bo: {\n    name: 'Tibetan Standard',\n    nativeName: 'བོད་ཡིག',\n  },\n  br: {\n    name: 'Breton',\n    nativeName: 'brezhoneg',\n  },\n  bs: {\n    name: 'Bosnian',\n    nativeName: 'bosanski jezik',\n  },\n  ca: {\n    name: 'Catalan',\n    nativeName: 'català',\n  },\n  ce: {\n    name: 'Chechen',\n    nativeName: 'нохчийн мотт',\n  },\n  ch: {\n    name: 'Chamorro',\n    nativeName: 'Chamoru',\n  },\n  co: {\n    name: 'Corsican',\n    nativeName: 'corsu',\n  },\n  cr: {\n    name: 'Cree',\n    nativeName: 'ᓀᐦᐃᔭᐍᐏᐣ',\n  },\n  cs: {\n    name: 'Czech',\n    nativeName: 'čeština',\n  },\n  cu: {\n    name: 'Old Church Slavonic',\n    nativeName: 'ѩзыкъ словѣньскъ',\n  },\n  cv: {\n    name: 'Chuvash',\n    nativeName: 'чӑваш чӗлхи',\n  },\n  cy: {\n    name: 'Welsh',\n    nativeName: 'Cymraeg',\n  },\n  da: {\n    name: 'Danish',\n    nativeName: 'dansk',\n  },\n  de: {\n    name: 'German',\n    nativeName: 'Deutsch',\n  },\n  dv: {\n    name: 'Divehi',\n    nativeName: 'Dhivehi',\n  },\n  dz: {\n    name: 'Dzongkha',\n    nativeName: 'རྫོང་ཁ',\n  },\n  ee: {\n    name: 'Ewe',\n    nativeName: 'Eʋegbe',\n  },\n  el: {\n    name: 'Greek',\n    nativeName: 'Ελληνικά',\n  },\n  en: {\n    name: 'English',\n    nativeName: 'English',\n  },\n  eo: {\n    name: 'Esperanto',\n    nativeName: 'Esperanto',\n  },\n  es: {\n    name: 'Spanish',\n    nativeName: 'Español',\n  },\n  et: {\n    name: 'Estonian',\n    nativeName: 'eesti',\n  },\n  eu: {\n    name: 'Basque',\n    nativeName: 'euskara',\n  },\n  fa: {\n    name: 'Persian',\n    nativeName: 'فارسی',\n  },\n  ff: {\n    name: 'Fula',\n    nativeName: 'Fulfulde',\n  },\n  fi: {\n    name: 'Finnish',\n    nativeName: 'suomi',\n  },\n  fj: {\n    name: 'Fijian',\n    nativeName: 'Vakaviti',\n  },\n  fo: {\n    name: 'Faroese',\n    nativeName: 'føroyskt',\n  },\n  fr: {\n    name: 'French',\n    nativeName: 'Français',\n  },\n  fy: {\n    name: 'Western Frisian',\n    nativeName: 'Frysk',\n  },\n  ga: {\n    name: 'Irish',\n    nativeName: 'Gaeilge',\n  },\n  gd: {\n    name: 'Scottish Gaelic',\n    nativeName: 'Gàidhlig',\n  },\n  gl: {\n    name: 'Galician',\n    nativeName: 'galego',\n  },\n  gn: {\n    name: 'Guaraní',\n    nativeName: \"Avañe'ẽ\",\n  },\n  gu: {\n    name: 'Gujarati',\n    nativeName: 'ગુજરાતી',\n  },\n  gv: {\n    name: 'Manx',\n    nativeName: 'Gaelg',\n  },\n  ha: {\n    name: 'Hausa',\n    nativeName: 'هَوُسَ',\n  },\n  he: {\n    name: 'Hebrew',\n    nativeName: 'עברית',\n  },\n  hi: {\n    name: 'Hindi',\n    nativeName: 'हिन्दी',\n  },\n  ho: {\n    name: 'Hiri Motu',\n    nativeName: 'Hiri Motu',\n  },\n  hr: {\n    name: 'Croatian',\n    nativeName: 'hrvatski jezik',\n  },\n  ht: {\n    name: 'Haitian',\n    nativeName: 'Kreyòl ayisyen',\n  },\n  hu: {\n    name: 'Hungarian',\n    nativeName: 'magyar',\n  },\n  hy: {\n    name: 'Armenian',\n    nativeName: 'Հայերեն',\n  },\n  hz: {\n    name: 'Herero',\n    nativeName: 'Otjiherero',\n  },\n  ia: {\n    name: 'Interlingua',\n    nativeName: 'Interlingua',\n  },\n  id: {\n    name: 'Indonesian',\n    nativeName: 'Bahasa Indonesia',\n  },\n  ie: {\n    name: 'Interlingue',\n    nativeName: 'Interlingue',\n  },\n  ig: {\n    name: 'Igbo',\n    nativeName: 'Asụsụ Igbo',\n  },\n  ii: {\n    name: 'Nuosu',\n    nativeName: 'ꆈꌠ꒿ Nuosuhxop',\n  },\n  ik: {\n    name: 'Inupiaq',\n    nativeName: 'Iñupiaq',\n  },\n  io: {\n    name: 'Ido',\n    nativeName: 'Ido',\n  },\n  is: {\n    name: 'Icelandic',\n    nativeName: 'Íslenska',\n  },\n  it: {\n    name: 'Italian',\n    nativeName: 'Italiano',\n  },\n  iu: {\n    name: 'Inuktitut',\n    nativeName: 'ᐃᓄᒃᑎᑐᑦ',\n  },\n  ja: {\n    name: 'Japanese',\n    nativeName: '日本語',\n  },\n  jv: {\n    name: 'Javanese',\n    nativeName: 'basa Jawa',\n  },\n  ka: {\n    name: 'Georgian',\n    nativeName: 'ქართული',\n  },\n  kg: {\n    name: 'Kongo',\n    nativeName: 'Kikongo',\n  },\n  ki: {\n    name: 'Kikuyu',\n    nativeName: 'Gĩkũyũ',\n  },\n  kj: {\n    name: 'Kwanyama',\n    nativeName: 'Kuanyama',\n  },\n  kk: {\n    name: 'Kazakh',\n    nativeName: 'қазақ тілі',\n  },\n  kl: {\n    name: 'Kalaallisut',\n    nativeName: 'kalaallisut',\n  },\n  km: {\n    name: 'Khmer',\n    nativeName: 'ខេមរភាសា',\n  },\n  kn: {\n    name: 'Kannada',\n    nativeName: 'ಕನ್ನಡ',\n  },\n  ko: {\n    name: 'Korean',\n    nativeName: '한국어',\n  },\n  kr: {\n    name: 'Kanuri',\n    nativeName: 'Kanuri',\n  },\n  ks: {\n    name: 'Kashmiri',\n    nativeName: 'कश्मीरी',\n  },\n  ku: {\n    name: 'Kurdish',\n    nativeName: 'Kurdî',\n  },\n  kv: {\n    name: 'Komi',\n    nativeName: 'коми кыв',\n  },\n  kw: {\n    name: 'Cornish',\n    nativeName: 'Kernewek',\n  },\n  ky: {\n    name: 'Kyrgyz',\n    nativeName: 'Кыргызча',\n  },\n  la: {\n    name: 'Latin',\n    nativeName: 'latine',\n  },\n  lb: {\n    name: 'Luxembourgish',\n    nativeName: 'Lëtzebuergesch',\n  },\n  lg: {\n    name: 'Ganda',\n    nativeName: 'Luganda',\n  },\n  li: {\n    name: 'Limburgish',\n    nativeName: 'Limburgs',\n  },\n  ln: {\n    name: 'Lingala',\n    nativeName: 'Lingála',\n  },\n  lo: {\n    name: 'Lao',\n    nativeName: 'ພາສາ',\n  },\n  lt: {\n    name: 'Lithuanian',\n    nativeName: 'lietuvių kalba',\n  },\n  lu: {\n    name: 'Luba-Katanga',\n    nativeName: 'Tshiluba',\n  },\n  lv: {\n    name: 'Latvian',\n    nativeName: 'latviešu valoda',\n  },\n  mg: {\n    name: 'Malagasy',\n    nativeName: 'fiteny malagasy',\n  },\n  mh: {\n    name: 'Marshallese',\n    nativeName: 'Kajin M̧ajeļ',\n  },\n  mi: {\n    name: 'Māori',\n    nativeName: 'te reo Māori',\n  },\n  mk: {\n    name: 'Macedonian',\n    nativeName: 'македонски јазик',\n  },\n  ml: {\n    name: 'Malayalam',\n    nativeName: 'മലയാളം',\n  },\n  mn: {\n    name: 'Mongolian',\n    nativeName: 'Монгол хэл',\n  },\n  mr: {\n    name: 'Marathi',\n    nativeName: 'मराठी',\n  },\n  ms: {\n    name: 'Malay',\n    nativeName: 'Bahasa Malaysia',\n  },\n  mt: {\n    name: 'Maltese',\n    nativeName: 'Malti',\n  },\n  my: {\n    name: 'Burmese',\n    nativeName: 'ဗမာစာ',\n  },\n  na: {\n    name: 'Nauru',\n    nativeName: 'Ekakairũ Naoero',\n  },\n  nb: {\n    name: 'Norwegian Bokmål',\n    nativeName: 'Norsk bokmål',\n  },\n  nd: {\n    name: 'Northern Ndebele',\n    nativeName: 'isiNdebele',\n  },\n  ne: {\n    name: 'Nepali',\n    nativeName: 'नेपाली',\n  },\n  ng: {\n    name: 'Ndonga',\n    nativeName: 'Owambo',\n  },\n  nl: {\n    name: 'Dutch',\n    nativeName: 'Nederlands',\n  },\n  nn: {\n    name: 'Norwegian Nynorsk',\n    nativeName: 'Norsk nynorsk',\n  },\n  no: {\n    name: 'Norwegian',\n    nativeName: 'Norsk',\n  },\n  nr: {\n    name: 'Southern Ndebele',\n    nativeName: 'isiNdebele',\n  },\n  nv: {\n    name: 'Navajo',\n    nativeName: 'Diné bizaad',\n  },\n  ny: {\n    name: 'Chichewa',\n    nativeName: 'chiCheŵa',\n  },\n  oc: {\n    name: 'Occitan',\n    nativeName: 'occitan',\n  },\n  oj: {\n    name: 'Ojibwe',\n    nativeName: 'ᐊᓂᔑᓈᐯᒧᐎᓐ',\n  },\n  om: {\n    name: 'Oromo',\n    nativeName: 'Afaan Oromoo',\n  },\n  or: {\n    name: 'Oriya',\n    nativeName: 'ଓଡ଼ିଆ',\n  },\n  os: {\n    name: 'Ossetian',\n    nativeName: 'ирон æвзаг',\n  },\n  pa: {\n    name: 'Panjabi',\n    nativeName: 'ਪੰਜਾਬੀ',\n  },\n  pi: {\n    name: 'Pāli',\n    nativeName: 'पाऴि',\n  },\n  pl: {\n    name: 'Polish',\n    nativeName: 'język polski',\n  },\n  ps: {\n    name: 'Pashto',\n    nativeName: 'پښتو',\n  },\n  pt: {\n    name: 'Portuguese',\n    nativeName: 'Português',\n  },\n  qu: {\n    name: 'Quechua',\n    nativeName: 'Runa Simi',\n  },\n  rm: {\n    name: 'Romansh',\n    nativeName: 'rumantsch grischun',\n  },\n  rn: {\n    name: 'Kirundi',\n    nativeName: 'Ikirundi',\n  },\n  ro: {\n    name: 'Romanian',\n    nativeName: 'Română',\n  },\n  ru: {\n    name: 'Russian',\n    nativeName: 'Русский',\n  },\n  rw: {\n    name: 'Kinyarwanda',\n    nativeName: 'Ikinyarwanda',\n  },\n  sa: {\n    name: 'Sanskrit',\n    nativeName: 'संस्कृतम्',\n  },\n  sc: {\n    name: 'Sardinian',\n    nativeName: 'sardu',\n  },\n  sd: {\n    name: 'Sindhi',\n    nativeName: 'सिन्धी',\n  },\n  se: {\n    name: 'Northern Sami',\n    nativeName: 'Davvisámegiella',\n  },\n  sg: {\n    name: 'Sango',\n    nativeName: 'yângâ tî sängö',\n  },\n  si: {\n    name: 'Sinhala',\n    nativeName: 'සිංහල',\n  },\n  sk: {\n    name: 'Slovak',\n    nativeName: 'slovenčina',\n  },\n  sl: {\n    name: 'Slovene',\n    nativeName: 'slovenski jezik',\n  },\n  sm: {\n    name: 'Samoan',\n    nativeName: \"gagana fa'a Samoa\",\n  },\n  sn: {\n    name: 'Shona',\n    nativeName: 'chiShona',\n  },\n  so: {\n    name: 'Somali',\n    nativeName: 'Soomaaliga',\n  },\n  sq: {\n    name: 'Albanian',\n    nativeName: 'Shqip',\n  },\n  sr: {\n    name: 'Serbian',\n    nativeName: 'српски језик',\n  },\n  ss: {\n    name: 'Swati',\n    nativeName: 'SiSwati',\n  },\n  st: {\n    name: 'Southern Sotho',\n    nativeName: 'Sesotho',\n  },\n  su: {\n    name: 'Sundanese',\n    nativeName: 'Basa Sunda',\n  },\n  sv: {\n    name: 'Swedish',\n    nativeName: 'svenska',\n  },\n  sw: {\n    name: 'Swahili',\n    nativeName: 'Kiswahili',\n  },\n  ta: {\n    name: 'Tamil',\n    nativeName: 'தமிழ்',\n  },\n  te: {\n    name: 'Telugu',\n    nativeName: 'తెలుగు',\n  },\n  tg: {\n    name: 'Tajik',\n    nativeName: 'тоҷикӣ',\n  },\n  th: {\n    name: 'Thai',\n    nativeName: 'ไทย',\n  },\n  ti: {\n    name: 'Tigrinya',\n    nativeName: 'ትግርኛ',\n  },\n  tk: {\n    name: 'Turkmen',\n    nativeName: 'Türkmen',\n  },\n  tl: {\n    name: 'Tagalog',\n    nativeName: 'Wikang Tagalog',\n  },\n  tn: {\n    name: 'Tswana',\n    nativeName: 'Setswana',\n  },\n  to: {\n    name: 'Tonga',\n    nativeName: 'faka Tonga',\n  },\n  tr: {\n    name: 'Turkish',\n    nativeName: 'Türkçe',\n  },\n  ts: {\n    name: 'Tsonga',\n    nativeName: 'Xitsonga',\n  },\n  tt: {\n    name: 'Tatar',\n    nativeName: 'татар теле',\n  },\n  tw: {\n    name: 'Twi',\n    nativeName: 'Twi',\n  },\n  ty: {\n    name: 'Tahitian',\n    nativeName: 'Reo Tahiti',\n  },\n  ug: {\n    name: 'Uyghur',\n    nativeName: 'ئۇيغۇرچە‎',\n  },\n  uk: {\n    name: 'Ukrainian',\n    nativeName: 'Українська',\n  },\n  ur: {\n    name: 'Urdu',\n    nativeName: 'اردو',\n  },\n  uz: {\n    name: 'Uzbek',\n    nativeName: 'Ўзбек',\n  },\n  ve: {\n    name: 'Venda',\n    nativeName: 'Tshivenḓa',\n  },\n  vi: {\n    name: 'Vietnamese',\n    nativeName: 'Tiếng Việt',\n  },\n  vo: {\n    name: 'Volapük',\n    nativeName: 'Volapük',\n  },\n  wa: {\n    name: 'Walloon',\n    nativeName: 'walon',\n  },\n  wo: {\n    name: 'Wolof',\n    nativeName: 'Wollof',\n  },\n  xh: {\n    name: 'Xhosa',\n    nativeName: 'isiXhosa',\n  },\n  yi: {\n    name: 'Yiddish',\n    nativeName: 'ייִדיש',\n  },\n  yo: {\n    name: 'Yoruba',\n    nativeName: 'Yorùbá',\n  },\n  za: {\n    name: 'Zhuang',\n    nativeName: 'Saɯ cueŋƅ',\n  },\n  zh: {\n    name: 'Chinese',\n    nativeName: '中文',\n  },\n  zu: {\n    name: 'Zulu',\n    nativeName: 'isiZulu',\n  },\n};\n\nexport default LANGUAGES_LIST;\n","import LANGUAGES_LIST from './data';\n\nexport default class ISO6391 {\n  static getLanguages(codes = []) {\n    return codes.map(code => ({\n      code,\n      name: ISO6391.getName(code),\n      nativeName: ISO6391.getNativeName(code),\n    }));\n  }\n\n  static getName(code) {\n    return ISO6391.validate(code) ? LANGUAGES_LIST[code].name : '';\n  }\n\n  static getAllNames() {\n    return Object.values(LANGUAGES_LIST).map(l => l.name);\n  }\n\n  static getNativeName(code) {\n    return ISO6391.validate(code) ? LANGUAGES_LIST[code].nativeName : '';\n  }\n\n  static getAllNativeNames() {\n    return Object.values(LANGUAGES_LIST).map(l => l.nativeName);\n  }\n\n  static getCode(name) {\n    const code = Object.keys(LANGUAGES_LIST).find(code => {\n      const language = LANGUAGES_LIST[code];\n\n      return (\n        language.name.toLowerCase() === name.toLowerCase() ||\n        language.nativeName.toLowerCase() === name.toLowerCase()\n      );\n    });\n    return code || '';\n  }\n\n  static getAllCodes() {\n    return Object.keys(LANGUAGES_LIST);\n  }\n\n  static validate(code) {\n    return LANGUAGES_LIST.hasOwnProperty(code);\n  }\n}\n","const LANGUAGES_ZH_NAMES = {\n  aa: '阿法尔语',\n  ab: '阿布哈兹语',\n  ae: '阿维斯陀语',\n  af: '南非荷兰语',\n  ak: '阿坎语',\n  am: '阿姆哈拉语',\n  an: '阿拉贡语',\n  ar: '阿拉伯语',\n  as: '阿萨姆语',\n  av: '阿瓦尔语',\n  ay: '艾马拉语',\n  az: '阿塞拜疆语',\n  ba: '巴什基尔语',\n  be: '白俄罗斯语',\n  bg: '保加利亚语',\n  bh: '比哈尔语',\n  bi: '比斯拉马语',\n  bm: '班巴拉语',\n  bn: '孟加拉语',\n  bo: '藏语',\n  br: '布列塔尼语',\n  bs: '波斯尼亚语',\n  ca: '加泰罗尼亚语',\n  ce: '车臣语',\n  ch: '查莫洛语',\n  co: '科西嘉语',\n  cr: '克里语',\n  cs: '捷克语',\n  cu: '古教会斯拉夫语',\n  cv: '楚瓦什语',\n  cy: '威尔士语',\n  da: '丹麦语',\n  de: '德语',\n  dv: '迪维希语',\n  dz: '不丹语',\n  ee: '埃维语',\n  el: '希腊语',\n  en: '英语',\n  eo: '世界语',\n  es: '西班牙语',\n  et: '爱沙尼亚语',\n  eu: '巴斯克语',\n  fa: '波斯语',\n  ff: '富拉语',\n  fi: '芬兰语',\n  fj: '斐济语',\n  fo: '法罗语',\n  fr: '法语',\n  fy: '西弗里西亚语',\n  ga: '爱尔兰语',\n  gd: '苏格兰盖尔语',\n  gl: '加利西亚语',\n  gn: '瓜拉尼语',\n  gu: '古吉拉特语',\n  gv: '马恩岛语',\n  ha: '豪萨语',\n  he: '希伯来语',\n  hi: '印地语',\n  ho: '莫图语',\n  hr: '克罗地亚语',\n  ht: '海地文',\n  hu: '匈牙利语',\n  hy: '亚美尼亚语',\n  hz: '赫勒娄语',\n  ia: '国际语',\n  id: '印尼语',\n  ie: '国际语',\n  ig: '伊博语',\n  ii: '诺苏语',\n  ik: '依奴皮维克文',\n  io: '伊多文',\n  is: '冰岛语',\n  it: '意大利语',\n  iu: '因纽特语',\n  ja: '日语',\n  jv: '爪哇语',\n  ka: '格鲁吉亚语',\n  kg: '刚果语',\n  ki: '基库尤语',\n  kj: '宽亚马语',\n  kk: '哈萨克语',\n  kl: '格陵兰语',\n  km: '高棉语',\n  kn: '卡纳达语',\n  ko: '韩语',\n  kr: '卡努里语',\n  ks: '克什米尔语',\n  ku: '库尔德语',\n  kv: '科米语',\n  kw: '科尼什语',\n  ky: '吉尔吉斯语',\n  la: '拉丁语',\n  lb: '卢森堡语',\n  lg: '甘达语',\n  li: '林堡语',\n  ln: '林加拉语',\n  lo: '老挝语',\n  lt: '立陶宛语',\n  lu: '卢巴加丹加语',\n  lv: '拉脱维亚语',\n  mg: '马尔加什语',\n  mh: '马绍尔语',\n  mi: '毛利语',\n  mk: '马其顿语',\n  ml: '马拉雅拉姆语',\n  mn: '蒙古文',\n  mr: '马拉地语',\n  ms: '马来语',\n  mt: '马耳他语',\n  my: '缅甸语',\n  na: '瑙鲁语',\n  nb: '挪威博克马尔语',\n  nd: '北恩德贝勒语',\n  ne: '尼泊尔语',\n  ng: '尼日尔刚果语',\n  nl: '荷兰语',\n  nn: '挪威尼诺斯克语',\n  no: '挪威语',\n  nr: '南恩德贝勒语',\n  nv: '纳瓦霍语',\n  ny: '齐切瓦语',\n  oc: '奥克西唐语',\n  oj: '欧及布威语',\n  om: '奥罗莫语',\n  or: '奥里亚语',\n  os: '奥塞梯语',\n  pa: '旁遮普语',\n  pi: '巴利语',\n  pl: '波兰语',\n  ps: '普什图语',\n  pt: '葡萄牙语',\n  qu: '克丘亚语',\n  rm: '罗曼斯语',\n  rn: '基隆迪语',\n  ro: '罗马尼亚语',\n  ru: '俄语',\n  rw: '卢旺达语',\n  sa: '梵文',\n  sc: '撒丁岛语',\n  sd: '信德语',\n  se: '北萨米文',\n  sg: '桑戈语',\n  si: '僧伽罗语',\n  sk: '斯洛伐克语',\n  sl: '斯洛文尼亚语',\n  sm: '萨摩亚语',\n  sn: '绍纳语',\n  so: '索马里语',\n  sq: '阿尔巴尼亚语',\n  sr: '塞尔维亚语',\n  ss: '斯瓦蒂语',\n  st: '南索托语',\n  su: '巽他语',\n  sv: '瑞典语',\n  sw: '斯瓦希里语',\n  ta: '泰米尔语',\n  te: '泰卢固语',\n  tg: '塔吉克语',\n  th: '泰语',\n  ti: '提格雷语',\n  tk: '土库曼语',\n  tl: '菲律宾语',\n  tn: '茨瓦纳语',\n  to: '汤加语',\n  tr: '土耳其语',\n  ts: '特松加语',\n  tt: '塔塔尔语',\n  tw: '契维语',\n  ty: '塔希提语',\n  ug: '维吾尔语',\n  uk: '乌克兰语',\n  ur: '乌尔都语',\n  uz: '乌兹别克语',\n  ve: '文达语',\n  vi: '越南语',\n  vo: '沃拉普克语',\n  wa: '华隆语',\n  wo: '沃洛夫语',\n  xh: '科萨语',\n  yi: '意第绪语',\n  yo: '约鲁巴语',\n  za: '壮语',\n  zh: '中文',\n  zu: '祖鲁语',\n};\n\nexport default LANGUAGES_ZH_NAMES;\n","import ISO6391 from 'iso-639-1';\nimport LANGUAGES_ZH_NAMES from './data.js';\n\nexport default class ISO6391ZH extends ISO6391 {\n  static getLanguages(codes) {\n    return super.getLanguages(codes).map(language => {\n      Object.assign(language, {\n        zhName: ISO6391ZH.getZhName(language.code),\n      });\n      return language;\n    });\n  }\n\n  static getZhName(code) {\n    return super.validate(code) ? LANGUAGES_ZH_NAMES[code] : '';\n  }\n\n  static getAllZhNames() {\n    return Object.values(LANGUAGES_ZH_NAMES);\n  }\n}\n","\n\n    /**\n     * Safer Object.hasOwnProperty\n     */\n     function hasOwn(obj, prop){\n         return Object.prototype.hasOwnProperty.call(obj, prop);\n     }\n\n     module.exports = hasOwn;\n\n\n","var hasOwn = require('./hasOwn');\n\n    var _hasDontEnumBug,\n        _dontEnums;\n\n    function checkDontEnum(){\n        _dontEnums = [\n                'toString',\n                'toLocaleString',\n                'valueOf',\n                'hasOwnProperty',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                'constructor'\n            ];\n\n        _hasDontEnumBug = true;\n\n        for (var key in {'toString': null}) {\n            _hasDontEnumBug = false;\n        }\n    }\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forIn(obj, fn, thisObj){\n        var key, i = 0;\n        // no need to check if argument is a real object that way we can use\n        // it for arrays, functions, date, etc.\n\n        //post-pone check till needed\n        if (_hasDontEnumBug == null) checkDontEnum();\n\n        for (key in obj) {\n            if (exec(fn, obj, key, thisObj) === false) {\n                break;\n            }\n        }\n\n\n        if (_hasDontEnumBug) {\n            var ctor = obj.constructor,\n                isProto = !!ctor && obj === ctor.prototype;\n\n            while (key = _dontEnums[i++]) {\n                // For constructor, if it is a prototype object the constructor\n                // is always non-enumerable unless defined otherwise (and\n                // enumerated above).  For non-prototype objects, it will have\n                // to be defined on this object, since it cannot be defined on\n                // any prototype objects.\n                //\n                // For other [[DontEnum]] properties, check if the value is\n                // different than Object prototype value.\n                if (\n                    (key !== 'constructor' ||\n                        (!isProto && hasOwn(obj, key))) &&\n                    obj[key] !== Object.prototype[key]\n                ) {\n                    if (exec(fn, obj, key, thisObj) === false) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function exec(fn, obj, key, thisObj){\n        return fn.call(thisObj, obj[key], key, obj);\n    }\n\n    module.exports = forIn;\n\n\n","var forIn = require('./forIn');\n\n    /**\n     * return a list of all enumerable properties that have function values\n     */\n    function functions(obj){\n        var keys = [];\n        forIn(obj, function(val, key){\n            if (typeof val === 'function'){\n                keys.push(key);\n            }\n        });\n        return keys.sort();\n    }\n\n    module.exports = functions;\n\n\n","\n\n    /**\n     * Create slice of source array or array-like object\n     */\n    function slice(arr, start, end){\n        var len = arr.length;\n\n        if (start == null) {\n            start = 0;\n        } else if (start < 0) {\n            start = Math.max(len + start, 0);\n        } else {\n            start = Math.min(start, len);\n        }\n\n        if (end == null) {\n            end = len;\n        } else if (end < 0) {\n            end = Math.max(len + end, 0);\n        } else {\n            end = Math.min(end, len);\n        }\n\n        var result = [];\n        while (start < end) {\n            result.push(arr[start++]);\n        }\n\n        return result;\n    }\n\n    module.exports = slice;\n\n\n","var slice = require('../array/slice');\n\n    /**\n     * Return a function that will execute in the given context, optionally adding any additional supplied parameters to the beginning of the arguments collection.\n     * @param {Function} fn  Function.\n     * @param {object} context   Execution context.\n     * @param {rest} args    Arguments (0...n arguments).\n     * @return {Function} Wrapped Function.\n     */\n    function bind(fn, context, args){\n        var argsArr = slice(arguments, 2); //curried args\n        return function(){\n            return fn.apply(context, argsArr.concat(slice(arguments)));\n        };\n    }\n\n    module.exports = bind;\n\n\n","\n\n    /**\n     * Array forEach\n     */\n    function forEach(arr, callback, thisObj) {\n        if (arr == null) {\n            return;\n        }\n        var i = -1,\n            len = arr.length;\n        while (++i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if ( callback.call(thisObj, arr[i], i, arr) === false ) {\n                break;\n            }\n        }\n    }\n\n    module.exports = forEach;\n\n\n","var functions = require('./functions');\nvar bind = require('../function/bind');\nvar forEach = require('../array/forEach');\nvar slice = require('../array/slice');\n\n    /**\n     * Binds methods of the object to be run in it's own context.\n     */\n    function bindAll(obj, rest_methodNames){\n        var keys = arguments.length > 1?\n                    slice(arguments, 1) : functions(obj);\n        forEach(keys, function(key){\n            obj[key] = bind(obj[key], obj);\n        });\n    }\n\n    module.exports = bindAll;\n\n\n","var hasOwn = require('./hasOwn');\nvar forIn = require('./forIn');\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forOwn(obj, fn, thisObj){\n        forIn(obj, function(val, key){\n            if (hasOwn(obj, key)) {\n                return fn.call(thisObj, obj[key], key, obj);\n            }\n        });\n    }\n\n    module.exports = forOwn;\n\n\n","\n\n    /**\n     * Returns the first argument provided to it.\n     */\n    function identity(val){\n        return val;\n    }\n\n    module.exports = identity;\n\n\n","\n\n    /**\n     * Returns a function that gets a property of the passed object\n     */\n    function prop(name){\n        return function(obj){\n            return obj[name];\n        };\n    }\n\n    module.exports = prop;\n\n\n","\n\n    var _rKind = /^\\[object (.*)\\]$/,\n        _toString = Object.prototype.toString,\n        UNDEF;\n\n    /**\n     * Gets the \"kind\" of value. (e.g. \"String\", \"Number\", etc)\n     */\n    function kindOf(val) {\n        if (val === null) {\n            return 'Null';\n        } else if (val === UNDEF) {\n            return 'Undefined';\n        } else {\n            return _rKind.exec( _toString.call(val) )[1];\n        }\n    }\n    module.exports = kindOf;\n\n","var kindOf = require('./kindOf');\n    /**\n     * Check if value is from a specific \"kind\".\n     */\n    function isKind(val, kind){\n        return kindOf(val) === kind;\n    }\n    module.exports = isKind;\n\n","var isKind = require('./isKind');\n    /**\n     */\n    var isArray = Array.isArray || function (val) {\n        return isKind(val, 'Array');\n    };\n    module.exports = isArray;\n\n","var forOwn = require('./forOwn');\nvar isArray = require('../lang/isArray');\n\n    function containsMatch(array, pattern) {\n        var i = -1, length = array.length;\n        while (++i < length) {\n            if (deepMatches(array[i], pattern)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function matchArray(target, pattern) {\n        var i = -1, patternLength = pattern.length;\n        while (++i < patternLength) {\n            if (!containsMatch(target, pattern[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function matchObject(target, pattern) {\n        var result = true;\n        forOwn(pattern, function(val, key) {\n            if (!deepMatches(target[key], val)) {\n                // Return false to break out of forOwn early\n                return (result = false);\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively check if the objects match.\n     */\n    function deepMatches(target, pattern){\n        if (target && typeof target === 'object') {\n            if (isArray(target) && isArray(pattern)) {\n                return matchArray(target, pattern);\n            } else {\n                return matchObject(target, pattern);\n            }\n        } else {\n            return target === pattern;\n        }\n    }\n\n    module.exports = deepMatches;\n\n\n","var identity = require('./identity');\nvar prop = require('./prop');\nvar deepMatches = require('../object/deepMatches');\n\n    /**\n     * Converts argument into a valid iterator.\n     * Used internally on most array/object/collection methods that receives a\n     * callback/iterator providing a shortcut syntax.\n     */\n    function makeIterator(src, thisObj){\n        if (src == null) {\n            return identity;\n        }\n        switch(typeof src) {\n            case 'function':\n                // function is the first to improve perf (most common case)\n                // also avoid using `Function#call` if not needed, which boosts\n                // perf a lot in some cases\n                return (typeof thisObj !== 'undefined')? function(val, i, arr){\n                    return src.call(thisObj, val, i, arr);\n                } : src;\n            case 'object':\n                return function(val){\n                    return deepMatches(val, src);\n                };\n            case 'string':\n            case 'number':\n                return prop(src);\n        }\n    }\n\n    module.exports = makeIterator;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object some\n     */\n    function some(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = false;\n        forOwn(obj, function(val, key) {\n            if (callback(val, key, obj)) {\n                result = true;\n                return false; // break\n            }\n        });\n        return result;\n    }\n\n    module.exports = some;\n\n\n","var some = require('./some');\n\n    /**\n     * Check if object contains value\n     */\n    function contains(obj, needle) {\n        return some(obj, function(val) {\n            return (val === needle);\n        });\n    }\n    module.exports = contains;\n\n\n","\n\n    /**\n     * Checks if the value is created by the `Object` constructor.\n     */\n    function isPlainObject(value) {\n        return (!!value && typeof value === 'object' &&\n            value.constructor === Object);\n    }\n\n    module.exports = isPlainObject;\n\n\n","var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /**\n     * Deeply copy missing properties in the target from the defaults.\n     */\n    function deepFillIn(target, defaults){\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while(++i < n) {\n            obj = arguments[i];\n            if (obj) {\n                // jshint loopfunc: true\n                forOwn(obj, function(newValue, key) {\n                    var curValue = target[key];\n                    if (curValue == null) {\n                        target[key] = newValue;\n                    } else if (isPlainObject(curValue) &&\n                               isPlainObject(newValue)) {\n                        deepFillIn(curValue, newValue);\n                    }\n                });\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = deepFillIn;\n\n\n","var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /**\n     * Mixes objects into the target object, recursively mixing existing child\n     * objects.\n     */\n    function deepMixIn(target, objects) {\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while(++i < n){\n            obj = arguments[i];\n            if (obj) {\n                forOwn(obj, copyProp, target);\n            }\n        }\n\n        return target;\n    }\n\n    function copyProp(val, key) {\n        var existing = this[key];\n        if (isPlainObject(val) && isPlainObject(existing)) {\n            deepMixIn(existing, val);\n        } else {\n            this[key] = val;\n        }\n    }\n\n    module.exports = deepMixIn;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object every\n     */\n    function every(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = true;\n        forOwn(obj, function(val, key) {\n            // we consider any falsy values as \"false\" on purpose so shorthand\n            // syntax can be used to check property existence\n            if (!callback(val, key, obj)) {\n                result = false;\n                return false; // break\n            }\n        });\n        return result;\n    }\n\n    module.exports = every;\n\n\n","var isKind = require('./isKind');\n    /**\n     */\n    function isObject(val) {\n        return isKind(val, 'Object');\n    }\n    module.exports = isObject;\n\n","\n\n    /**\n     * Check if both arguments are egal.\n     */\n    function is(x, y){\n        // implementation borrowed from harmony:egal spec\n        if (x === y) {\n          // 0 === -0, but they are not identical\n          return x !== 0 || 1 / x === 1 / y;\n        }\n\n        // NaN !== NaN, but they are identical.\n        // NaNs are the only non-reflexive value, i.e., if x !== x,\n        // then x is a NaN.\n        // isNaN is broken: it converts its argument to number, so\n        // isNaN(\"foo\") => true\n        return x !== x && y !== y;\n    }\n\n    module.exports = is;\n\n\n","var hasOwn = require('./hasOwn');\nvar every = require('./every');\nvar isObject = require('../lang/isObject');\nvar is = require('../lang/is');\n\n    // Makes a function to compare the object values from the specified compare\n    // operation callback.\n    function makeCompare(callback) {\n        return function(value, key) {\n            return hasOwn(this, key) && callback(value, this[key]);\n        };\n    }\n\n    function checkProperties(value, key) {\n        return hasOwn(this, key);\n    }\n\n    /**\n     * Checks if two objects have the same keys and values.\n     */\n    function equals(a, b, callback) {\n        callback = callback || is;\n\n        if (!isObject(a) || !isObject(b)) {\n            return callback(a, b);\n        }\n\n        return (every(a, makeCompare(callback), b) &&\n                every(b, checkProperties, a));\n    }\n\n    module.exports = equals;\n\n","var forEach = require('../array/forEach');\nvar slice = require('../array/slice');\nvar forOwn = require('./forOwn');\n\n    /**\n     * Copy missing properties in the obj from the defaults.\n     */\n    function fillIn(obj, var_defaults){\n        forEach(slice(arguments, 1), function(base){\n            forOwn(base, function(val, key){\n                if (obj[key] == null) {\n                    obj[key] = val;\n                }\n            });\n        });\n        return obj;\n    }\n\n    module.exports = fillIn;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Creates a new object with all the properties where the callback returns\n     * true.\n     */\n    function filterValues(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var output = {};\n        forOwn(obj, function(value, key, obj) {\n            if (callback(value, key, obj)) {\n                output[key] = value;\n            }\n        });\n\n        return output;\n    }\n    module.exports = filterValues;\n\n","var some = require('./some');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Returns first item that matches criteria\n     */\n    function find(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result;\n        some(obj, function(value, key, obj) {\n            if (callback(value, key, obj)) {\n                result = value;\n                return true; //break\n            }\n        });\n        return result;\n    }\n\n    module.exports = find;\n\n\n","var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /*\n     * Helper function to flatten to a destination object.\n     * Used to remove the need to create intermediate objects while flattening.\n     */\n    function flattenTo(obj, result, prefix, level) {\n        forOwn(obj, function (value, key) {\n            var nestedPrefix = prefix ? prefix + '.' + key : key;\n\n            if (level !== 0 && isPlainObject(value)) {\n                flattenTo(value, result, nestedPrefix, level - 1);\n            } else {\n                result[nestedPrefix] = value;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively flattens an object.\n     * A new object containing all the elements is returned.\n     * If level is specified, it will only flatten up to that level.\n     */\n    function flatten(obj, level) {\n        if (obj == null) {\n            return {};\n        }\n\n        level = level == null ? -1 : level;\n        return flattenTo(obj, {}, '', level);\n    }\n\n    module.exports = flatten;\n\n\n","var isPrimitive = require('../lang/isPrimitive');\n\n    /**\n     * get \"nested\" object property\n     */\n    function get(obj, prop){\n        var parts = prop.split('.'),\n            last = parts.pop();\n\n        while (prop = parts.shift()) {\n            obj = obj[prop];\n            if (obj == null) return;\n        }\n\n        return obj[last];\n    }\n\n    module.exports = get;\n\n\n","var get = require('./get');\n\n    var UNDEF;\n\n    /**\n     * Check if object has nested property.\n     */\n    function has(obj, prop){\n        return get(obj, prop) !== UNDEF;\n    }\n\n    module.exports = has;\n\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * Get object keys\n     */\n     var keys = Object.keys || function (obj) {\n            var keys = [];\n            forOwn(obj, function(val, key){\n                keys.push(key);\n            });\n            return keys;\n        };\n\n    module.exports = keys;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Creates a new object where all the values are the result of calling\n     * `callback`.\n     */\n    function mapValues(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var output = {};\n        forOwn(obj, function(val, key, obj) {\n            output[key] = callback(val, key, obj);\n        });\n\n        return output;\n    }\n    module.exports = mapValues;\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * checks if a object contains all given properties/values\n     */\n    function matches(target, props){\n        // can't use \"object/every\" because of circular dependency\n        var result = true;\n        forOwn(props, function(val, key){\n            if (target[key] !== val) {\n                // break loop at first difference\n                return (result = false);\n            }\n        });\n        return result;\n    }\n\n    module.exports = matches;\n\n\n","var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Return maximum value inside array\n     */\n    function max(arr, iterator, thisObj){\n        if (arr == null || !arr.length) {\n            return Infinity;\n        } else if (arr.length && !iterator) {\n            return Math.max.apply(Math, arr);\n        } else {\n            iterator = makeIterator(iterator, thisObj);\n            var result,\n                compare = -Infinity,\n                value,\n                temp;\n\n            var i = -1, len = arr.length;\n            while (++i < len) {\n                value = arr[i];\n                temp = iterator(value, i, arr);\n                if (temp > compare) {\n                    compare = temp;\n                    result = value;\n                }\n            }\n\n            return result;\n        }\n    }\n\n    module.exports = max;\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * Get object values\n     */\n    function values(obj) {\n        var vals = [];\n        forOwn(obj, function(val, key){\n            vals.push(val);\n        });\n        return vals;\n    }\n\n    module.exports = values;\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n    * Combine properties from all the objects into first one.\n    * - This method affects target object in place, if you want to create a new Object pass an empty object as first param.\n    * @param {object} target    Target Object\n    * @param {...object} objects    Objects to be combined (0...n objects).\n    * @return {object} Target Object.\n    */\n    function mixIn(target, objects){\n        var i = 0,\n            n = arguments.length,\n            obj;\n        while(++i < n){\n            obj = arguments[i];\n            if (obj != null) {\n                forOwn(obj, copyProp, target);\n            }\n        }\n        return target;\n    }\n\n    function copyProp(val, key){\n        this[key] = val;\n    }\n\n    module.exports = mixIn;\n\n","var kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\nvar mixIn = require('../object/mixIn');\n\n    /**\n     * Clone native types.\n     */\n    function clone(val){\n        switch (kindOf(val)) {\n            case 'Object':\n                return cloneObject(val);\n            case 'Array':\n                return cloneArray(val);\n            case 'RegExp':\n                return cloneRegExp(val);\n            case 'Date':\n                return cloneDate(val);\n            default:\n                return val;\n        }\n    }\n\n    function cloneObject(source) {\n        if (isPlainObject(source)) {\n            return mixIn({}, source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneRegExp(r) {\n        var flags = '';\n        flags += r.multiline ? 'm' : '';\n        flags += r.global ? 'g' : '';\n        flags += r.ignoreCase ? 'i' : '';\n        return new RegExp(r.source, flags);\n    }\n\n    function cloneDate(date) {\n        return new Date(+date);\n    }\n\n    function cloneArray(arr) {\n        return arr.slice();\n    }\n\n    module.exports = clone;\n\n\n","var clone = require('./clone');\nvar forOwn = require('../object/forOwn');\nvar kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\n\n    /**\n     * Recursively clone native types.\n     */\n    function deepClone(val, instanceClone) {\n        switch ( kindOf(val) ) {\n            case 'Object':\n                return cloneObject(val, instanceClone);\n            case 'Array':\n                return cloneArray(val, instanceClone);\n            default:\n                return clone(val);\n        }\n    }\n\n    function cloneObject(source, instanceClone) {\n        if (isPlainObject(source)) {\n            var out = {};\n            forOwn(source, function(val, key) {\n                this[key] = deepClone(val, instanceClone);\n            }, out);\n            return out;\n        } else if (instanceClone) {\n            return instanceClone(source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneArray(arr, instanceClone) {\n        var out = [],\n            i = -1,\n            n = arr.length,\n            val;\n        while (++i < n) {\n            out[i] = deepClone(arr[i], instanceClone);\n        }\n        return out;\n    }\n\n    module.exports = deepClone;\n\n\n\n","var hasOwn = require('./hasOwn');\nvar deepClone = require('../lang/deepClone');\nvar isObject = require('../lang/isObject');\n\n    /**\n     * Deep merge objects.\n     */\n    function merge() {\n        var i = 1,\n            key, val, obj, target;\n\n        // make sure we don't modify source element and it's properties\n        // objects are passed by reference\n        target = deepClone( arguments[0] );\n\n        while (obj = arguments[i++]) {\n            for (key in obj) {\n                if ( ! hasOwn(obj, key) ) {\n                    continue;\n                }\n\n                val = obj[key];\n\n                if ( isObject(val) && isObject(target[key]) ){\n                    // inception, deep merge objects\n                    target[key] = merge(target[key], val);\n                } else {\n                    // make sure arrays, regexp, date, objects are cloned\n                    target[key] = deepClone(val);\n                }\n\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = merge;\n\n\n","var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Return minimum value inside array\n     */\n    function min(arr, iterator, thisObj){\n        if (arr == null || !arr.length) {\n            return -Infinity;\n        } else if (arr.length && !iterator) {\n            return Math.min.apply(Math, arr);\n        } else {\n            iterator = makeIterator(iterator, thisObj);\n            var result,\n                compare = Infinity,\n                value,\n                temp;\n\n            var i = -1, len = arr.length;\n            while (++i < len) {\n                value = arr[i];\n                temp = iterator(value, i, arr);\n                if (temp < compare) {\n                    compare = temp;\n                    result = value;\n                }\n            }\n\n            return result;\n        }\n    }\n\n    module.exports = min;\n\n\n","var forEach = require('../array/forEach');\n\n    /**\n     * Create nested object if non-existent\n     */\n    function namespace(obj, path){\n        if (!path) return obj;\n        forEach(path.split('.'), function(key){\n            if (!obj[key]) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        });\n        return obj;\n    }\n\n    module.exports = namespace;\n\n\n","\n\n    /**\n     * Array.indexOf\n     */\n    function indexOf(arr, item, fromIndex) {\n        fromIndex = fromIndex || 0;\n        if (arr == null) {\n            return -1;\n        }\n\n        var len = arr.length,\n            i = fromIndex < 0 ? len + fromIndex : fromIndex;\n        while (i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if (arr[i] === item) {\n                return i;\n            }\n\n            i++;\n        }\n\n        return -1;\n    }\n\n    module.exports = indexOf;\n\n","var indexOf = require('./indexOf');\n\n    /**\n     * If array contains values.\n     */\n    function contains(arr, val) {\n        return indexOf(arr, val) !== -1;\n    }\n    module.exports = contains;\n\n","var map = require('./map');\nvar prop = require('../function/prop');\n\n    /**\n     * Extract a list of property values.\n     */\n    function pluck(obj, propName){\n        return map(obj, prop(propName));\n    }\n\n    module.exports = pluck;\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * Get object size\n     */\n    function size(obj) {\n        var count = 0;\n        forOwn(obj, function(){\n            count++;\n        });\n        return count;\n    }\n\n    module.exports = size;\n\n\n","var forOwn = require('./forOwn');\nvar size = require('./size');\n\n    /**\n     * Object reduce\n     */\n    function reduce(obj, callback, memo, thisObj) {\n        var initial = arguments.length > 2;\n\n        if (!size(obj) && !initial) {\n            throw new Error('reduce of empty object with no initial value');\n        }\n\n        forOwn(obj, function(value, key, list) {\n            if (!initial) {\n                memo = value;\n                initial = true;\n            }\n            else {\n                memo = callback.call(thisObj, memo, value, key, list);\n            }\n        });\n\n        return memo;\n    }\n\n    module.exports = reduce;\n\n\n","var filter = require('./filter');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object reject\n     */\n    function reject(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        return filter(obj, function(value, index, obj) {\n            return !callback(value, index, obj);\n        }, thisObj);\n    }\n\n    module.exports = reject;\n\n\n","var isKind = require('./isKind');\n    /**\n     */\n    function isFunction(val) {\n        return isKind(val, 'Function');\n    }\n    module.exports = isFunction;\n\n","var namespace = require('./namespace');\n\n    /**\n     * set \"nested\" object property\n     */\n    function set(obj, prop, val){\n        var parts = (/^(.+)\\.(.+)$/).exec(prop);\n        if (parts){\n            namespace(obj, parts[1])[parts[2]] = val;\n        } else {\n            obj[prop] = val;\n        }\n    }\n\n    module.exports = set;\n\n\n","var has = require('./has');\n\n    /**\n     * Unset object property.\n     */\n    function unset(obj, prop){\n        if (has(obj, prop)) {\n            var parts = prop.split('.'),\n                last = parts.pop();\n            while (prop = parts.shift()) {\n                obj = obj[prop];\n            }\n            return (delete obj[last]);\n\n        } else {\n            // if property doesn't exist treat as deleted\n            return true;\n        }\n    }\n\n    module.exports = unset;\n\n\n","\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'bindAll' : require('./object/bindAll'),\n    'contains' : require('./object/contains'),\n    'deepFillIn' : require('./object/deepFillIn'),\n    'deepMatches' : require('./object/deepMatches'),\n    'deepMixIn' : require('./object/deepMixIn'),\n    'equals' : require('./object/equals'),\n    'every' : require('./object/every'),\n    'fillIn' : require('./object/fillIn'),\n    'filter' : require('./object/filter'),\n    'find' : require('./object/find'),\n    'flatten' : require('./object/flatten'),\n    'forIn' : require('./object/forIn'),\n    'forOwn' : require('./object/forOwn'),\n    'functions' : require('./object/functions'),\n    'get' : require('./object/get'),\n    'has' : require('./object/has'),\n    'hasOwn' : require('./object/hasOwn'),\n    'keys' : require('./object/keys'),\n    'map' : require('./object/map'),\n    'matches' : require('./object/matches'),\n    'max' : require('./object/max'),\n    'merge' : require('./object/merge'),\n    'min' : require('./object/min'),\n    'mixIn' : require('./object/mixIn'),\n    'namespace' : require('./object/namespace'),\n    'omit' : require('./object/omit'),\n    'pick' : require('./object/pick'),\n    'pluck' : require('./object/pluck'),\n    'reduce' : require('./object/reduce'),\n    'reject' : require('./object/reject'),\n    'result' : require('./object/result'),\n    'set' : require('./object/set'),\n    'size' : require('./object/size'),\n    'some' : require('./object/some'),\n    'unset' : require('./object/unset'),\n    'values' : require('./object/values')\n};\n\n\n","var arrMax = require('../array/max');\nvar values = require('./values');\n\n    /**\n     * Returns maximum value inside object.\n     */\n    function max(obj, compareFn) {\n        return arrMax(values(obj), compareFn);\n    }\n\n    module.exports = max;\n\n","var arrMin = require('../array/min');\nvar values = require('./values');\n\n    /**\n     * Returns minimum value inside object.\n     */\n    function min(obj, iterator) {\n        return arrMin(values(obj), iterator);\n    }\n\n    module.exports = min;\n\n","var slice = require('../array/slice');\nvar contains = require('../array/contains');\n\n    /**\n     * Return a copy of the object, filtered to only contain properties except the blacklisted keys.\n     */\n    function omit(obj, var_keys){\n        var keys = typeof arguments[1] !== 'string'? arguments[1] : slice(arguments, 1),\n            out = {};\n\n        for (var property in obj) {\n            if (obj.hasOwnProperty(property) && !contains(keys, property)) {\n                out[property] = obj[property];\n            }\n        }\n        return out;\n    }\n\n    module.exports = omit;\n\n\n","var slice = require('../array/slice');\n\n    /**\n     * Return a copy of the object, filtered to only have values for the whitelisted keys.\n     */\n    function pick(obj, var_keys){\n        var keys = typeof arguments[1] !== 'string'? arguments[1] : slice(arguments, 1),\n            out = {},\n            i = 0, key;\n        while (key = keys[i++]) {\n            out[key] = obj[key];\n        }\n        return out;\n    }\n\n    module.exports = pick;\n\n\n","var isFunction = require('../lang/isFunction');\n\n    function result(obj, prop) {\n        var property = obj[prop];\n\n        if(property === undefined) {\n            return;\n        }\n\n        return isFunction(property) ? property.call(obj) : property;\n    }\n\n    module.exports = result;\n\n","(function() {\r\n    var Iso31661a2, mout, singleton;\r\n\r\n    mout = require('mout/object');\r\n\r\n    Iso31661a2 = (function() {\r\n        function Iso31661a2() {}\r\n\r\n        Iso31661a2.prototype.getCountry = function(code) {\r\n            return Iso31661a2.prototype.countries[code];\r\n        };\r\n\r\n        Iso31661a2.prototype.getCode = function(country) {\r\n            var idx, ret;\r\n            ret = null;\r\n            if (country != null) {\r\n                idx = mout.values(Iso31661a2.prototype.countries).indexOf(country);\r\n                if (idx !== -1) {\r\n                    ret = Object.keys(Iso31661a2.prototype.countries)[idx];\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        Iso31661a2.prototype.getCountries = function() {\r\n            return mout.values(Iso31661a2.prototype.countries);\r\n        };\r\n\r\n        Iso31661a2.prototype.getCodes = function() {\r\n            return Object.keys(Iso31661a2.prototype.countries);\r\n        };\r\n\r\n        Iso31661a2.prototype.getData = function() {\r\n            return Iso31661a2.prototype.countries;\r\n        };\r\n\r\n        Iso31661a2.prototype.countries = {\r\n            AF: \"Afghanistan\",\r\n            AX: \"Åland Islands\",\r\n            AL: \"Albania\",\r\n            DZ: \"Algeria\",\r\n            AS: \"American Samoa\",\r\n            AD: \"Andorra\",\r\n            AO: \"Angola\",\r\n            AI: \"Anguilla\",\r\n            AQ: \"Antarctica\",\r\n            AG: \"Antigua and Barbuda\",\r\n            AR: \"Argentina\",\r\n            AM: \"Armenia\",\r\n            AW: \"Aruba\",\r\n            AU: \"Australia\",\r\n            AT: \"Austria\",\r\n            AZ: \"Azerbaijan\",\r\n            BS: \"Bahamas\",\r\n            BH: \"Bahrain\",\r\n            BD: \"Bangladesh\",\r\n            BB: \"Barbados\",\r\n            BY: \"Belarus\",\r\n            BE: \"Belgium\",\r\n            BZ: \"Belize\",\r\n            BJ: \"Benin\",\r\n            BM: \"Bermuda\",\r\n            BT: \"Bhutan\",\r\n            BO: \"Bolivia, Plurinational State of\",\r\n            BQ: \"Bonaire, Sint Eustatius and Saba\",\r\n            BA: \"Bosnia and Herzegovina\",\r\n            BW: \"Botswana\",\r\n            BV: \"Bouvet Island\",\r\n            BR: \"Brazil\",\r\n            IO: \"British Indian Ocean Territory\",\r\n            BN: \"Brunei Darussalam\",\r\n            BG: \"Bulgaria\",\r\n            BF: \"Burkina Faso\",\r\n            BI: \"Burundi\",\r\n            KH: \"Cambodia\",\r\n            CM: \"Cameroon\",\r\n            CA: \"Canada\",\r\n            CV: \"Cape Verde\",\r\n            KY: \"Cayman Islands\",\r\n            CF: \"Central African Republic\",\r\n            TD: \"Chad\",\r\n            CL: \"Chile\",\r\n            CN: \"China\",\r\n            CX: \"Christmas Island\",\r\n            CC: \"Cocos (Keeling) Islands\",\r\n            CO: \"Colombia\",\r\n            KM: \"Comoros\",\r\n            CG: \"Congo\",\r\n            CD: \"Congo, the Democratic Republic of the\",\r\n            CK: \"Cook Islands\",\r\n            CR: \"Costa Rica\",\r\n            CI: \"Côte d'Ivoire\",\r\n            HR: \"Croatia\",\r\n            CU: \"Cuba\",\r\n            CW: \"Curaçao\",\r\n            CY: \"Cyprus\",\r\n            CZ: \"Czech Republic\",\r\n            DK: \"Denmark\",\r\n            DJ: \"Djibouti\",\r\n            DM: \"Dominica\",\r\n            DO: \"Dominican Republic\",\r\n            EC: \"Ecuador\",\r\n            EG: \"Egypt\",\r\n            SV: \"El Salvador\",\r\n            GQ: \"Equatorial Guinea\",\r\n            ER: \"Eritrea\",\r\n            EE: \"Estonia\",\r\n            ET: \"Ethiopia\",\r\n            FK: \"Falkland Islands (Malvinas)\",\r\n            FO: \"Faroe Islands\",\r\n            FJ: \"Fiji\",\r\n            FI: \"Finland\",\r\n            FR: \"France\",\r\n            GF: \"French Guiana\",\r\n            PF: \"French Polynesia\",\r\n            TF: \"French Southern Territories\",\r\n            GA: \"Gabon\",\r\n            GM: \"Gambia\",\r\n            GE: \"Georgia\",\r\n            DE: \"Germany\",\r\n            GH: \"Ghana\",\r\n            GI: \"Gibraltar\",\r\n            GR: \"Greece\",\r\n            GL: \"Greenland\",\r\n            GD: \"Grenada\",\r\n            GP: \"Guadeloupe\",\r\n            GU: \"Guam\",\r\n            GT: \"Guatemala\",\r\n            GG: \"Guernsey\",\r\n            GN: \"Guinea\",\r\n            GW: \"Guinea-Bissau\",\r\n            GY: \"Guyana\",\r\n            HT: \"Haiti\",\r\n            HM: \"Heard Island and McDonald Mcdonald Islands\",\r\n            VA: \"Holy See (Vatican City State)\",\r\n            HN: \"Honduras\",\r\n            HK: \"Hong Kong\",\r\n            HU: \"Hungary\",\r\n            IS: \"Iceland\",\r\n            IN: \"India\",\r\n            ID: \"Indonesia\",\r\n            IR: \"Iran, Islamic Republic of\",\r\n            IQ: \"Iraq\",\r\n            IE: \"Ireland\",\r\n            IM: \"Isle of Man\",\r\n            IL: \"Israel\",\r\n            IT: \"Italy\",\r\n            JM: \"Jamaica\",\r\n            JP: \"Japan\",\r\n            JE: \"Jersey\",\r\n            JO: \"Jordan\",\r\n            KZ: \"Kazakhstan\",\r\n            KE: \"Kenya\",\r\n            KI: \"Kiribati\",\r\n            KP: \"Korea, Democratic People's Republic of\",\r\n            KR: \"Korea, Republic of\",\r\n            KW: \"Kuwait\",\r\n            KG: \"Kyrgyzstan\",\r\n            LA: \"Lao People's Democratic Republic\",\r\n            LV: \"Latvia\",\r\n            LB: \"Lebanon\",\r\n            LS: \"Lesotho\",\r\n            LR: \"Liberia\",\r\n            LY: \"Libya\",\r\n            LI: \"Liechtenstein\",\r\n            LT: \"Lithuania\",\r\n            LU: \"Luxembourg\",\r\n            MO: \"Macao\",\r\n            MK: \"Macedonia, the Former Yugoslav Republic of\",\r\n            MG: \"Madagascar\",\r\n            MW: \"Malawi\",\r\n            MY: \"Malaysia\",\r\n            MV: \"Maldives\",\r\n            ML: \"Mali\",\r\n            MT: \"Malta\",\r\n            MH: \"Marshall Islands\",\r\n            MQ: \"Martinique\",\r\n            MR: \"Mauritania\",\r\n            MU: \"Mauritius\",\r\n            YT: \"Mayotte\",\r\n            MX: \"Mexico\",\r\n            FM: \"Micronesia, Federated States of\",\r\n            MD: \"Moldova, Republic of\",\r\n            MC: \"Monaco\",\r\n            MN: \"Mongolia\",\r\n            ME: \"Montenegro\",\r\n            MS: \"Montserrat\",\r\n            MA: \"Morocco\",\r\n            MZ: \"Mozambique\",\r\n            MM: \"Myanmar\",\r\n            NA: \"Namibia\",\r\n            NR: \"Nauru\",\r\n            NP: \"Nepal\",\r\n            NL: \"Netherlands\",\r\n            NC: \"New Caledonia\",\r\n            NZ: \"New Zealand\",\r\n            NI: \"Nicaragua\",\r\n            NE: \"Niger\",\r\n            NG: \"Nigeria\",\r\n            NU: \"Niue\",\r\n            NF: \"Norfolk Island\",\r\n            MP: \"Northern Mariana Islands\",\r\n            NO: \"Norway\",\r\n            OM: \"Oman\",\r\n            PK: \"Pakistan\",\r\n            PW: \"Palau\",\r\n            PS: \"Palestine, State of\",\r\n            PA: \"Panama\",\r\n            PG: \"Papua New Guinea\",\r\n            PY: \"Paraguay\",\r\n            PE: \"Peru\",\r\n            PH: \"Philippines\",\r\n            PN: \"Pitcairn\",\r\n            PL: \"Poland\",\r\n            PT: \"Portugal\",\r\n            PR: \"Puerto Rico\",\r\n            QA: \"Qatar\",\r\n            RE: \"Réunion\",\r\n            RO: \"Romania\",\r\n            RU: \"Russian Federation\",\r\n            RW: \"Rwanda\",\r\n            BL: \"Saint Barthélemy\",\r\n            SH: \"Saint Helena, Ascension and Tristan da Cunha\",\r\n            KN: \"Saint Kitts and Nevis\",\r\n            LC: \"Saint Lucia\",\r\n            MF: \"Saint Martin (French part)\",\r\n            PM: \"Saint Pierre and Miquelon\",\r\n            VC: \"Saint Vincent and the Grenadines\",\r\n            WS: \"Samoa\",\r\n            SM: \"San Marino\",\r\n            ST: \"Sao Tome and Principe\",\r\n            SA: \"Saudi Arabia\",\r\n            SN: \"Senegal\",\r\n            RS: \"Serbia\",\r\n            SC: \"Seychelles\",\r\n            SL: \"Sierra Leone\",\r\n            SG: \"Singapore\",\r\n            SX: \"Sint Maarten (Dutch part)\",\r\n            SK: \"Slovakia\",\r\n            SI: \"Slovenia\",\r\n            SB: \"Solomon Islands\",\r\n            SO: \"Somalia\",\r\n            ZA: \"South Africa\",\r\n            GS: \"South Georgia and the South Sandwich Islands\",\r\n            SS: \"South Sudan\",\r\n            ES: \"Spain\",\r\n            LK: \"Sri Lanka\",\r\n            SD: \"Sudan\",\r\n            SR: \"Suriname\",\r\n            SJ: \"Svalbard and Jan Mayen\",\r\n            SZ: \"Swaziland\",\r\n            SE: \"Sweden\",\r\n            CH: \"Switzerland\",\r\n            SY: \"Syrian Arab Republic\",\r\n            TW: \"Taiwan, Province of China\",\r\n            TJ: \"Tajikistan\",\r\n            TZ: \"Tanzania, United Republic of\",\r\n            TH: \"Thailand\",\r\n            TL: \"Timor-Leste\",\r\n            TG: \"Togo\",\r\n            TK: \"Tokelau\",\r\n            TO: \"Tonga\",\r\n            TT: \"Trinidad and Tobago\",\r\n            TN: \"Tunisia\",\r\n            TR: \"Turkey\",\r\n            TM: \"Turkmenistan\",\r\n            TC: \"Turks and Caicos Islands\",\r\n            TV: \"Tuvalu\",\r\n            UG: \"Uganda\",\r\n            UA: \"Ukraine\",\r\n            AE: \"United Arab Emirates\",\r\n            GB: \"United Kingdom\",\r\n            US: \"United States\",\r\n            UM: \"United States Minor Outlying Islands\",\r\n            UY: \"Uruguay\",\r\n            UZ: \"Uzbekistan\",\r\n            VU: \"Vanuatu\",\r\n            VE: \"Venezuela, Bolivarian Republic of\",\r\n            VN: \"Viet Nam\",\r\n            VG: \"Virgin Islands, British\",\r\n            VI: \"Virgin Islands, U.S.\",\r\n            WF: \"Wallis and Futuna\",\r\n            EH: \"Western Sahara\",\r\n            YE: \"Yemen\",\r\n            ZM: \"Zambia\",\r\n            ZW: \"Zimbabwe\"\r\n        };\r\n\r\n        return Iso31661a2;\r\n\r\n    })();\r\n\r\n    singleton = null;\r\n\r\n    module.exports = (function() {\r\n        return singleton != null ? singleton : singleton = new Iso31661a2();\r\n    })();\r\n\r\n}).call(this);\r\n","import LanguageCode from 'iso-639-1-zh'\nimport CountryCode from 'iso-3166-1-alpha-2'\n\nconst REG = /^([a-z]{2})-([A-Z]{2})$/\n\nexport default class LocaleCode {\n  /* language iso-639-1 */\n  static getLanguageCode(code) {\n    var match = code.match(REG)\n    if(!match || match.length < 1) return ''\n    return match[1]\n  }\n\n  static getLanguageName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getName(languageCode)\n  }\n\n  static getLanguageNativeName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getNativeName(languageCode)\n  }\n\n  static getLanguageZhName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getZhName(languageCode)\n  }\n\n  static validateLanguageCode(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.validate(languageCode)\n  }\n\n  static getLanguages(codes) {\n    var list = []\n    for (var i = 0; i < codes.length; i++) {\n      list.push({\n        code:codes[i], \n        name: LocaleCode.getLanguageName(codes[i]),\n        nativeName: LocaleCode.getLanguageNativeName(codes[i]),\n        zhName: LocaleCode.getLanguageZhName(codes[i])\n      })\n    }\n    return list\n  }\n\n  /* country iso-3166-1-alpha-2 */\n  static getCountryCode(code) {\n    var match = code.match(REG)\n    if(!match || match.length < 2) return ''\n    return match[2]\n  }\n  static getCountryName(code) {\n    var countryCode = LocaleCode.getCountryCode(code)\n    return CountryCode.getCountry(countryCode)\n  }\n  static validateCountryCode(code) {\n    code = LocaleCode.getCountryCode(code)\n    if(CountryCode.getCodes().indexOf(code) === -1) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /* validate */\n  static validate(code) {\n    var match = code.match(REG)\n    if(match && match.length === 3 && \n      LocaleCode.validateLanguageCode(code) &&\n      LocaleCode.validateCountryCode(code)) {\n      return true\n    } else {\n      return false\n    }\n  }\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nexport default v1;","import bytesToUuid from './bytesToUuid.js';\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = new Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  var generateUUID = function generateUUID(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n    if (typeof value == 'string') value = stringToBytes(value);\n    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3\n\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  }; // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name;\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var i;\n  var x;\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  var hex;\n\n  for (i = 0; i < length32; i += 8) {\n    x = input[i >> 5] >>> i % 32 & 0xff;\n    hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(len + 64 >>> 9 << 4) + 14] = len;\n  var i;\n  var olda;\n  var oldb;\n  var oldc;\n  var oldd;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  var i;\n  var output = [];\n  output[(input.length >> 2) - 1] = undefined;\n\n  for (i = 0; i < output.length; i += 1) {\n    output[i] = 0;\n  }\n\n  var length8 = input.length * 8;\n\n  for (i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var i = 0; i < N; i++) {\n    M[i] = new Array(16);\n\n    for (var j = 0; j < 16; j++) {\n      M[i][j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var i = 0; i < N; i++) {\n    var W = new Array(80);\n\n    for (var t = 0; t < 16; t++) {\n      W[t] = M[i][t];\n    }\n\n    for (var t = 16; t < 80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t = 0; t < 80; t++) {\n      var s = Math.floor(t / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction generateDownsampler(sourceSampleRate, targetSampleRate) {\n    const resampleRatio = sourceSampleRate / targetSampleRate;\n    const filter = generateFilter(sourceSampleRate, targetSampleRate / 2, 23);\n    let buffer = new Float32Array(0);\n    return (input) => {\n        const inputBuffer = new Float32Array(buffer.length + input.length);\n        inputBuffer.set(buffer, 0);\n        inputBuffer.set(input, buffer.length);\n        const outputLength = Math.ceil((inputBuffer.length - filter.length) / resampleRatio);\n        const outputBuffer = new Float32Array(outputLength);\n        for (let i = 0; i < outputLength; i++) {\n            const offset = Math.round(resampleRatio * i);\n            for (let j = 0; j < filter.length; j++) {\n                outputBuffer[i] += inputBuffer[offset + j] * filter[j];\n            }\n        }\n        const remainingOffset = Math.round(resampleRatio * outputLength);\n        if (remainingOffset < inputBuffer.length) {\n            buffer = inputBuffer.slice(remainingOffset);\n        }\n        else {\n            buffer = new Float32Array(0);\n        }\n        return outputBuffer;\n    };\n}\nexports.generateDownsampler = generateDownsampler;\nfunction float32ToInt16(buffer) {\n    let l = buffer.length;\n    const buf = new Int16Array(l);\n    while (l-- > 0) {\n        buf[l] = buffer[l] * (buffer[l] < 0 ? 0x8000 : 0x7fff);\n    }\n    return buf.buffer;\n}\nexports.float32ToInt16 = float32ToInt16;\nfunction generateFilter(sourceSampleRate, targetSampleRate, length) {\n    if (length % 2 === 0) {\n        throw Error('Filter length must be odd');\n    }\n    const filter = new Array(length);\n    let sum = 0;\n    for (let i = 0; i < length; i++) {\n        const x = sinc(((2 * targetSampleRate) / sourceSampleRate) * (i - (length - 1) / 2));\n        sum += x;\n        filter[i] = x;\n    }\n    for (let i = 0; i < length; i++) {\n        filter[i] = filter[i] / sum;\n    }\n    return filter;\n}\nfunction sinc(x) {\n    if (x === 0.0) {\n        return 1.0;\n    }\n    const piX = Math.PI * x;\n    return Math.sin(piX) / piX;\n}\n//# sourceMappingURL=downsampler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Default sample rate for microphone streams.\n * @public\n */\nexports.DefaultSampleRate = 16000;\n/**\n * Error to be thrown when the microphone was accessed before it was initialized.\n * @public\n */\nexports.ErrNotInitialized = new Error('Microphone is not initialized');\n/**\n * Error to be thrown when the initialize method of a Microphone instance is called more than once.\n * @public\n */\nexports.ErrAlreadyInitialized = new Error('Microphone is already initialized');\n/**\n * Error to be thrown when the device does not support the Microphone instance's target audio APIs.\n * @public\n */\nexports.ErrDeviceNotSupported = new Error('Current device does not support microphone API');\n/**\n * Error to be thrown when user did not give consent to the application to record audio.\n * @public\n */\nexports.ErrNoAudioConsent = new Error('Microphone consent is no given');\n//# sourceMappingURL=const.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst downsampler_1 = require(\"./downsampler\");\nconst const_1 = require(\"./const\");\nclass BrowserMicrophone {\n    constructor(sampleRate) {\n        this.onAudioCb = () => { };\n        this.sampleRate = sampleRate;\n    }\n    onAudio(cb) {\n        this.onAudioCb = cb;\n    }\n    initialize(cb) {\n        var _a;\n        if (this.audioTrack !== undefined) {\n            return cb(const_1.ErrAlreadyInitialized);\n        }\n        if (((_a = window.navigator) === null || _a === void 0 ? void 0 : _a.mediaDevices) === undefined) {\n            return cb(const_1.ErrDeviceNotSupported);\n        }\n        window.navigator.mediaDevices\n            .getUserMedia({ audio: true, video: false })\n            .then(mediaStream => {\n            this.mediaStream = mediaStream;\n            this.audioTrack = this.mediaStream.getAudioTracks()[0];\n            // Mute the microphone, since that is the chosen initial state.\n            this.audioTrack.enabled = false;\n            if (window.AudioContext !== undefined) {\n                this.audioContext = new window.AudioContext();\n            }\n            else if (window.webkitAudioContext !== undefined) {\n                // eslint-disable-next-line new-cap\n                this.audioContext = new window.webkitAudioContext();\n            }\n            else {\n                throw Error('Microphone functionality is not supported in your browser');\n            }\n            this.downsampler = downsampler_1.generateDownsampler(this.audioContext.sampleRate, this.sampleRate);\n            this.audioProcessor = this.audioContext.createScriptProcessor(4096, 1, 1);\n            // Connect microphone to processor.\n            this.audioContext.createMediaStreamSource(this.mediaStream).connect(this.audioProcessor);\n            // Connect processor to destination.\n            this.audioProcessor.connect(this.audioContext.destination);\n            // Bind audio handler to receive audio data.\n            this.audioProcessor.onaudioprocess = audioProcessingEvent => {\n                if (this.audioTrack === undefined) {\n                    throw Error('Microphone audio track is not initialized');\n                }\n                if (this.downsampler === undefined) {\n                    throw Error('Microphone downsampler is not initialized');\n                }\n                // Skip audio if the mic is muted.\n                if (!this.audioTrack.enabled) {\n                    return;\n                }\n                const downsampled = downsampler_1.float32ToInt16(this.downsampler(audioProcessingEvent.inputBuffer.getChannelData(0)));\n                this.onAudioCb(downsampled);\n            };\n            cb();\n        })\n            .catch(() => {\n            cb(const_1.ErrNoAudioConsent);\n        });\n    }\n    close(cb) {\n        if (this.mediaStream === undefined) {\n            return cb(const_1.ErrNotInitialized);\n        }\n        // Mute before closing, to make it graceful.\n        this.mute();\n        // Stop and disconnect media stream / audio context.\n        this.mediaStream.getTracks().forEach(t => t.stop());\n        if (this.audioProcessor !== undefined) {\n            this.audioProcessor.disconnect();\n        }\n        // If audio context is not initialized, we don't need to close it.\n        if (this.audioContext === undefined) {\n            return cb();\n        }\n        // Unset all properties, so that the microphone can be re-initialized.\n        const callback = (err) => {\n            this.mediaStream = undefined;\n            this.audioTrack = undefined;\n            this.audioContext = undefined;\n            this.downsampler = undefined;\n            this.audioProcessor = undefined;\n            if (err !== undefined) {\n                return cb(err);\n            }\n            return cb();\n        };\n        this.audioContext\n            .close()\n            .then(callback)\n            .catch(callback);\n    }\n    mute() {\n        if (this.audioTrack === undefined) {\n            return;\n        }\n        this.audioTrack.enabled = false;\n    }\n    unmute() {\n        if (this.audioTrack === undefined) {\n            return;\n        }\n        this.audioTrack.enabled = true;\n    }\n}\nexports.BrowserMicrophone = BrowserMicrophone;\n//# sourceMappingURL=browser_microphone.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./browser_microphone\"));\n__export(require(\"./const\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebsocketResponseType;\n(function (WebsocketResponseType) {\n    WebsocketResponseType[\"Started\"] = \"started\";\n    WebsocketResponseType[\"Stopped\"] = \"stopped\";\n    WebsocketResponseType[\"SegmentEnd\"] = \"segment_end\";\n    WebsocketResponseType[\"Transcript\"] = \"transcript\";\n    WebsocketResponseType[\"Entity\"] = \"entity\";\n    WebsocketResponseType[\"Intent\"] = \"intent\";\n    WebsocketResponseType[\"TentativeTranscript\"] = \"tentative_transcript\";\n    WebsocketResponseType[\"TentativeEntities\"] = \"tentative_entities\";\n    WebsocketResponseType[\"TentativeIntent\"] = \"tentative_intent\";\n})(WebsocketResponseType = exports.WebsocketResponseType || (exports.WebsocketResponseType = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\nclass Websocket {\n    constructor(baseUrl, appId, language, sampleRate) {\n        this.startCbs = [];\n        this.stopCbs = [];\n        this.onResponseCb = () => { };\n        this.onCloseCb = () => { };\n        this.onWebsocketMessage = (event) => {\n            let response;\n            try {\n                response = JSON.parse(event.data);\n            }\n            catch (e) {\n                console.error('[SpeechlyClient] Error parsing response from the server:', e);\n                return;\n            }\n            switch (response.type) {\n                case types_1.WebsocketResponseType.Started:\n                    this.startCbs.forEach(cb => {\n                        try {\n                            cb(undefined, response.audio_context);\n                        }\n                        catch (e) {\n                            console.error('[SpeechlyClient] Error while invoking \"onStart\" callback:', e);\n                        }\n                    });\n                    this.startCbs.length = 0;\n                    break;\n                case types_1.WebsocketResponseType.Stopped:\n                    this.stopCbs.forEach(cb => {\n                        try {\n                            cb(undefined, response.audio_context);\n                        }\n                        catch (e) {\n                            console.error('[SpeechlyClient] Error while invoking \"onStop\" callback:', e);\n                        }\n                    });\n                    this.stopCbs.length = 0;\n                    break;\n                default:\n                    this.onResponseCb(response);\n            }\n        };\n        this.onWebsocketClose = (event) => {\n            this.onCloseCb(Error(`Websocket was closed: ${event.reason}`));\n        };\n        this.onWebsocketError = (event) => {\n            this.close(1000, 'Client disconnecting due to an error');\n            this.onCloseCb(Error('Websocket was closed because of error'));\n        };\n        this.baseUrl = baseUrl;\n        this.languageCode = language;\n        this.sampleRate = sampleRate;\n        this.appId = appId;\n    }\n    onResponse(cb) {\n        this.onResponseCb = cb;\n    }\n    onClose(cb) {\n        this.onCloseCb = cb;\n    }\n    initialize(deviceId, cb) {\n        if (this.websocket !== undefined) {\n            return cb(Error('Cannot initialize an already initialized websocket client'));\n        }\n        const url = generateWsUrl(this.baseUrl, deviceId, this.languageCode, this.sampleRate);\n        initializeWebsocket(url, this.appId, (err, ws) => {\n            if (err !== undefined) {\n                return cb(err);\n            }\n            this.websocket = ws;\n            this.websocket.addEventListener('message', this.onWebsocketMessage);\n            this.websocket.addEventListener('error', this.onWebsocketError);\n            this.websocket.addEventListener('close', this.onWebsocketClose);\n            return cb();\n        });\n    }\n    close(closeCode, closeReason) {\n        if (this.websocket === undefined) {\n            return Error('Websocket is not open');\n        }\n        this.websocket.removeEventListener('message', this.onWebsocketMessage);\n        this.websocket.removeEventListener('error', this.onWebsocketError);\n        this.websocket.removeEventListener('close', this.onWebsocketClose);\n        this.websocket.close(closeCode, closeReason);\n        this.websocket = undefined;\n    }\n    start(cb) {\n        if (!this.isOpen()) {\n            return cb(Error('Websocket is not ready'));\n        }\n        this.startCbs.push(cb);\n        const ws = this.websocket;\n        ws.send(StartEventJSON);\n    }\n    stop(cb) {\n        if (!this.isOpen()) {\n            return cb(new Error('websocket is not ready'));\n        }\n        this.stopCbs.push(cb);\n        const ws = this.websocket;\n        ws.send(StopEventJSON);\n    }\n    send(data) {\n        if (!this.isOpen()) {\n            return Error('Cannot send data through inactive websocket');\n        }\n        const ws = this.websocket;\n        ws.send(data);\n    }\n    isOpen() {\n        return this.websocket !== undefined && this.websocket.readyState === this.websocket.OPEN;\n    }\n}\nexports.Websocket = Websocket;\nconst StartEventJSON = JSON.stringify({ event: 'start' });\nconst StopEventJSON = JSON.stringify({ event: 'stop' });\nfunction generateWsUrl(baseUrl, deviceId, languageCode, sampleRate) {\n    const params = new URLSearchParams();\n    params.append('deviceId', deviceId);\n    params.append('languageCode', languageCode);\n    params.append('sampleRate', sampleRate.toString());\n    return `${baseUrl}?${params.toString()}`;\n}\nfunction initializeWebsocket(url, protocol, cb) {\n    const ws = new WebSocket(url, protocol);\n    const errhandler = () => {\n        ws.removeEventListener('close', errhandler);\n        ws.removeEventListener('error', errhandler);\n        ws.removeEventListener('open', openhandler);\n        cb(Error('Connection failed'));\n    };\n    const openhandler = () => {\n        ws.removeEventListener('close', errhandler);\n        ws.removeEventListener('error', errhandler);\n        ws.removeEventListener('open', openhandler);\n        cb(undefined, ws);\n    };\n    ws.addEventListener('close', errhandler);\n    ws.addEventListener('error', errhandler);\n    ws.addEventListener('open', openhandler);\n}\n//# sourceMappingURL=client.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./client\"));\n__export(require(\"./types\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SegmentState {\n    constructor(ctxId, sId) {\n        this.isFinalized = false;\n        this.words = [];\n        this.entities = new Map();\n        this.intent = { intent: '', isFinal: false };\n        this.contextId = ctxId;\n        this.id = sId;\n    }\n    toSegment() {\n        let i = 0;\n        const entities = new Array(this.entities.size);\n        this.entities.forEach(v => {\n            entities[i] = v;\n            i++;\n        });\n        return {\n            id: this.id,\n            contextId: this.contextId,\n            isFinal: this.isFinalized,\n            words: this.words,\n            entities: entities,\n            intent: this.intent\n        };\n    }\n    updateTranscript(words) {\n        words.forEach(w => {\n            this.words[w.index] = w;\n        });\n        return this;\n    }\n    updateEntities(entities) {\n        entities.forEach(e => this.entities.set(entityMapKey(e), e));\n        return this;\n    }\n    updateIntent(intent) {\n        if (!this.intent.isFinal) {\n            this.intent = intent;\n        }\n        return this;\n    }\n    finalize() {\n        // Filter away any entities which were not finalized.\n        this.entities.forEach((val, key) => {\n            if (!val.isFinal) {\n                this.entities.delete(key);\n            }\n        });\n        // Filter away any transcripts which were not finalized.\n        this.words = this.words.filter(w => w.isFinal);\n        if (!this.intent.isFinal) {\n            this.intent.intent = '';\n            this.intent.isFinal = true;\n        }\n        // Mark as final.\n        this.isFinalized = true;\n        return this;\n    }\n}\nexports.SegmentState = SegmentState;\nfunction entityMapKey(e) {\n    return `${e.startPosition.toString()}:${e.endPosition.toString()}`;\n}\n//# sourceMappingURL=segment.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction parseTentativeTranscript(data) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return data.words.map(({ word, index, start_timestamp, end_timestamp }) => {\n        return {\n            value: word,\n            index: index,\n            startTimestamp: start_timestamp,\n            endTimestamp: end_timestamp,\n            isFinal: false\n        };\n    });\n}\nexports.parseTentativeTranscript = parseTentativeTranscript;\nfunction parseTranscript(data) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return {\n        value: data.word,\n        index: data.index,\n        startTimestamp: data.start_timestamp,\n        endTimestamp: data.end_timestamp,\n        isFinal: true\n    };\n}\nexports.parseTranscript = parseTranscript;\nfunction parseTentativeEntities(data) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return data.entities.map(({ entity, value, start_position, end_position }) => {\n        return {\n            type: entity,\n            value: value,\n            startPosition: start_position,\n            endPosition: end_position,\n            isFinal: false\n        };\n    });\n}\nexports.parseTentativeEntities = parseTentativeEntities;\nfunction parseEntity(data) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return {\n        type: data.entity,\n        value: data.value,\n        startPosition: data.start_position,\n        endPosition: data.end_position,\n        isFinal: true\n    };\n}\nexports.parseEntity = parseEntity;\nfunction parseIntent(data, isFinal) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return {\n        intent: data.intent,\n        isFinal: isFinal\n    };\n}\nexports.parseIntent = parseIntent;\n//# sourceMappingURL=parsers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Error to be thrown if storage API is not supported by the device.\n * @public\n */\nexports.ErrNoStorageSupport = new Error('Current device does not support storage API');\n/**\n * Error to be thrown if requested key was not found in the storage.\n * @public\n */\nexports.ErrKeyNotFound = new Error('Requested key was not present in storage');\n//# sourceMappingURL=const.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst const_1 = require(\"./const\");\nclass LocalStorage {\n    constructor() {\n        this.storage = window.localStorage;\n    }\n    initialize(cb) {\n        cb();\n    }\n    close(cb) {\n        cb();\n    }\n    get(key, cb) {\n        const val = this.storage.getItem(key);\n        if (val === null) {\n            return cb(const_1.ErrKeyNotFound);\n        }\n        return cb(undefined, val);\n    }\n    set(key, val, cb) {\n        this.storage.setItem(key, val);\n        return cb();\n    }\n}\nexports.LocalStorage = LocalStorage;\n//# sourceMappingURL=storage.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./storage\"));\n__export(require(\"./const\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst locale_code_1 = __importDefault(require(\"locale-code\"));\nconst uuid_1 = require(\"uuid\");\nconst microphone_1 = require(\"../microphone\");\nconst websocket_1 = require(\"../websocket\");\nconst state_1 = require(\"./state\");\nconst segment_1 = require(\"./segment\");\nconst parsers_1 = require(\"./parsers\");\nconst types_1 = require(\"./types\");\nconst storage_1 = require(\"../storage\");\nconst deviceIdStorageKey = 'speechly-device-id';\nconst defaultSpeechlyURL = 'wss://api.speechly.com/ws';\nconst initialReconnectDelay = 1000;\nconst initialReconnectCount = 5;\n/**\n * A client for Speechly Spoken Language Understanding (SLU) API. The client handles initializing the microphone\n * and websocket connection to Speechly API, passing control events and audio stream to the API, reading the responses\n * and dispatching them, as well as providing a high-level API for interacting with so-called speech segments.\n * @public\n */\nclass Client {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f;\n        this.activeContexts = new Map();\n        this.state = types_1.ClientState.Disconnected;\n        this.reconnectAttemptCount = initialReconnectCount;\n        this.nextReconnectDelay = initialReconnectDelay;\n        this.stateChangeCb = () => { };\n        this.segmentChangeCb = () => { };\n        this.tentativeTranscriptCb = () => { };\n        this.tentativeEntitiesCb = () => { };\n        this.tentativeIntentCb = () => { };\n        this.transcriptCb = () => { };\n        this.entityCb = () => { };\n        this.intentCb = () => { };\n        this.handleWebsocketResponse = (response) => {\n            if (this.debug) {\n                console.log('[SpeechlyClient]', 'Received response', response);\n            }\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            const { audio_context, segment_id, type } = response;\n            let { data } = response;\n            let segmentState = this.activeContexts.get(audio_context);\n            if (segmentState === undefined) {\n                console.warn('[SpeechlyClient]', 'Received response for non-existent context', audio_context);\n                return;\n            }\n            switch (type) {\n                case websocket_1.WebsocketResponseType.TentativeTranscript:\n                    data = data;\n                    const words = parsers_1.parseTentativeTranscript(data);\n                    this.tentativeTranscriptCb(audio_context, segment_id, words, data.transcript);\n                    segmentState = segmentState.updateTranscript(words);\n                    break;\n                case websocket_1.WebsocketResponseType.Transcript:\n                    data = data;\n                    const word = parsers_1.parseTranscript(data);\n                    this.transcriptCb(audio_context, segment_id, word);\n                    segmentState = segmentState.updateTranscript([word]);\n                    break;\n                case websocket_1.WebsocketResponseType.TentativeEntities:\n                    data = data;\n                    const entities = parsers_1.parseTentativeEntities(data);\n                    this.tentativeEntitiesCb(audio_context, segment_id, entities);\n                    segmentState = segmentState.updateEntities(entities);\n                    break;\n                case websocket_1.WebsocketResponseType.Entity:\n                    data = data;\n                    const entity = parsers_1.parseEntity(data);\n                    this.entityCb(audio_context, segment_id, entity);\n                    segmentState = segmentState.updateEntities([entity]);\n                    break;\n                case websocket_1.WebsocketResponseType.TentativeIntent:\n                    data = data;\n                    const tentativeIntent = parsers_1.parseIntent(data, false);\n                    this.tentativeIntentCb(audio_context, segment_id, tentativeIntent);\n                    segmentState = segmentState.updateIntent(tentativeIntent);\n                    break;\n                case websocket_1.WebsocketResponseType.Intent:\n                    data = data;\n                    const intent = parsers_1.parseIntent(data, true);\n                    this.intentCb(audio_context, segment_id, intent);\n                    segmentState = segmentState.updateIntent(intent);\n                    break;\n                case websocket_1.WebsocketResponseType.SegmentEnd:\n                    segmentState = segmentState.finalize();\n                    break;\n                default:\n                // TODO: handle unexpected response types.\n            }\n            this.segmentChangeCb(segmentState.toSegment());\n            if (segmentState.isFinalized) {\n                // If previous segment was finalized, replace it with an empty one.\n                this.activeContexts.set(audio_context, new segment_1.SegmentState(audio_context, segmentState.id + 1));\n            }\n            else {\n                // If the segment was not yet finalized, update it in the state.\n                this.activeContexts.set(audio_context, segmentState);\n            }\n        };\n        this.handleWebsocketClosure = (err) => {\n            if (this.debug) {\n                console.error('[SpeechlyClient]', 'Server connection closed', err);\n            }\n            this.reconnectWebsocket();\n        };\n        this.handleMicrophoneAudio = (audio) => {\n            if (this.state === types_1.ClientState.Recording) {\n                if (this.debug) {\n                    console.log('[SpeechlyClient]', 'Sending audio data', audio);\n                }\n                this.websocket.send(audio);\n            }\n        };\n        if (!locale_code_1.default.validate(options.language)) {\n            throw Error(`[SpeechlyClient] Invalid language \"${options.language}\"`);\n        }\n        this.debug = (_a = options.debug) !== null && _a !== void 0 ? _a : false;\n        this.storage = (_b = options.storage) !== null && _b !== void 0 ? _b : new storage_1.LocalStorage();\n        this.microphone = (_c = options.microphone) !== null && _c !== void 0 ? _c : new microphone_1.BrowserMicrophone((_d = options.sampleRate) !== null && _d !== void 0 ? _d : microphone_1.DefaultSampleRate);\n        this.websocket = new websocket_1.Websocket((_e = options.url) !== null && _e !== void 0 ? _e : defaultSpeechlyURL, options.appId, options.language, (_f = options.sampleRate) !== null && _f !== void 0 ? _f : microphone_1.DefaultSampleRate);\n        this.microphone.onAudio(this.handleMicrophoneAudio);\n        this.websocket.onResponse(this.handleWebsocketResponse);\n        this.websocket.onClose(this.handleWebsocketClosure);\n    }\n    /**\n     * Initializes the client, by initializing the microphone and establishing connection to the API.\n     *\n     * This function HAS to be invoked by a user by e.g. binding it to a button press,\n     * or some other user-performed action.\n     *\n     * If this function is invoked without a user interaction,\n     * the microphone functionality will not work due to security restrictions by the browser.\n     *\n     * @param cb - the callback which is invoked when the initialization is complete.\n     */\n    initialize(cb = () => { }) {\n        if (this.state !== types_1.ClientState.Disconnected) {\n            return cb(new Error('Cannot initialize client - client is not in Disconnected state'));\n        }\n        this.setState(types_1.ClientState.Connecting);\n        this.microphone.initialize((err) => {\n            if (err !== undefined) {\n                switch (err) {\n                    case microphone_1.ErrDeviceNotSupported:\n                        this.setState(types_1.ClientState.NoBrowserSupport);\n                        break;\n                    case microphone_1.ErrNoAudioConsent:\n                        this.setState(types_1.ClientState.NoAudioConsent);\n                        break;\n                    default:\n                        this.setState(types_1.ClientState.Failed);\n                }\n                return cb(err);\n            }\n            const initializeWebsocket = (deviceId, cb) => {\n                this.websocket.initialize(deviceId, (err) => {\n                    if (err !== undefined) {\n                        this.reconnectWebsocket();\n                        // TODO: I think this can be confusing for the end user.\n                        // We should only invoke callback when initialization is finished, either successfully or with an error.\n                        // We can instead pass the callback to reconnect and let that invoke it.\n                        return cb();\n                    }\n                    this.setState(types_1.ClientState.Connected);\n                    return cb();\n                });\n            };\n            this.storage.initialize((err) => {\n                if (err !== undefined) {\n                    return cb(err);\n                }\n                this.storage.get(deviceIdStorageKey, (err, val) => {\n                    if (err !== undefined) {\n                        // Device ID was not found in the storage, generate new ID and store it.\n                        const deviceId = uuid_1.v4();\n                        this.storage.set(deviceIdStorageKey, deviceId, (err) => {\n                            if (err !== undefined) {\n                                // At this point we couldn't load device ID from storage, nor we could store a new one there.\n                                // Give up initialisation and return an error.\n                                return cb(err);\n                            }\n                            // Newly generated ID was stored, proceed with initialization.\n                            this.deviceId = deviceId;\n                            return initializeWebsocket(deviceId, cb);\n                        });\n                    }\n                    // Device ID was found in the storage, proceed with initialization.\n                    const deviceId = val;\n                    this.deviceId = deviceId;\n                    return initializeWebsocket(deviceId, cb);\n                });\n            });\n        });\n    }\n    /**\n     * Closes the client by closing the API connection and disabling the microphone.\n     * @param cb - the callback which is invoked when closure is complete.\n     */\n    close(cb = () => { }) {\n        this.storage.close((err) => {\n            const errs = [];\n            if (err !== undefined) {\n                errs.push(err.message);\n            }\n            this.microphone.close((err) => {\n                if (err !== undefined) {\n                    errs.push(err.message);\n                }\n                const wsErr = this.websocket.close(1000, 'client disconnecting');\n                if (wsErr !== undefined) {\n                    errs.push(wsErr.message);\n                }\n                this.activeContexts.clear();\n                this.setState(types_1.ClientState.Disconnected);\n                return errs.length > 0 ? cb(Error(errs.join(','))) : cb();\n            });\n        });\n    }\n    /**\n     * Starts a new SLU context by sending a start context event to the API and unmuting the microphone.\n     * @param cb - the callback which is invoked when the context start was acknowledged by the API.\n     */\n    startContext(cb = () => { }) {\n        if (this.state !== types_1.ClientState.Connected) {\n            return cb(Error('Cannot start context - client is not connected'));\n        }\n        // Re-set reconnection settings here, so that we avoid flip-flopping in `_reconnectWebsocket`.\n        this.reconnectAttemptCount = initialReconnectCount;\n        this.nextReconnectDelay = initialReconnectDelay;\n        this.setState(types_1.ClientState.Starting);\n        this.websocket.start((err, contextId) => {\n            if (err !== undefined) {\n                this.setState(types_1.ClientState.Connected);\n                return cb(err);\n            }\n            const ctxId = contextId;\n            this.setState(types_1.ClientState.Recording);\n            this.microphone.unmute();\n            this.activeContexts.set(ctxId, new segment_1.SegmentState(ctxId, 1));\n            return cb(undefined, contextId);\n        });\n    }\n    /**\n     * Stops current SLU context by sending a stop context event to the API and muting the microphone.\n     * @param cb - the callback which is invoked when the context stop was acknowledged by the API.\n     */\n    stopContext(cb = () => { }) {\n        if (this.state !== types_1.ClientState.Recording) {\n            return cb(new Error('Cannot stop context - client is not recording'));\n        }\n        this.setState(types_1.ClientState.Stopping);\n        this.microphone.mute();\n        this.websocket.stop((err, contextId) => {\n            if (err !== undefined) {\n                // Sending stop event failed, which means recovering from this isn't viable.\n                // Developers should react to this state by reloading the app.\n                this.setState(types_1.ClientState.Failed);\n                return cb(err);\n            }\n            const ctxId = contextId;\n            this.setState(types_1.ClientState.Connected);\n            if (!this.activeContexts.delete(ctxId)) {\n                console.warn('[SpeechlyClient]', 'Attempted to remove non-existent context', ctxId);\n            }\n            return cb();\n        });\n    }\n    /**\n     * Adds a listener for client state change events.\n     * @param cb - the callback to invoke on state change events.\n     */\n    onStateChange(cb) {\n        this.stateChangeCb = cb;\n    }\n    /**\n     * Adds a listener for current segment change events.\n     * @param cb - the callback to invoke on segment change events.\n     */\n    onSegmentChange(cb) {\n        this.segmentChangeCb = cb;\n    }\n    /**\n     * Adds a listener for tentative transcript responses from the API.\n     * @param cb - the callback to invoke on a tentative transcript response.\n     */\n    onTentativeTranscript(cb) {\n        this.tentativeTranscriptCb = cb;\n    }\n    /**\n     * Adds a listener for transcript responses from the API.\n     * @param cb - the callback to invoke on a transcript response.\n     */\n    onTranscript(cb) {\n        this.transcriptCb = cb;\n    }\n    /**\n     * Adds a listener for tentative entities responses from the API.\n     * @param cb - the callback to invoke on a tentative entities response.\n     */\n    onTentativeEntities(cb) {\n        this.tentativeEntitiesCb = cb;\n    }\n    /**\n     * Adds a listener for entity responses from the API.\n     * @param cb - the callback to invoke on an entity response.\n     */\n    onEntity(cb) {\n        this.entityCb = cb;\n    }\n    /**\n     * Adds a listener for tentative intent responses from the API.\n     * @param cb - the callback to invoke on a tentative intent response.\n     */\n    onTentativeIntent(cb) {\n        this.tentativeIntentCb = cb;\n    }\n    /**\n     * Adds a listener for intent responses from the API.\n     * @param cb - the callback to invoke on an intent response.\n     */\n    onIntent(cb) {\n        this.intentCb = cb;\n    }\n    reconnectWebsocket() {\n        if (this.deviceId === undefined) {\n            return this.setState(types_1.ClientState.Disconnected);\n        }\n        const deviceId = this.deviceId;\n        if (this.reconnectAttemptCount < 1) {\n            return this.setState(types_1.ClientState.Disconnected);\n        }\n        if (this.state !== types_1.ClientState.Connecting) {\n            this.setState(types_1.ClientState.Connecting);\n        }\n        if (this.debug) {\n            console.log('[SpeechlyClient]', `Attempting to re-connect to the server in ${this.nextReconnectDelay.toString()}ms`);\n        }\n        // TODO: extract this as a \"re-trier\" (check existing libraries first).\n        setTimeout(() => {\n            this.reconnectAttemptCount = this.reconnectAttemptCount - 1;\n            this.nextReconnectDelay = this.nextReconnectDelay * 2;\n            this.websocket.initialize(deviceId, (err) => {\n                if (err !== undefined) {\n                    return this.reconnectWebsocket();\n                }\n                this.setState(types_1.ClientState.Connected);\n            });\n        }, this.nextReconnectDelay);\n    }\n    setState(newState) {\n        if (this.state === newState) {\n            return;\n        }\n        if (this.debug) {\n            console.log('[SpeechlyClient]', 'State transition', state_1.stateToString(this.state), state_1.stateToString(newState));\n        }\n        this.state = newState;\n        this.stateChangeCb(newState);\n    }\n}\nexports.Client = Client;\n//# sourceMappingURL=client.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./types\"));\nvar state_1 = require(\"./state\");\nexports.stateToString = state_1.stateToString;\nvar client_1 = require(\"./client\");\nexports.Client = client_1.Client;\n//# sourceMappingURL=index.js.map","import Speechly from '@speechly/browser-client';\n\n// Create a new Client. appId and language are configured in the dashboard.\nexport const client = new Speechly.Client({\n  appId: 'SPEECHLY_APP_ID',\n  language: 'SPEECHLY_APP_LANG',\n});\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./speechly\"));\n__export(require(\"./microphone/const\"));\n__export(require(\"./storage/const\"));\n//# sourceMappingURL=index.js.map","/**\n * rpg-dice-roller - A dice roller that accepts standard dice notation\n * \n * @version v4.0.2\n * @license MIT\n * @author GreenImp <info@greenimp.co.uk> (http://greenimp.co.uk)\n * @link https://github.com/GreenImp/rpg-dice-roller\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.rpgDiceRoller = {}));\n}(this, (function (exports) { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get(target, property, receiver || target);\n  }\n\n  function set(target, property, value, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.set) {\n      set = Reflect.set;\n    } else {\n      set = function set(target, property, value, receiver) {\n        var base = _superPropBase(target, property);\n\n        var desc;\n\n        if (base) {\n          desc = Object.getOwnPropertyDescriptor(base, property);\n\n          if (desc.set) {\n            desc.set.call(receiver, value);\n            return true;\n          } else if (!desc.writable) {\n            return false;\n          }\n        }\n\n        desc = Object.getOwnPropertyDescriptor(receiver, property);\n\n        if (desc) {\n          if (!desc.writable) {\n            return false;\n          }\n\n          desc.value = value;\n          Object.defineProperty(receiver, property, desc);\n        } else {\n          _defineProperty(receiver, property, value);\n        }\n\n        return true;\n      };\n    }\n\n    return set(target, property, value, receiver);\n  }\n\n  function _set(target, property, value, receiver, isStrict) {\n    var s = set(target, property, value, receiver || target);\n\n    if (!s && isStrict) {\n      throw new Error('failed to set property');\n    }\n\n    return value;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n      return;\n    }\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  /*\n   * Generated by PEG.js 0.10.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function (expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n      literal: function literal(expectation) {\n        return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n      },\n      \"class\": function _class(expectation) {\n        var escapedParts = \"\",\n            i;\n\n        for (i = 0; i < expectation.parts.length; i++) {\n          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);\n        }\n\n        return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n      },\n      any: function any(expectation) {\n        return \"any character\";\n      },\n      end: function end(expectation) {\n        return \"end of input\";\n      },\n      other: function other(expectation) {\n        return expectation.description;\n      }\n    };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n        return '\\\\x0' + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return '\\\\x' + hex(ch);\n      });\n    }\n\n    function classEscape(s) {\n      return s.replace(/\\\\/g, '\\\\\\\\').replace(/\\]/g, '\\\\]').replace(/\\^/g, '\\\\^').replace(/-/g, '\\\\-').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n        return '\\\\x0' + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return '\\\\x' + hex(ch);\n      });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i,\n          j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n        peg$startRuleFunctions = {\n      Main: peg$parseMain\n    },\n        peg$startRuleFunction = peg$parseMain,\n        peg$c0 = \"{\",\n        peg$c1 = peg$literalExpectation(\"{\", false),\n        peg$c2 = \",\",\n        peg$c3 = peg$literalExpectation(\",\", false),\n        peg$c4 = \"}\",\n        peg$c5 = peg$literalExpectation(\"}\", false),\n        peg$c6 = function peg$c6(expr, exprs, modifiers) {\n      return {\n        type: 'group',\n        notation: text(),\n        expressions: [expr].concat(_toConsumableArray(exprs.map(function (v) {\n          return v[3];\n        }))),\n        modifiers: Object.assign.apply(Object, [{}].concat(_toConsumableArray(modifiers.map(function (item) {\n          return _defineProperty({}, item.subType, item);\n        }))))\n      };\n    },\n        peg$c7 = function peg$c7(die, modifiers) {\n      return Object.assign(die, {\n        modifiers: Object.assign.apply(Object, [{}].concat(_toConsumableArray(modifiers.map(function (item) {\n          return _defineProperty({}, item.subType, item);\n        }))))\n      });\n    },\n        peg$c8 = function peg$c8(die) {\n      return Object.assign(die, {\n        notation: text()\n      });\n    },\n        peg$c9 = \"d\",\n        peg$c10 = peg$literalExpectation(\"d\", false),\n        peg$c11 = function peg$c11(qty, d, sides) {\n      return {\n        type: 'dice',\n        subType: 'standard',\n        qty: qty || 1,\n        d: d,\n        sides: sides\n      };\n    },\n        peg$c12 = \"%\",\n        peg$c13 = peg$literalExpectation(\"%\", false),\n        peg$c14 = function peg$c14(qty, d, sides) {\n      return {\n        type: 'dice',\n        subType: 'percentile',\n        qty: qty || 1,\n        d: d,\n        sides: 100\n      };\n    },\n        peg$c15 = \"dF\",\n        peg$c16 = peg$literalExpectation(\"dF\", false),\n        peg$c17 = \".\",\n        peg$c18 = peg$literalExpectation(\".\", false),\n        peg$c19 = /^[12]/,\n        peg$c20 = peg$classExpectation([\"1\", \"2\"], false, false),\n        peg$c21 = function peg$c21(qty, d, sides) {\n      return {\n        type: 'dice',\n        subType: 'fudge',\n        qty: qty || 1,\n        d: d,\n        sides: sides ? parseInt(sides[1], 10) : 2\n      };\n    },\n        peg$c22 = function peg$c22(modifier) {\n      return Object.assign(modifier, {\n        notation: text()\n      });\n    },\n        peg$c23 = \"!\",\n        peg$c24 = peg$literalExpectation(\"!\", false),\n        peg$c25 = \"p\",\n        peg$c26 = peg$literalExpectation(\"p\", false),\n        peg$c27 = function peg$c27(compound, penetrate, comparePoint) {\n      return {\n        type: 'modifier',\n        subType: 'explode',\n        penetrate: !!penetrate,\n        compound: !!compound,\n        comparePoint: comparePoint\n      };\n    },\n        peg$c28 = function peg$c28(successCP, failureCP) {\n      return {\n        type: 'modifier',\n        subType: 'target',\n        successCP: successCP,\n        failureCP: failureCP\n      };\n    },\n        peg$c29 = /^[lh]/,\n        peg$c30 = peg$classExpectation([\"l\", \"h\"], false, false),\n        peg$c31 = function peg$c31(end, qty) {\n      return {\n        type: 'modifier',\n        subType: 'drop',\n        end: end || 'l',\n        qty: qty\n      };\n    },\n        peg$c32 = \"k\",\n        peg$c33 = peg$literalExpectation(\"k\", false),\n        peg$c34 = function peg$c34(end, qty) {\n      return {\n        type: 'modifier',\n        subType: 'keep',\n        end: end || 'h',\n        qty: qty\n      };\n    },\n        peg$c35 = \"r\",\n        peg$c36 = peg$literalExpectation(\"r\", false),\n        peg$c37 = \"o\",\n        peg$c38 = peg$literalExpectation(\"o\", false),\n        peg$c39 = function peg$c39(once, comparePoint) {\n      return {\n        type: 'modifier',\n        subType: 're-roll',\n        once: !!once,\n        comparePoint: comparePoint\n      };\n    },\n        peg$c40 = \"cs\",\n        peg$c41 = peg$literalExpectation(\"cs\", false),\n        peg$c42 = function peg$c42(comparePoint) {\n      return {\n        type: 'modifier',\n        subType: 'critical-success',\n        comparePoint: comparePoint\n      };\n    },\n        peg$c43 = \"cf\",\n        peg$c44 = peg$literalExpectation(\"cf\", false),\n        peg$c45 = function peg$c45(comparePoint) {\n      return {\n        type: 'modifier',\n        subType: 'critical-failure',\n        comparePoint: comparePoint\n      };\n    },\n        peg$c46 = \"s\",\n        peg$c47 = peg$literalExpectation(\"s\", false),\n        peg$c48 = \"a\",\n        peg$c49 = peg$literalExpectation(\"a\", false),\n        peg$c50 = function peg$c50(dir) {\n      return {\n        type: 'modifier',\n        subType: 'sort',\n        direction: dir || 'a'\n      };\n    },\n        peg$c51 = \"f\",\n        peg$c52 = peg$literalExpectation(\"f\", false),\n        peg$c53 = function peg$c53(comparePoint) {\n      return comparePoint;\n    },\n        peg$c54 = function peg$c54(operator, value) {\n      return {\n        type: 'compare-point',\n        operator: operator,\n        value: value\n      };\n    },\n        peg$c55 = \"!=\",\n        peg$c56 = peg$literalExpectation(\"!=\", false),\n        peg$c57 = \"<=\",\n        peg$c58 = peg$literalExpectation(\"<=\", false),\n        peg$c59 = \">=\",\n        peg$c60 = peg$literalExpectation(\">=\", false),\n        peg$c61 = \"=\",\n        peg$c62 = peg$literalExpectation(\"=\", false),\n        peg$c63 = \">\",\n        peg$c64 = peg$literalExpectation(\">\", false),\n        peg$c65 = \"<\",\n        peg$c66 = peg$literalExpectation(\"<\", false),\n        peg$c67 = \"(\",\n        peg$c68 = peg$literalExpectation(\"(\", false),\n        peg$c69 = \")\",\n        peg$c70 = peg$literalExpectation(\")\", false),\n        peg$c71 = function peg$c71(l, expr, r) {\n      return [l].concat(_toConsumableArray(expr), [r]);\n    },\n        peg$c72 = function peg$c72(head, tail) {\n      head = Array.isArray(head) ? head : [head];\n      return [].concat(_toConsumableArray(head), _toConsumableArray(tail.map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 4),\n            value = _ref4[1],\n            factor = _ref4[3];\n\n        return [value, factor];\n      }).flat(2)));\n    },\n        peg$c73 = \"abs\",\n        peg$c74 = peg$literalExpectation(\"abs\", false),\n        peg$c75 = \"ceil\",\n        peg$c76 = peg$literalExpectation(\"ceil\", false),\n        peg$c77 = \"cos\",\n        peg$c78 = peg$literalExpectation(\"cos\", false),\n        peg$c79 = \"exp\",\n        peg$c80 = peg$literalExpectation(\"exp\", false),\n        peg$c81 = \"floor\",\n        peg$c82 = peg$literalExpectation(\"floor\", false),\n        peg$c83 = \"log\",\n        peg$c84 = peg$literalExpectation(\"log\", false),\n        peg$c85 = \"round\",\n        peg$c86 = peg$literalExpectation(\"round\", false),\n        peg$c87 = \"sign\",\n        peg$c88 = peg$literalExpectation(\"sign\", false),\n        peg$c89 = \"sin\",\n        peg$c90 = peg$literalExpectation(\"sin\", false),\n        peg$c91 = \"sqrt\",\n        peg$c92 = peg$literalExpectation(\"sqrt\", false),\n        peg$c93 = \"tan\",\n        peg$c94 = peg$literalExpectation(\"tan\", false),\n        peg$c95 = function peg$c95(func, expr) {\n      return [\"\".concat(func, \"(\")].concat(_toConsumableArray(expr), [')']);\n    },\n        peg$c96 = \"pow\",\n        peg$c97 = peg$literalExpectation(\"pow\", false),\n        peg$c98 = function peg$c98(func, expr1, expr2) {\n      return [\"\".concat(func, \"(\")].concat(_toConsumableArray(expr1), [','], _toConsumableArray(expr2), [')']);\n    },\n        peg$c99 = \"-\",\n        peg$c100 = peg$literalExpectation(\"-\", false),\n        peg$c101 = /^[.]/,\n        peg$c102 = peg$classExpectation([\".\"], false, false),\n        peg$c103 = function peg$c103() {\n      return parseFloat(text());\n    },\n        peg$c104 = /^[1-9]/,\n        peg$c105 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n        peg$c106 = /^[0-9]/,\n        peg$c107 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c108 = function peg$c108() {\n      return parseInt(text(), 10);\n    },\n        peg$c109 = \"**\",\n        peg$c110 = peg$literalExpectation(\"**\", false),\n        peg$c111 = function peg$c111() {\n      return \"^\";\n    },\n        peg$c112 = \"*\",\n        peg$c113 = peg$literalExpectation(\"*\", false),\n        peg$c114 = \"^\",\n        peg$c115 = peg$literalExpectation(\"^\", false),\n        peg$c116 = \"/\",\n        peg$c117 = peg$literalExpectation(\"/\", false),\n        peg$c118 = \"+\",\n        peg$c119 = peg$literalExpectation(\"+\", false),\n        peg$c120 = peg$otherExpectation(\"whitespace\"),\n        peg$c121 = /^[ \\t\\n\\r]/,\n        peg$c122 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n        peg$currPos = 0,\n        peg$savedPos = 0,\n        peg$posDetailsCache = [{\n      line: 1,\n      column: 1\n    }],\n        peg$maxFailPos = 0,\n        peg$maxFailExpected = [],\n        peg$silentFails = 0,\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return {\n        type: \"literal\",\n        text: text,\n        ignoreCase: ignoreCase\n      };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return {\n        type: \"class\",\n        parts: parts,\n        inverted: inverted,\n        ignoreCase: ignoreCase\n      };\n    }\n\n    function peg$endExpectation() {\n      return {\n        type: \"end\"\n      };\n    }\n\n    function peg$otherExpectation(description) {\n      return {\n        type: \"other\",\n        description: description\n      };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line: details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails = peg$computePosDetails(endPos);\n      return {\n        start: {\n          offset: startPos,\n          line: startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line: endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n    }\n\n    function peg$parseMain() {\n      var s0;\n      s0 = peg$parseExpression();\n      return s0;\n    }\n\n    function peg$parseDiceGroup() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c0;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c1);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExpression();\n\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$parse_();\n\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s7 = peg$c2;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c3);\n                }\n              }\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parse_();\n\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parseExpression();\n\n                  if (s9 !== peg$FAILED) {\n                    s6 = [s6, s7, s8, s9];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parse_();\n\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c2;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c3);\n                  }\n                }\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseExpression();\n\n                    if (s9 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s6 = peg$c4;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c5);\n                  }\n                }\n\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseModifier();\n\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseModifier();\n                  }\n\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c6(s3, s4, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseDice() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$parseDie();\n\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseModifier();\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseModifier();\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c7(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseDie() {\n      var s0, s1;\n      s0 = peg$currPos;\n      s1 = peg$parseStandardDie();\n\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsePercentileDie();\n\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseFudgeDie();\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1);\n      }\n\n      s0 = s1;\n      return s0;\n    }\n\n    function peg$parseStandardDie() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$parseIntegerOrExpression();\n\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 100) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIntegerOrExpression();\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c11(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsePercentileDie() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$parseIntegerOrExpression();\n\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 100) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 37) {\n            s3 = peg$c12;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c13);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c14(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFudgeDie() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$currPos;\n      s1 = peg$parseIntegerOrExpression();\n\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s2 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c16);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c17;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c18);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            if (peg$c19.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c21(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseModifier() {\n      var s0, s1;\n      s0 = peg$currPos;\n      s1 = peg$parseExplodeModifier();\n\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseTargetModifier();\n\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseDropModifier();\n\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseKeepModifier();\n\n            if (s1 === peg$FAILED) {\n              s1 = peg$parseRerollModifier();\n\n              if (s1 === peg$FAILED) {\n                s1 = peg$parseCriticalSuccessModifier();\n\n                if (s1 === peg$FAILED) {\n                  s1 = peg$parseCriticalFailModifier();\n\n                  if (s1 === peg$FAILED) {\n                    s1 = peg$parseSortingModifier();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c22(s1);\n      }\n\n      s0 = s1;\n      return s0;\n    }\n\n    function peg$parseExplodeModifier() {\n      var s0, s1, s2, s3, s4;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c23;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c24);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s2 = peg$c23;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c24);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 112) {\n            s3 = peg$c25;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c26);\n            }\n          }\n\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseComparePoint();\n\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c27(s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseTargetModifier() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parseComparePoint();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseFailComparePoint();\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c28(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseDropModifier() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 100) {\n        s1 = peg$c9;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c10);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (peg$c29.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c30);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIntegerNumber();\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c31(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseKeepModifier() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 107) {\n        s1 = peg$c32;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c33);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (peg$c29.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c30);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIntegerNumber();\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c34(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRerollModifier() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 114) {\n        s1 = peg$c35;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c36);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 111) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c38);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseComparePoint();\n\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c39(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseCriticalSuccessModifier() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 2) === peg$c40) {\n        s1 = peg$c40;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c41);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseComparePoint();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c42(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseCriticalFailModifier() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 2) === peg$c43) {\n        s1 = peg$c43;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c44);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseComparePoint();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c45(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseSortingModifier() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 115) {\n        s1 = peg$c46;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c47);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 97) {\n          s2 = peg$c48;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c49);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 100) {\n            s2 = peg$c9;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c50(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFailComparePoint() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 102) {\n        s1 = peg$c51;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c52);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseComparePoint();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c53(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseComparePoint() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parseCompareOperator();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseFloatNumber();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c54(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseCompareOperator() {\n      var s0;\n\n      if (input.substr(peg$currPos, 2) === peg$c55) {\n        s0 = peg$c55;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c56);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c57) {\n          s0 = peg$c57;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c58);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c59) {\n            s0 = peg$c59;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c60);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s0 = peg$c61;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c62);\n              }\n            }\n\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 62) {\n                s0 = peg$c63;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c64);\n                }\n              }\n\n              if (s0 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 60) {\n                  s0 = peg$c65;\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c66);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIntegerOrExpression() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$parseIntegerNumber();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c67;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c68);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseExpression();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c69;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c70);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c71(s1, s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n      s0 = peg$currPos;\n      s1 = peg$parseFactor();\n\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseOperator();\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseOperator();\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseFactor();\n\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c72(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFactor() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$parseMathFunction();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDice();\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFloatNumber();\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s1 = peg$c67;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c68);\n              }\n            }\n\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parseExpression();\n\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parse_();\n\n                  if (s4 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                      s5 = peg$c69;\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c70);\n                      }\n                    }\n\n                    if (s5 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c71(s1, s3, s5);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseDiceGroup();\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseMathFunction() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 3) === peg$c73) {\n        s1 = peg$c73;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c74);\n        }\n      }\n\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c75) {\n          s1 = peg$c75;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c76);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c77) {\n            s1 = peg$c77;\n            peg$currPos += 3;\n          } else {\n            s1 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c78);\n            }\n          }\n\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c79) {\n              s1 = peg$c79;\n              peg$currPos += 3;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c80);\n              }\n            }\n\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c81) {\n                s1 = peg$c81;\n                peg$currPos += 5;\n              } else {\n                s1 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c82);\n                }\n              }\n\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 3) === peg$c83) {\n                  s1 = peg$c83;\n                  peg$currPos += 3;\n                } else {\n                  s1 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c84);\n                  }\n                }\n\n                if (s1 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c85) {\n                    s1 = peg$c85;\n                    peg$currPos += 5;\n                  } else {\n                    s1 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c86);\n                    }\n                  }\n\n                  if (s1 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 4) === peg$c87) {\n                      s1 = peg$c87;\n                      peg$currPos += 4;\n                    } else {\n                      s1 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c88);\n                      }\n                    }\n\n                    if (s1 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 3) === peg$c89) {\n                        s1 = peg$c89;\n                        peg$currPos += 3;\n                      } else {\n                        s1 = peg$FAILED;\n\n                        if (peg$silentFails === 0) {\n                          peg$fail(peg$c90);\n                        }\n                      }\n\n                      if (s1 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 4) === peg$c91) {\n                          s1 = peg$c91;\n                          peg$currPos += 4;\n                        } else {\n                          s1 = peg$FAILED;\n\n                          if (peg$silentFails === 0) {\n                            peg$fail(peg$c92);\n                          }\n                        }\n\n                        if (s1 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 3) === peg$c93) {\n                            s1 = peg$c93;\n                            peg$currPos += 3;\n                          } else {\n                            s1 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c94);\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c67;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c68);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseExpression();\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c69;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c70);\n                  }\n                }\n\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c95(s1, s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 3) === peg$c96) {\n          s1 = peg$c96;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c97);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s2 = peg$c67;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c68);\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseExpression();\n\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parse_();\n\n                if (s5 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s6 = peg$c2;\n                    peg$currPos++;\n                  } else {\n                    s6 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c3);\n                    }\n                  }\n\n                  if (s6 !== peg$FAILED) {\n                    s7 = peg$parse_();\n\n                    if (s7 !== peg$FAILED) {\n                      s8 = peg$parseExpression();\n\n                      if (s8 !== peg$FAILED) {\n                        s9 = peg$parse_();\n\n                        if (s9 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s10 = peg$c69;\n                            peg$currPos++;\n                          } else {\n                            s10 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c70);\n                            }\n                          }\n\n                          if (s10 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c98(s1, s4, s8);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseFloatNumber() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c99;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c100);\n        }\n      }\n\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNumber();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n\n          if (peg$c101.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c102);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseNumber();\n\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c103();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseIntegerNumber() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n\n      if (peg$c104.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c105);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n\n        if (peg$c106.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c107);\n          }\n        }\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n\n          if (peg$c106.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c107);\n            }\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c108();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseNumber() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = [];\n\n      if (peg$c106.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c107);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n\n          if (peg$c106.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c107);\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c108();\n      }\n\n      s0 = s1;\n      return s0;\n    }\n\n    function peg$parseOperator() {\n      var s0, s1;\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 2) === peg$c109) {\n        s1 = peg$c109;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c110);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c111();\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s0 = peg$c112;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c113);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s0 = peg$c114;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c115);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s0 = peg$c12;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c13);\n              }\n            }\n\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s0 = peg$c116;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c117);\n                }\n              }\n\n              if (s0 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 43) {\n                  s0 = peg$c118;\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c119);\n                  }\n                }\n\n                if (s0 === peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 45) {\n                    s0 = peg$c99;\n                    peg$currPos++;\n                  } else {\n                    s0 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c100);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n      peg$silentFails++;\n      s0 = [];\n\n      if (peg$c121.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c122);\n        }\n      }\n\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n\n        if (peg$c121.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c122);\n          }\n        }\n      }\n\n      peg$silentFails--;\n\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c120);\n        }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n  }\n\n  var grammar = {\n    SyntaxError: peg$SyntaxError,\n    parse: peg$parse\n  };\n  var grammar_1 = grammar.parse;\n\n  /**\n   * Polyfill for Array.prototype.flat\n   * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat#Polyfill\n   */\n  if (!Array.prototype.flat) {\n    Array.prototype.flat = function () {\n      var depth = arguments[0];\n      depth = depth === undefined ? 1 : Math.floor(depth);\n      if (depth < 1) return Array.prototype.slice.call(this);\n      return function flat(arr, depth) {\n        var len = arr.length >>> 0;\n        var flattened = [];\n        var i = 0;\n\n        while (i < len) {\n          if (i in arr) {\n            var el = arr[i];\n            if (Array.isArray(el) && depth > 0) flattened = flattened.concat(flat(el, depth - 1));else flattened.push(el);\n          }\n\n          i++;\n        }\n\n        return flattened;\n      }(this, depth);\n    };\n  }\n  /**\n   * Polyfill for Array.prototype.flatMap\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap#Polyfill\n   */\n\n\n  if (!Array.prototype.flatMap) {\n    Array.prototype.flatMap = function () {\n      return Array.prototype.map.apply(this, arguments).flat(1);\n    };\n  }\n  /**\n   * Utility helper functions\n   *\n   * @type {Readonly<{compareNumbers(number, number, string): boolean, toFixed(number, number=): number, generateNumber((number|string), (number|string)): *, isNumeric(*=): boolean, isJson(*=): (*|boolean|undefined), sumArray(Array): number, isBase64(*=): (*|boolean|undefined)}>}\n   */\n\n\n  var diceUtils = Object.freeze({\n    /**\n     * Checks if the given val is a valid number\n     *\n     * @param val\n     * @returns {boolean}\n     */\n    isNumeric: function isNumeric(val) {\n      return !Array.isArray(val) && !Number.isNaN(val) && Number.isFinite(parseInt(val, 10));\n    },\n    isBase64: function isBase64(val) {\n      try {\n        return !!(val && btoa(atob(val)) === val);\n      } catch (e) {\n        return false;\n      }\n    },\n    isJson: function isJson(val) {\n      try {\n        var parsed = val ? JSON.parse(val) : false;\n        return !!(parsed && _typeof(parsed) === 'object');\n      } catch (e) {\n        return false;\n      }\n    },\n\n    /**\n     * Generates a random number between the\n     * min and max, inclusive\n     *\n     * @param {number|string} min\n     * @param {number|string} max\n     * @returns {*}\n     */\n    generateNumber: function generateNumber(min, max) {\n      min = min ? parseInt(min, 10) : 1;\n      max = max ? parseInt(max, 10) : min;\n\n      if (max <= min) {\n        return min;\n      }\n\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n\n    /**\n     * @returns {function(Array): number}\n     */\n    get sumArray() {\n      var _this = this;\n\n      /**\n       * Takes an array of numbers and adds them together,\n       * returning the result\n       *\n       * @param {Number[]} numbers\n       * @returns {number}\n       */\n      return function (numbers) {\n        return !Array.isArray(numbers) ? 0 : numbers.reduce(function (prev, current) {\n          return prev + (_this.isNumeric(current) ? parseFloat(current) : 0);\n        }, 0);\n      };\n    },\n\n    /**\n     * Checks if `a` is comparative to `b` with the given operator.\n     * Returns true or false.\n     *\n     * @param {number} a\n     * @param {number} b\n     * @param {string} operator A valid comparative operator (=, <, >, <=, >=, !=)\n     * @returns {boolean}\n     */\n    compareNumbers: function compareNumbers(a, b, operator) {\n      var result;\n      a = parseFloat(a);\n      b = parseFloat(b);\n\n      switch (operator) {\n        case '=':\n        case '==':\n          result = a === b;\n          break;\n\n        case '<':\n          result = a < b;\n          break;\n\n        case '>':\n          result = a > b;\n          break;\n\n        case '<=':\n          result = a <= b;\n          break;\n\n        case '>=':\n          result = a >= b;\n          break;\n\n        case '!':\n        case '!=':\n          result = a !== b;\n          break;\n\n        default:\n          result = false;\n          break;\n      }\n\n      return result;\n    },\n\n    /**\n     * Rounds a number to the given number of decimal places,\n     * removing any trailing zeros after the decimal point.\n     *\n     * `toFixed(1.236, 2) == 1.24`\n     * `toFixed(30.1, 2) == 30.1`\n     * `toFixed(4.0000000004, 3) == 4`\n     *\n     * @param {number} num\n     * @param {number=} decPlaces\n     * @returns {number}\n     */\n    toFixed: function toFixed(num, decPlaces) {\n      // round to the specified decimal places, then convert back to\n      // a number to remove trailing zeroes after the decimal point\n      return parseFloat(parseFloat(num).toFixed(decPlaces || 0));\n    }\n  });\n  /**\n   * Allowed formats for exporting dice data\n   *\n   * @type {Readonly<{BASE_64: number, JSON: number, OBJECT: number}>}\n   */\n\n  var exportFormats = Object.freeze({\n    JSON: 0,\n    BASE_64: 1,\n    OBJECT: 2\n  });\n\n  var Modifier = function () {\n    var Modifier =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {string} notation\n       */\n      function Modifier(notation) {\n        _classCallCheck(this, Modifier);\n\n        if (!notation) {\n          throw new Error('Notation is required');\n        } // set the modifier's notation\n\n\n        this.notation = notation; // set the modifier's sort order\n\n        this.order = 999;\n      }\n      /**\n       * Returns the name for the modifier\n       *\n       * @returns {*}\n       */\n\n\n      _createClass(Modifier, [{\n        key: \"run\",\n\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n        value: function run(results, dice) {\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var notation = this.notation,\n              name = this.name;\n          return {\n            name: name,\n            notation: notation,\n            type: 'modifier'\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.notation;\n        }\n      }, {\n        key: \"name\",\n        get: function get() {\n          return this.constructor.name;\n        }\n      }]);\n\n      return Modifier;\n    }();\n\n    return Modifier;\n  }();\n\n  var ComparePoint = function () {\n    var _operator = Symbol('operator');\n\n    var _value = Symbol('value');\n\n    var ComparePoint =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {string} operator\n       * @param {number} value\n       */\n      function ComparePoint(operator, value) {\n        _classCallCheck(this, ComparePoint);\n\n        if (!operator) {\n          throw new Error('ComparePoint: No compare operator specified');\n        } else if (!value && value !== 0) {\n          throw new Error('ComparePoint: No compare value specified');\n        }\n\n        this.operator = operator;\n        this.value = value;\n      }\n      /**\n       * Checks if the operator is valid\n       *\n       * @param {string} operator\n       *\n       * @returns {boolean}\n       */\n\n\n      _createClass(ComparePoint, [{\n        key: \"isMatch\",\n\n        /**\n         * Checks whether value matches the compare point\n         *\n         * @param {number} value\n         *\n         * @returns {boolean}\n         */\n        value: function isMatch(value) {\n          return diceUtils.compareNumbers(value, this.value, this.operator);\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var operator = this.operator,\n              value = this.value;\n          return {\n            operator: operator,\n            type: 'compare-point',\n            value: value\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return \"\".concat(this.operator).concat(this.value);\n        }\n      }, {\n        key: \"operator\",\n\n        /**\n         * Sets the operator value\n         *\n         * @param {string} operator\n         *\n         * @throws Error\n         */\n        set: function set(operator) {\n          if (!this.constructor.isValidOperator(operator)) {\n            throw new Error(\"ComparePoint: operator \\\"\".concat(operator, \"\\\" is not valid\"));\n          }\n\n          this[_operator] = operator;\n        }\n        /**\n         * Returns the comparison operator\n         *\n         * @returns {string}\n         */\n        ,\n        get: function get() {\n          return this[_operator];\n        }\n        /**\n         * Sets the value\n         *\n         * @param {number} value\n         *\n         * @throws Error\n         */\n\n      }, {\n        key: \"value\",\n        set: function set(value) {\n          if (!diceUtils.isNumeric(value)) {\n            throw new Error('ComparePoint: value must be numeric');\n          }\n\n          this[_value] = parseInt(value, 10);\n        }\n        /**\n         * Returns the comparison value\n         *\n         * @returns {number}\n         */\n        ,\n        get: function get() {\n          return this[_value];\n        }\n      }], [{\n        key: \"isValidOperator\",\n        value: function isValidOperator(operator) {\n          return typeof operator === 'string' && /^(?:[<>!]?=|[<>])$/.test(operator);\n        }\n      }]);\n\n      return ComparePoint;\n    }();\n\n    return ComparePoint;\n  }();\n\n  var ComparisonModifier = function () {\n    var _comparePoint = Symbol('compare-point');\n\n    var ComparisonModifier =\n    /*#__PURE__*/\n    function (_Modifier) {\n      _inherits(ComparisonModifier, _Modifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {ComparePoint} comparePoint\n       */\n      function ComparisonModifier(notation, comparePoint) {\n        var _this;\n\n        _classCallCheck(this, ComparisonModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ComparisonModifier).call(this, notation));\n\n        if (comparePoint) {\n          _this.comparePoint = comparePoint;\n        }\n\n        return _this;\n      }\n      /**\n       * Returns the compare point for the object\n       *\n       * @returns {ComparePoint}\n       */\n\n\n      _createClass(ComparisonModifier, [{\n        key: \"isComparePoint\",\n\n        /**\n         * Checks whether value matches the compare point\n         *\n         * @param {number} value\n         *\n         * @returns {boolean}\n         */\n        value: function isComparePoint(value) {\n          if (!this.comparePoint) {\n            console.warn('No Compare Point specified');\n            return false;\n          }\n\n          return this.comparePoint.isMatch(value);\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var comparePoint = this.comparePoint;\n          return Object.assign(_get(_getPrototypeOf(ComparisonModifier.prototype), \"toJSON\", this).call(this), {\n            comparePoint: comparePoint\n          });\n        }\n      }, {\n        key: \"comparePoint\",\n        get: function get() {\n          return this[_comparePoint];\n        }\n        /**\n         * Sets the compare point\n         *\n         * @param comparePoint\n         */\n        ,\n        set: function set(comparePoint) {\n          if (!(comparePoint instanceof ComparePoint)) {\n            throw TypeError('comparePoint must be instance of ComparePoint');\n          }\n\n          this[_comparePoint] = comparePoint;\n        }\n      }]);\n\n      return ComparisonModifier;\n    }(Modifier);\n\n    return ComparisonModifier;\n  }();\n\n  var RollResult = function () {\n    var _calculationValue = Symbol('calculation-value');\n\n    var _modifiers = Symbol('modifiers');\n\n    var _initialValue = Symbol('initial-value');\n\n    var _useInTotal = Symbol('use-in-total');\n\n    var _value = Symbol('value');\n\n    var RollResult =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {number|{value: Number, initialValue: number}} value The value rolled\n       * @param {string[]=} modifiers List of modifier names that affect this roll\n       * @param {boolean=} useInTotal Whether to include the roll value when calculating totals\n       */\n      function RollResult(value, modifiers) {\n        var useInTotal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        _classCallCheck(this, RollResult);\n\n        if (diceUtils.isNumeric(value)) {\n          this[_initialValue] = parseInt(value, 10);\n        } else if (value && _typeof(value) === 'object' && !Array.isArray(value)) {\n          // ensure that we have a valid value\n          var initialVal = diceUtils.isNumeric(value.initialValue) ? value.initialValue : value.value;\n\n          if (!diceUtils.isNumeric(initialVal)) {\n            throw new Error(\"Result value is invalid: \".concat(initialVal));\n          }\n\n          this[_initialValue] = parseInt(initialVal, 10);\n\n          if (diceUtils.isNumeric(value.value) && parseInt(value.value, 10) !== this[_initialValue]) {\n            this.value = value.value;\n          }\n\n          if (diceUtils.isNumeric(value.calculationValue) && parseFloat(value.calculationValue) !== this.value) {\n            this.calculationValue = value.calculationValue;\n          }\n\n          if (Array.isArray(value.modifiers) && value.modifiers.length) {\n            modifiers = value.modifiers;\n          }\n\n          if (typeof value.useInTotal === 'boolean') {\n            useInTotal = value.useInTotal;\n          }\n        } else {\n          throw new Error(\"Result value is invalid: \".concat(value));\n        }\n\n        this.modifiers = modifiers || [];\n        this.useInTotal = useInTotal;\n      }\n      /**\n       * Returns the value to use in calculations\n       *\n       * @returns {number}\n       */\n\n\n      _createClass(RollResult, [{\n        key: \"toJSON\",\n\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n        value: function toJSON() {\n          var calculationValue = this.calculationValue,\n              initialValue = this.initialValue,\n              modifierFlags = this.modifierFlags,\n              modifiers = this.modifiers,\n              useInTotal = this.useInTotal,\n              value = this.value;\n          return {\n            calculationValue: calculationValue,\n            initialValue: initialValue,\n            modifierFlags: modifierFlags,\n            modifiers: modifiers,\n            type: 'result',\n            useInTotal: useInTotal,\n            value: value\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.value + this.modifierFlags;\n        }\n      }, {\n        key: \"calculationValue\",\n        get: function get() {\n          return diceUtils.isNumeric(this[_calculationValue]) ? parseFloat(this[_calculationValue]) : this.value;\n        }\n        /**\n         * Sets the value to use in calculations\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          var isNumeric = diceUtils.isNumeric(value);\n\n          if (value && !isNumeric) {\n            throw new Error(\"Result calculation value is invalid: \".concat(value));\n          }\n\n          this[_calculationValue] = isNumeric ? parseFloat(value) : null;\n        }\n        /**\n         * The initial roll value before any modifiers.\n         * Not often used, you probably want `value` instead.\n         *\n         * @returns {Number}\n         */\n\n      }, {\n        key: \"initialValue\",\n        get: function get() {\n          return this[_initialValue];\n        }\n        /**\n         * Returns the flags for the modifiers that affect the roll\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"modifierFlags\",\n        get: function get() {\n          // @todo need a better way of mapping modifiers to symbols\n          return this.modifiers.reduce(function (acc, flag) {\n            switch (flag) {\n              case 'compound':\n              case 'explode':\n                flag = '!';\n                break;\n\n              case 'critical-failure':\n                flag = '__';\n                break;\n\n              case 'critical-success':\n                flag = '**';\n                break;\n\n              case 'drop':\n                flag = 'd';\n                break;\n\n              case 'penetrate':\n                flag = 'p';\n                break;\n\n              case 're-roll':\n                flag = 'r';\n                break;\n\n              case 're-roll-once':\n                flag = 'ro';\n                break;\n\n              case 'target-failure':\n                flag = '_';\n                break;\n\n              case 'target-success':\n                flag = '*';\n                break;\n            }\n\n            return acc + flag;\n          }, '');\n        }\n        /**\n         * Returns the modifiers that affect the roll\n         *\n         * @returns {string[]}\n         */\n\n      }, {\n        key: \"modifiers\",\n        get: function get() {\n          return this[_modifiers] || [];\n        }\n        /**\n         * Set the modifiers that affect the roll\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          if ((value || 0 === value) && (!Array.isArray(value) || value.some(function (item) {\n            return typeof item !== 'string';\n          }))) {\n            throw new Error(\"Modifiers must be an array of modifier names: \".concat(value));\n          }\n\n          this[_modifiers] = value || [];\n        }\n        /**\n         * Returns the useInTotal flag\n         *\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"useInTotal\",\n        get: function get() {\n          return !!this[_useInTotal];\n        }\n        /**\n         * Sets the useInTotal flag\n         *\n         * @param {boolean} value\n         */\n        ,\n        set: function set(value) {\n          this[_useInTotal] = !!value;\n        }\n        /**\n         * Roll value after modifiers have affected it\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"value\",\n        get: function get() {\n          return diceUtils.isNumeric(this[_value]) ? this[_value] : this[_initialValue];\n        }\n        /**\n         * Sets the value\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          if (!diceUtils.isNumeric(value)) {\n            throw new Error(\"Result value is invalid: \".concat(value));\n          }\n\n          this[_value] = parseInt(value, 10);\n        }\n      }]);\n\n      return RollResult;\n    }();\n\n    return RollResult;\n  }();\n\n  var ExplodeModifier = function () {\n    var _compound = Symbol('compound');\n\n    var _penetrate = Symbol('penetrate');\n\n    var ExplodeModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(ExplodeModifier, _ComparisonModifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {ComparePoint} comparePoint\n       * @param {boolean=} compound Defaults to false\n       * @param {boolean=} penetrate Defaults to false\n       */\n      function ExplodeModifier(notation) {\n        var _this;\n\n        var comparePoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var compound = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var penetrate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ExplodeModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ExplodeModifier).call(this, notation, comparePoint));\n        _this[_compound] = !!compound;\n        _this[_penetrate] = !!penetrate; // set the modifier's sort order\n\n        _this.order = 1;\n        return _this;\n      }\n      /**\n       * Whether the modifier should compound the results or not\n       *\n       * @type {boolean}\n       */\n\n\n      _createClass(ExplodeModifier, [{\n        key: \"run\",\n\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          // ensure that the dice can explode without going into an infinite loop\n          if (dice.min === dice.max) {\n            throw new Error(\"Die must have more than 1 side to explode: \".concat(dice));\n          }\n\n          results.rolls = results.rolls.map(function (roll) {\n            var subRolls = [roll];\n            var compareValue = roll.value;\n\n            while (_this2.isComparePoint(compareValue)) {\n              var prevRoll = subRolls[subRolls.length - 1]; // roll the dice\n\n              var rollResult = dice.rollOnce(); // update the value to check against\n\n              compareValue = rollResult.value; // add the explode modifier flag\n\n              prevRoll.modifiers.push('explode'); // add the penetrate modifier flag and decrement the value\n\n              if (_this2.penetrate) {\n                prevRoll.modifiers.push('penetrate');\n                rollResult.value--;\n              } // add the rolls to the list\n\n\n              subRolls.push(rollResult);\n            } // return the rolls (Compounded if necessary)\n\n\n            if (_this2.compound && subRolls.length > 1) {\n              // update the roll value and modifiers\n              roll.value = diceUtils.sumArray(subRolls);\n              roll.modifiers = ['explode', 'compound'];\n\n              if (_this2.penetrate) {\n                roll.modifiers.push('penetrate');\n              }\n\n              return roll;\n            }\n\n            return subRolls;\n          }).flat();\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var compound = this.compound,\n              penetrate = this.penetrate;\n          return Object.assign(_get(_getPrototypeOf(ExplodeModifier.prototype), \"toJSON\", this).call(this), {\n            compound: compound,\n            penetrate: penetrate\n          });\n        }\n      }, {\n        key: \"compound\",\n        get: function get() {\n          return this[_compound];\n        }\n        /**\n         * Whether the modifier should penetrate the results or not\n         *\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"penetrate\",\n        get: function get() {\n          return this[_penetrate];\n        }\n      }]);\n\n      return ExplodeModifier;\n    }(ComparisonModifier);\n\n    return ExplodeModifier;\n  }();\n\n  var RollResults = function () {\n    var _rolls = Symbol('rolls');\n\n    var RollResults =\n    /*#__PURE__*/\n    function () {\n      /**\n       * @param {RollResult[]=} rolls\n       */\n      function RollResults(rolls) {\n        _classCallCheck(this, RollResults);\n\n        this.rolls = rolls || [];\n      }\n      /**\n       * Returns the numbers of rolls\n       *\n       * @returns {number}\n       */\n\n\n      _createClass(RollResults, [{\n        key: \"addRoll\",\n\n        /**\n         * Adds a single roll to the list\n         *\n         * @param {RollResult|number} value\n         */\n        value: function addRoll(value) {\n          var result = value instanceof RollResult ? value : new RollResult(value);\n\n          this[_rolls].push(result);\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var rolls = this.rolls,\n              value = this.value;\n          return {\n            rolls: rolls,\n            value: value\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return \"[\".concat(this.rolls.join(', '), \"]\");\n        }\n      }, {\n        key: \"length\",\n        get: function get() {\n          return this.rolls.length || 0;\n        }\n        /**\n         * Returns the rolls\n         *\n         * @returns {RollResult[]}\n         */\n\n      }, {\n        key: \"rolls\",\n        get: function get() {\n          return _toConsumableArray(this[_rolls] || []);\n        }\n        /**\n         * Sets the rolls\n         *\n         * @param {RollResult[]|number[]} rolls\n         *\n         * @throws Error\n         */\n        ,\n        set: function set(rolls) {\n          var _this = this;\n\n          if (!rolls || !Array.isArray(rolls)) {\n            // roll is not an array\n            throw new Error(\"Rolls must be an array: \".concat(rolls));\n          } // loop through each result and add it to the rolls list\n\n\n          this[_rolls] = [];\n          rolls.forEach(function (result) {\n            _this.addRoll(result);\n          });\n        }\n        /**\n         * The total value of the rolls, taking in to consideration modifiers\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"value\",\n        get: function get() {\n          return this.rolls.reduce(function (v, roll) {\n            return v + (roll.useInTotal ? roll.calculationValue : 0);\n          }, 0);\n        }\n      }]);\n\n      return RollResults;\n    }();\n\n    return RollResults;\n  }();\n\n  var ReRollModifier = function () {\n    var _once = Symbol('once');\n\n    var ReRollModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(ReRollModifier, _ComparisonModifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {boolean} once\n       * @param {ComparePoint} comparePoint\n       */\n      function ReRollModifier(notation) {\n        var _this;\n\n        var once = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var comparePoint = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n        _classCallCheck(this, ReRollModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ReRollModifier).call(this, notation, comparePoint));\n        _this.once = !!once; // set the modifier's sort order\n\n        _this.order = 2;\n        return _this;\n      }\n      /**\n       * Returns whether the modifier should only re-roll once or not\n       *\n       * @returns {boolean}\n       */\n\n\n      _createClass(ReRollModifier, [{\n        key: \"run\",\n\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          // ensure that the dice can explode without going into an infinite loop\n          if (dice.min === dice.max) {\n            throw new Error(\"Die must have more than 1 side to re-roll: \".concat(dice));\n          }\n\n          results.rolls.map(function (roll) {\n            var hasReRolled = false; // if the die roll matches the compare point we re-roll\n            // unless we're only rolling once, we should re-roll if any consecutive rolls also match the CP\n\n            while (_this2.isComparePoint(roll.value) && (!_this2.once || !hasReRolled)) {\n              // roll the dice\n              var rollResult = dice.rollOnce(); // update the roll value (Unlike exploding, the original value if not kept)\n\n              roll.value = rollResult.value; // increment the roll count so we only roll once when required\n\n              hasReRolled = true;\n            } // add the re-roll modifier flag outside the loop, otherwise we get duplicate flags\n\n\n            if (hasReRolled) {\n              roll.modifiers.push(\"re-roll\".concat(_this2.once ? '-once' : ''));\n            }\n\n            return roll;\n          });\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var once = this.once;\n          return Object.assign(_get(_getPrototypeOf(ReRollModifier.prototype), \"toJSON\", this).call(this), {\n            once: once\n          });\n        }\n      }, {\n        key: \"once\",\n        get: function get() {\n          return !!this[_once];\n        }\n        /**\n         * Sets whether the modifier should only re-roll once or not\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          this[_once] = !!value;\n        }\n      }]);\n\n      return ReRollModifier;\n    }(ComparisonModifier);\n\n    return ReRollModifier;\n  }();\n\n  /**\n   *\n   * @type {StandardDice}\n   *\n   * @property {Map[]} modifiers\n   * @property {string} notation\n   * @property {number|string} sides\n   * @property {number} qty\n   *\n   * @method {RollResults} roll\n   * @method {RollResult} rollDie\n   */\n\n  var StandardDice = function () {\n    var _modifiers = Symbol('modifiers');\n\n    var _notation = Symbol('notation');\n\n    var _qty = Symbol('qty');\n\n    var _sides = Symbol('sides');\n\n    var StandardDice =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {string} notation\n       * @param {number} sides\n       * @param {number} qty\n       * @param {Map|{}|Map[]|null} modifiers\n       */\n      function StandardDice(notation, sides) {\n        var _this = this;\n\n        var qty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var modifiers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n        _classCallCheck(this, StandardDice);\n\n        if (!notation) {\n          throw new TypeError('Dice: Notation is required');\n        } else if (!sides) {\n          throw new TypeError('Dice: sides is required');\n        } else if (!diceUtils.isNumeric(qty) || qty < 1) {\n          throw new TypeError('qty must be a positive integer');\n        }\n\n        this[_notation] = notation;\n        this[_qty] = parseInt(qty, 10);\n        this[_sides] = sides;\n\n        if (modifiers) {\n          if (modifiers instanceof Map) {\n            this[_modifiers] = modifiers;\n          } else if (Array.isArray(modifiers)) {\n            // loop through and get the modifier name of each item and use it as the map key\n            this[_modifiers] = new Map(modifiers.map(function (modifier) {\n              return [modifier.name, modifier];\n            }));\n          } else if (_typeof(modifiers) === 'object') {\n            this[_modifiers] = new Map(Object.entries(modifiers));\n          } else {\n            throw new Error('modifiers should be a Map or an Object');\n          }\n\n          if (this[_modifiers].size && _toConsumableArray(this[_modifiers].entries()).some(function (entry) {\n            return !(entry[1] instanceof Modifier);\n          })) {\n            throw new Error('modifiers is invalid. List must only contain Modifier instances');\n          } // loop through each modifier and ensure that those that require it have compare points\n          // @todo find a better way of defining compare point on modifiers that don't have them\n\n\n          this[_modifiers].forEach(function (modifier) {\n            if (modifier instanceof ExplodeModifier && !modifier.comparePoint) {\n              modifier.comparePoint = new ComparePoint('=', _this.max);\n            } else if (modifier instanceof ReRollModifier && !modifier.comparePoint) {\n              modifier.comparePoint = new ComparePoint('=', _this.min);\n            }\n          });\n        }\n      }\n      /**\n       * The modifiers that affect this dice roll\n       *\n       * @returns {Map|null}\n       */\n\n\n      _createClass(StandardDice, [{\n        key: \"roll\",\n\n        /**\n         * Rolls the dice, for the specified quantity and\n         * includes any modifiers, and returns the roll output\n         *\n         * @returns {RollResults}\n         */\n        value: function roll() {\n          var _this2 = this;\n\n          // create a result object to hold the rolls\n          var rollResult = new RollResults(); // loop for the quantity and roll the die\n\n          for (var i = 0; i < this.qty; i++) {\n            // add the rolls to the list\n            rollResult.addRoll(this.rollOnce());\n          } // loop through each modifier and carry out its actions\n\n\n          (this.modifiers || []).forEach(function (modifier) {\n            modifier.run(rollResult, _this2);\n          });\n          return rollResult;\n        }\n        /**\n         * Rolls a single die and returns the output value\n         *\n         * @returns {RollResult}\n         */\n\n      }, {\n        key: \"rollOnce\",\n        value: function rollOnce() {\n          return new RollResult(diceUtils.generateNumber(this.min, this.max));\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var max = this.max,\n              min = this.min,\n              modifiers = this.modifiers,\n              name = this.name,\n              notation = this.notation,\n              qty = this.qty,\n              sides = this.sides;\n          return {\n            max: max,\n            min: min,\n            modifiers: modifiers,\n            name: name,\n            notation: notation,\n            qty: qty,\n            sides: sides,\n            type: 'die'\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.notation;\n        }\n      }, {\n        key: \"modifiers\",\n        get: function get() {\n          // ensure modifiers are ordered correctly\n          return this[_modifiers] ? new Map(_toConsumableArray(this[_modifiers]).sort(function (a, b) {\n            return a[1].order - b[1].order;\n          })) : null;\n        }\n        /**\n         * The maximum value that can be rolled om the die\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"max\",\n        get: function get() {\n          return this.sides;\n        }\n        /**\n         * Returns the minimum value that can be rolled on the die\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"min\",\n        get: function get() {\n          return 1;\n        }\n        /**\n         * Returns the name for the dice\n         *\n         * @returns {*}\n         */\n\n      }, {\n        key: \"name\",\n        get: function get() {\n          return this.constructor.name;\n        }\n        /**\n         * The dice notation for this dice roll\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"notation\",\n        get: function get() {\n          return this[_notation];\n        }\n        /**\n         * Returns the number of dice that should be rolled.\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"qty\",\n        get: function get() {\n          return this[_qty];\n        }\n        /**\n         * The number of sides the dice has\n         *\n         * @returns {*}\n         */\n\n      }, {\n        key: \"sides\",\n        get: function get() {\n          return this[_sides];\n        }\n      }]);\n\n      return StandardDice;\n    }();\n\n    return StandardDice;\n  }();\n\n  var FudgeDice = function () {\n    var FudgeDice =\n    /*#__PURE__*/\n    function (_StandardDice) {\n      _inherits(FudgeDice, _StandardDice);\n\n      function FudgeDice(notation) {\n        var nonBlanks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n        var qty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var modifiers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n        _classCallCheck(this, FudgeDice);\n\n        if (!nonBlanks && nonBlanks !== 0) {\n          nonBlanks = 2;\n        } else if (nonBlanks !== 1 && nonBlanks !== 2) {\n          throw new Error('nonBlanks must be 1 or 2');\n        }\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(FudgeDice).call(this, notation, parseInt(nonBlanks, 10), qty, modifiers));\n      }\n      /**\n       * The maximum value that can be rolled om the die\n       *\n       * @returns {number}\n       */\n\n\n      _createClass(FudgeDice, [{\n        key: \"rollOnce\",\n\n        /**\n         * Rolls a single die and returns the output value\n         *\n         * @returns {RollResult}\n         */\n        value: function rollOnce() {\n          var total = 0;\n\n          if (this.nonBlanks === 2) {\n            // default fudge (2 of each non-blank) = 1d3 - 2\n            total = diceUtils.generateNumber(1, 3) - 2;\n          } else if (this.nonBlanks === 1) {\n            // only 1 of each non-blank\n            // on 1d6 a roll of 1 = -1, 6 = +1, others = 0\n            var num = diceUtils.generateNumber(1, 6);\n\n            if (num === 1) {\n              total = -1;\n            } else if (num === 6) {\n              total = 1;\n            }\n          }\n\n          return new RollResult(total);\n        }\n      }, {\n        key: \"max\",\n        get: function get() {\n          return 1;\n        }\n        /**\n         * Returns the minimum value that can be rolled on the die\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"min\",\n        get: function get() {\n          return -1;\n        }\n      }, {\n        key: \"nonBlanks\",\n        get: function get() {\n          return _get(_getPrototypeOf(FudgeDice.prototype), \"sides\", this);\n        }\n      }, {\n        key: \"sides\",\n        get: function get() {\n          return \"F.\".concat(this.nonBlanks);\n        }\n      }]);\n\n      return FudgeDice;\n    }(StandardDice);\n\n    return FudgeDice;\n  }();\n\n  var PercentileDice = function () {\n    var PercentileDice =\n    /*#__PURE__*/\n    function (_StandardDice) {\n      _inherits(PercentileDice, _StandardDice);\n\n      function PercentileDice(notation) {\n        var qty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var modifiers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n        _classCallCheck(this, PercentileDice);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(PercentileDice).call(this, notation, 100, qty, modifiers));\n      }\n      /**\n       * The maximum value that can be rolled on the die\n       *\n       * @returns {number}\n       */\n\n\n      _createClass(PercentileDice, [{\n        key: \"max\",\n        get: function get() {\n          return 100;\n        }\n        /**\n         * The number of sides the dice has\n         *\n         * @returns {string}s\n         */\n\n      }, {\n        key: \"sides\",\n        get: function get() {\n          return '%';\n        }\n      }]);\n\n      return PercentileDice;\n    }(StandardDice);\n\n    return PercentileDice;\n  }();\n\n\n\n  var Dice = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    FudgeDice: FudgeDice,\n    PercentileDice: PercentileDice,\n    StandardDice: StandardDice\n  });\n\n  var CriticalFailureModifier = function () {\n    var CriticalFailureModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(CriticalFailureModifier, _ComparisonModifier);\n\n      function CriticalFailureModifier(notation, comparePoint) {\n        var _this;\n\n        _classCallCheck(this, CriticalFailureModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(CriticalFailureModifier).call(this, notation, comparePoint)); // set the modifier's sort order\n\n        _this.order = 7;\n        return _this;\n      }\n      /**\n       * Runs the modifier on the rolls\n       *\n       * @param {RollResults} results\n       * @param {StandardDice} dice\n       *\n       * @returns {RollResults}\n       */\n\n\n      _createClass(CriticalFailureModifier, [{\n        key: \"run\",\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          results.rolls.map(function (roll) {\n            // add the modifier flag\n            if (_this2.isComparePoint(roll.value)) {\n              roll.modifiers.push('critical-failure');\n            }\n\n            return roll;\n          });\n          return results;\n        }\n      }]);\n\n      return CriticalFailureModifier;\n    }(ComparisonModifier);\n\n    return CriticalFailureModifier;\n  }();\n\n  var CriticalSuccessModifier = function () {\n    var CriticalSuccessModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(CriticalSuccessModifier, _ComparisonModifier);\n\n      function CriticalSuccessModifier(notation, comparePoint) {\n        var _this;\n\n        _classCallCheck(this, CriticalSuccessModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(CriticalSuccessModifier).call(this, notation, comparePoint)); // set the modifier's sort order\n\n        _this.order = 6;\n        return _this;\n      }\n      /**\n       * Runs the modifier on the rolls\n       *\n       * @param {RollResults} results\n       * @param {StandardDice} dice\n       *\n       * @returns {RollResults}\n       */\n\n\n      _createClass(CriticalSuccessModifier, [{\n        key: \"run\",\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          // loop through each roll and see if it's a critical success\n          results.rolls.map(function (roll) {\n            // add the modifier flag\n            if (_this2.isComparePoint(roll.value)) {\n              roll.modifiers.push('critical-success');\n            }\n\n            return roll;\n          });\n          return results;\n        }\n      }]);\n\n      return CriticalSuccessModifier;\n    }(ComparisonModifier);\n\n    return CriticalSuccessModifier;\n  }();\n\n  var KeepModifier = function () {\n    var _end = Symbol('end');\n\n    var _qty = Symbol('qty');\n\n    var KeepModifier =\n    /*#__PURE__*/\n    function (_Modifier) {\n      _inherits(KeepModifier, _Modifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {string} end Either `h|l` to keep highest or lowest\n       * @param {number=} qty The amount to keep\n       */\n      function KeepModifier(notation, end, qty) {\n        var _this;\n\n        _classCallCheck(this, KeepModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(KeepModifier).call(this, notation));\n        _this.end = end;\n        _this.qty = qty || qty === 0 ? qty : 1; // set the modifier's sort order\n\n        _this.order = 3;\n        return _this;\n      }\n      /**\n       * Returns which end the rolls should be kept (\"h\" = High, \"l\" = Low)\n       *\n       * @returns {string}\n       */\n\n\n      _createClass(KeepModifier, [{\n        key: \"_rangeToDrop\",\n\n        /**\n         * Returns the min/max range of rolls to drop\n         *\n         * @param {RollResults} results\n         *\n         * @returns {number[]}\n         *\n         * @private\n         */\n        value: function _rangeToDrop(results) {\n          // we're keeping, so we want to drop all dice that are outside of the qty range\n          return [this.qty, results.length];\n        }\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n\n      }, {\n        key: \"run\",\n        value: function run(results, dice) {\n          var _map$sort$map,\n              _this2 = this;\n\n          // first clone the rolls so it doesn't affect the original array\n          var rollIndexes = (_map$sort$map = _toConsumableArray(results.rolls) // get a list of objects with roll values and original index\n          .map(function (roll, index) {\n            return {\n              value: roll.value,\n              index: index\n            };\n          }) // sort the list by value (Either ascending or descending depending on end)\n          .sort(function (a, b) {\n            return _this2.end === 'h' ? b.value - a.value : a.value - b.value;\n          }).map(function (rollIndex) {\n            return rollIndex.index;\n          }) // get the roll indexes to drop\n          ).slice.apply(_map$sort$map, _toConsumableArray(this._rangeToDrop(results))); // loop through all of our dice to drop and flag them as such\n\n\n          rollIndexes.forEach(function (rollIndex) {\n            var roll = results.rolls[rollIndex];\n            roll.modifiers.push('drop');\n            roll.useInTotal = false;\n          });\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var end = this.end,\n              qty = this.qty;\n          return Object.assign(_get(_getPrototypeOf(KeepModifier.prototype), \"toJSON\", this).call(this), {\n            end: end,\n            qty: qty\n          });\n        }\n      }, {\n        key: \"end\",\n        get: function get() {\n          return this[_end];\n        }\n        /**\n         * Sets which end the rolls should be kept (\"h\" = High, \"l\" = Low)\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          if (value !== 'h' && value !== 'l') {\n            throw new Error('End must be \"h\" or \"l\"');\n          }\n\n          this[_end] = value;\n        }\n        /**\n         * Returns the quantity of dice that should be kept\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"qty\",\n        get: function get() {\n          return this[_qty];\n        }\n        /**\n         * Sets the quantity of dice that should be kept\n         *\n         * @param {number} value\n         */\n        ,\n        set: function set(value) {\n          if (!diceUtils.isNumeric(value) || value < 1) {\n            throw new Error('qty must be a positive integer');\n          }\n\n          this[_qty] = parseInt(value, 10);\n        }\n      }]);\n\n      return KeepModifier;\n    }(Modifier);\n\n    return KeepModifier;\n  }();\n\n  var DropModifier = function () {\n    var DropModifier =\n    /*#__PURE__*/\n    function (_KeepModifier) {\n      _inherits(DropModifier, _KeepModifier);\n\n      function DropModifier(notation, end, qty) {\n        var _this;\n\n        _classCallCheck(this, DropModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(DropModifier).call(this, notation, end, qty)); // set the modifier's sort order\n\n        _this.order = 4;\n        return _this;\n      }\n      /**\n       * Returns the min/max range of rolls to drop\n       *\n       * @param {RollResults} results\n       *\n       * @returns {number[]}\n       *\n       * @private\n       */\n\n\n      _createClass(DropModifier, [{\n        key: \"_rangeToDrop\",\n        value: function _rangeToDrop(results) {\n          // we're dropping, so we want to drop all dice that are inside of the qty range\n          return [0, this.qty];\n        }\n      }]);\n\n      return DropModifier;\n    }(KeepModifier);\n\n    return DropModifier;\n  }();\n\n  var SortingModifier = function () {\n    var _direction = Symbol('direction');\n\n    var SortingModifier =\n    /*#__PURE__*/\n    function (_Modifier) {\n      _inherits(SortingModifier, _Modifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {string} direction Either `a|d`\n       */\n      function SortingModifier(notation) {\n        var _this;\n\n        var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'a';\n\n        _classCallCheck(this, SortingModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(SortingModifier).call(this, notation));\n        _this.direction = direction || 'a'; // set the modifier's sort order\n\n        _this.order = 8;\n        return _this;\n      }\n      /**\n       * Returns the sort direction\n       *\n       * @returns {string}\n       */\n\n\n      _createClass(SortingModifier, [{\n        key: \"run\",\n\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          results.rolls = results.rolls.sort(function (a, b) {\n            if (_this2.direction === 'd') {\n              return b.value - a.value;\n            }\n\n            return a.value - b.value;\n          });\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var direction = this.direction;\n          return Object.assign(_get(_getPrototypeOf(SortingModifier.prototype), \"toJSON\", this).call(this), {\n            direction: direction\n          });\n        }\n      }, {\n        key: \"direction\",\n        get: function get() {\n          return this[_direction];\n        }\n        /**\n         * Sets the sort direction\n         *\n         * @param {string} value\n         */\n        ,\n        set: function set(value) {\n          if (value !== 'a' && value !== 'd') {\n            throw new Error('Direction must be \"a\" (Ascending) or \"d\" (Descending)');\n          }\n\n          this[_direction] = value;\n        }\n      }]);\n\n      return SortingModifier;\n    }(Modifier);\n\n    return SortingModifier;\n  }();\n\n  var TargetModifier = function () {\n    var _failureCP = Symbol('failure-cp');\n\n    var TargetModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(TargetModifier, _ComparisonModifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {ComparePoint} successCP\n       * @param {ComparePoint=} failureCP\n       */\n      function TargetModifier(notation, successCP, failureCP) {\n        var _this;\n\n        _classCallCheck(this, TargetModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(TargetModifier).call(this, notation, successCP)); // set the failure compare point\n\n        _this.failureComparePoint = failureCP; // set the modifier's sort order\n\n        _this.order = 5;\n        return _this;\n      }\n      /**\n       * Returns the failure compare point for the modifier\n       *\n       * @returns {ComparePoint|null}\n       */\n\n\n      _createClass(TargetModifier, [{\n        key: \"getStateValue\",\n\n        /**\n         * Checks if the value is a success/failure/neither and returns\n         * its corresponding state value:\n         * success = 1, fail = -1, neither = 0\n         *\n         * @param {number} value\n         *\n         * @returns {number}\n         */\n        value: function getStateValue(value) {\n          return this.isSuccess(value) ? 1 : this.isFailure(value) ? -1 : 0;\n        }\n        /**\n         * Returns true if the value matches the failure compare point.\n         *\n         * A response of `false` does NOT indicate a success. A value\n         * is a success ONLY if it passes the success compare point.\n         * A value could be neither a failure or a success.\n         *\n         * @param value\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"isFailure\",\n        value: function isFailure(value) {\n          return this.failureComparePoint ? this.failureComparePoint.isMatch(value) : false;\n        }\n        /**\n         * Returns true if the value doesn't match both the success compare point\n         * and the failure compare point.\n         *\n         * @param {number} value\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"isNeutral\",\n        value: function isNeutral(value) {\n          return !this.isSuccess(value) && !this.isFailure(value);\n        }\n        /**\n         * Returns true if the value matches the success compare point.\n         *\n         * A response of `false` does NOT indicate a failure. A value\n         * is a failure ONLY if it passes the failure compare point.\n         * A value could be neither a failure or a success.\n         *\n         * @param {number} value\n         *\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"isSuccess\",\n        value: function isSuccess(value) {\n          return this.isComparePoint(value);\n        }\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n\n      }, {\n        key: \"run\",\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          // loop through each roll and see if it matches the target\n          results.rolls.map(function (roll) {\n            // add the modifier flag\n            if (_this2.isSuccess(roll.value)) {\n              roll.modifiers.push('target-success');\n            } else if (_this2.isFailure(roll)) {\n              roll.modifiers.push('target-failure');\n            } // set the value to the success state value\n\n\n            roll.calculationValue = _this2.getStateValue(roll.value);\n            return roll;\n          });\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var failureComparePoint = this.failureComparePoint,\n              successComparePoint = this.successComparePoint; // get the inherited object, but remove the comparePoint property\n\n          var result = _get(_getPrototypeOf(TargetModifier.prototype), \"toJSON\", this).call(this);\n\n          delete result.comparePoint;\n          return Object.assign(result, {\n            failureComparePoint: failureComparePoint,\n            successComparePoint: successComparePoint\n          });\n        }\n      }, {\n        key: \"failureComparePoint\",\n        get: function get() {\n          return this[_failureCP];\n        }\n        /**\n         * Sets the compare point\n         *\n         * @param comparePoint\n         */\n        ,\n        set: function set(comparePoint) {\n          if (comparePoint && !(comparePoint instanceof ComparePoint)) {\n            throw TypeError('failure comparePoint must be instance of ComparePoint or null');\n          }\n\n          this[_failureCP] = comparePoint || null;\n        }\n        /**\n         * Returns the success compare point for the modifier\n         *\n         * @returns {ComparePoint}\n         */\n\n      }, {\n        key: \"successComparePoint\",\n        get: function get() {\n          return this.comparePoint;\n        }\n        /**\n         * Sets the success compare point for the modifier\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          _set(_getPrototypeOf(TargetModifier.prototype), \"comparePoint\", value, this, true);\n        }\n      }]);\n\n      return TargetModifier;\n    }(ComparisonModifier);\n\n    return TargetModifier;\n  }();\n\n\n\n  var Modifiers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ComparisonModifier: ComparisonModifier,\n    CriticalFailureModifier: CriticalFailureModifier,\n    CriticalSuccessModifier: CriticalSuccessModifier,\n    DropModifier: DropModifier,\n    ExplodeModifier: ExplodeModifier,\n    KeepModifier: KeepModifier,\n    ReRollModifier: ReRollModifier,\n    SortingModifier: SortingModifier,\n    TargetModifier: TargetModifier\n  });\n\n  var RollGroup = function () {\n    var _modifiers = Symbol('modifiers');\n\n    var _notation = Symbol('notation');\n\n    var _expressions = Symbol('expressions');\n\n    var RollGroup =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {string} notation\n       * @param {StandardDice[]} expressions\n       * @param {[]|null} modifiers\n       */\n      function RollGroup(notation, expressions) {\n        var modifiers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n        _classCallCheck(this, RollGroup);\n\n        this[_notation] = notation;\n        this[_expressions] = expressions;\n        this[_modifiers] = modifiers;\n      }\n      /**\n       * The modifiers that affect this group\n       *\n       * @returns {Modifier[]|null}\n       */\n\n\n      _createClass(RollGroup, [{\n        key: \"toJSON\",\n\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n        value: function toJSON() {\n          var modifiers = this.modifiers,\n              notation = this.notation,\n              expressions = this.expressions;\n          return {\n            expressions: expressions,\n            modifiers: modifiers,\n            notation: notation,\n            type: 'group'\n          };\n        }\n      }, {\n        key: \"modifiers\",\n        get: function get() {\n          return this[_modifiers];\n        }\n        /**\n         * The dice notation for this group\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"notation\",\n        get: function get() {\n          return this[_notation];\n        }\n        /**\n         * The expressions in this group\n         *\n         * @returns {StandardDice[]}\n         */\n\n      }, {\n        key: \"expressions\",\n        get: function get() {\n          return this[_expressions];\n        }\n      }]);\n\n      return RollGroup;\n    }();\n\n    return RollGroup;\n  }();\n\n  // TODO: remove these polyfills as soon as we have a build process that transpiles the code to ES5\n  // Polyfill for IE 11 (Number.isFinite is used in `complex.js`)\n  // source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\n  Number.isFinite = Number.isFinite || function (value) {\n    return typeof value === 'number' && isFinite(value);\n  }; // Polyfill for IE 11\n  // source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n\n\n  Number.isNaN = Number.isNaN || function (value) {\n    return value !== value; // eslint-disable-line no-self-compare\n  };\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function unwrapExports (x) {\n  \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  /**\n   * Test whether a value is a BigNumber\n   * @param {*} x\n   * @return {boolean}\n   */\n\n  var isBigNumber = function isBigNumber(x) {\n    return x && x.constructor.prototype.isBigNumber || false;\n  };\n\n  var object = createCommonjsModule(function (module, exports) {\n\n  function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n  /**\n   * Clone an object\n   *\n   *     clone(x)\n   *\n   * Can clone any primitive type, array, and object.\n   * If x has a function clone, this function will be invoked to clone the object.\n   *\n   * @param {*} x\n   * @return {*} clone\n   */\n\n\n  exports.clone = function clone(x) {\n    var type = _typeof(x); // immutable primitive types\n\n\n    if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\n      return x;\n    } // use clone function of the object when available\n\n\n    if (typeof x.clone === 'function') {\n      return x.clone();\n    } // array\n\n\n    if (Array.isArray(x)) {\n      return x.map(function (value) {\n        return clone(value);\n      });\n    }\n\n    if (x instanceof Date) return new Date(x.valueOf());\n    if (isBigNumber(x)) return x; // bignumbers are immutable\n\n    if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp\n    // object\n\n    return exports.map(x, clone);\n  };\n  /**\n   * Apply map to all properties of an object\n   * @param {Object} object\n   * @param {function} callback\n   * @return {Object} Returns a copy of the object with mapped properties\n   */\n\n\n  exports.map = function (object, callback) {\n    var clone = {};\n\n    for (var key in object) {\n      if (exports.hasOwnProperty(object, key)) {\n        clone[key] = callback(object[key]);\n      }\n    }\n\n    return clone;\n  };\n  /**\n   * Extend object a with the properties of object b\n   * @param {Object} a\n   * @param {Object} b\n   * @return {Object} a\n   */\n\n\n  exports.extend = function (a, b) {\n    for (var prop in b) {\n      if (exports.hasOwnProperty(b, prop)) {\n        a[prop] = b[prop];\n      }\n    }\n\n    return a;\n  };\n  /**\n   * Deep extend an object a with the properties of object b\n   * @param {Object} a\n   * @param {Object} b\n   * @returns {Object}\n   */\n\n\n  exports.deepExtend = function deepExtend(a, b) {\n    // TODO: add support for Arrays to deepExtend\n    if (Array.isArray(b)) {\n      throw new TypeError('Arrays are not supported by deepExtend');\n    }\n\n    for (var prop in b) {\n      if (exports.hasOwnProperty(b, prop)) {\n        if (b[prop] && b[prop].constructor === Object) {\n          if (a[prop] === undefined) {\n            a[prop] = {};\n          }\n\n          if (a[prop].constructor === Object) {\n            deepExtend(a[prop], b[prop]);\n          } else {\n            a[prop] = b[prop];\n          }\n        } else if (Array.isArray(b[prop])) {\n          throw new TypeError('Arrays are not supported by deepExtend');\n        } else {\n          a[prop] = b[prop];\n        }\n      }\n    }\n\n    return a;\n  };\n  /**\n   * Deep test equality of all fields in two pairs of arrays or objects.\n   * @param {Array | Object} a\n   * @param {Array | Object} b\n   * @returns {boolean}\n   */\n\n\n  exports.deepEqual = function deepEqual(a, b) {\n    var prop, i, len;\n\n    if (Array.isArray(a)) {\n      if (!Array.isArray(b)) {\n        return false;\n      }\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (i = 0, len = a.length; i < len; i++) {\n        if (!exports.deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    } else if (a instanceof Object) {\n      if (Array.isArray(b) || !(b instanceof Object)) {\n        return false;\n      }\n\n      for (prop in a) {\n        // noinspection JSUnfilteredForInLoop\n        if (!exports.deepEqual(a[prop], b[prop])) {\n          return false;\n        }\n      }\n\n      for (prop in b) {\n        // noinspection JSUnfilteredForInLoop\n        if (!exports.deepEqual(a[prop], b[prop])) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return a === b;\n    }\n  };\n  /**\n   * Test whether the current JavaScript engine supports Object.defineProperty\n   * @returns {boolean} returns true if supported\n   */\n\n\n  exports.canDefineProperty = function () {\n    // test needed for broken IE8 implementation\n    try {\n      if (Object.defineProperty) {\n        Object.defineProperty({}, 'x', {\n          get: function get() {}\n        });\n        return true;\n      }\n    } catch (e) {}\n\n    return false;\n  };\n  /**\n   * Attach a lazy loading property to a constant.\n   * The given function `fn` is called once when the property is first requested.\n   * On older browsers (<IE8), the function will fall back to direct evaluation\n   * of the properties value.\n   * @param {Object} object   Object where to add the property\n   * @param {string} prop     Property name\n   * @param {Function} fn     Function returning the property value. Called\n   *                          without arguments.\n   */\n\n\n  exports.lazy = function (object, prop, fn) {\n    if (exports.canDefineProperty()) {\n      var _uninitialized = true;\n\n      var _value;\n\n      Object.defineProperty(object, prop, {\n        get: function get() {\n          if (_uninitialized) {\n            _value = fn();\n            _uninitialized = false;\n          }\n\n          return _value;\n        },\n        set: function set(value) {\n          _value = value;\n          _uninitialized = false;\n        },\n        configurable: true,\n        enumerable: true\n      });\n    } else {\n      // fall back to immediate evaluation\n      object[prop] = fn();\n    }\n  };\n  /**\n   * Traverse a path into an object.\n   * When a namespace is missing, it will be created\n   * @param {Object} object\n   * @param {string} path   A dot separated string like 'name.space'\n   * @return {Object} Returns the object at the end of the path\n   */\n\n\n  exports.traverse = function (object, path) {\n    var obj = object;\n\n    if (path) {\n      var names = path.split('.');\n\n      for (var i = 0; i < names.length; i++) {\n        var name = names[i];\n\n        if (!(name in obj)) {\n          obj[name] = {};\n        }\n\n        obj = obj[name];\n      }\n    }\n\n    return obj;\n  };\n  /**\n   * A safe hasOwnProperty\n   * @param {Object} object\n   * @param {string} property\n   */\n\n\n  exports.hasOwnProperty = function (object, property) {\n    return object && Object.hasOwnProperty.call(object, property);\n  };\n  /**\n   * Test whether an object is a factory. a factory has fields:\n   *\n   * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n   * - name: string (optional)\n   * - path: string    A dot separated path (optional)\n   * - math: boolean   If true (false by default), the math namespace is passed\n   *                   as fifth argument of the factory function\n   *\n   * @param {*} object\n   * @returns {boolean}\n   */\n\n\n  exports.isFactory = function (object) {\n    return object && typeof object.factory === 'function';\n  };\n  });\n  var object_1 = object.clone;\n  var object_2 = object.map;\n  var object_3 = object.extend;\n  var object_4 = object.deepExtend;\n  var object_5 = object.deepEqual;\n  var object_6 = object.canDefineProperty;\n  var object_7 = object.lazy;\n  var object_8 = object.traverse;\n  var object_9 = object.isFactory;\n\n  var typedFunction = createCommonjsModule(function (module, exports) {\n\n  (function (root, factory) {\n    {\n      // OldNode. Does not work with strict CommonJS, but\n      // only CommonJS-like environments that support module.exports,\n      // like OldNode.\n      module.exports = factory();\n    }\n  }(commonjsGlobal, function () {\n\n    function ok () {\n      return true;\n    }\n\n    function notOk () {\n      return false;\n    }\n\n    function undef () {\n      return undefined;\n    }\n\n    /**\n     * @typedef {{\n     *   params: Param[],\n     *   fn: function\n     * }} Signature\n     *\n     * @typedef {{\n     *   types: Type[],\n     *   restParam: boolean\n     * }} Param\n     *\n     * @typedef {{\n     *   name: string,\n     *   typeIndex: number,\n     *   test: function,\n     *   conversion?: ConversionDef,\n     *   conversionIndex: number,\n     * }} Type\n     *\n     * @typedef {{\n     *   from: string,\n     *   to: string,\n     *   convert: function (*) : *\n     * }} ConversionDef\n     *\n     * @typedef {{\n     *   name: string,\n     *   test: function(*) : boolean\n     * }} TypeDef\n     */\n\n    // create a new instance of typed-function\n    function create () {\n      // data type tests\n      var _types = [\n        { name: 'number',    test: function (x) { return typeof x === 'number' } },\n        { name: 'string',    test: function (x) { return typeof x === 'string' } },\n        { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n        { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n        { name: 'Array',     test: Array.isArray },\n        { name: 'Date',      test: function (x) { return x instanceof Date } },\n        { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n        { name: 'Object',    test: function (x) {\n          return typeof x === 'object' && x.constructor === Object\n        }},\n        { name: 'null',      test: function (x) { return x === null } },\n        { name: 'undefined', test: function (x) { return x === undefined } }\n      ];\n\n      var anyType = {\n        name: 'any',\n        test: ok\n      };\n\n      // types which need to be ignored\n      var _ignore = [];\n\n      // type conversions\n      var _conversions = [];\n\n      // This is a temporary object, will be replaced with a typed function at the end\n      var typed = {\n        types: _types,\n        conversions: _conversions,\n        ignore: _ignore\n      };\n\n      /**\n       * Find the test function for a type\n       * @param {String} typeName\n       * @return {TypeDef} Returns the type definition when found,\n       *                    Throws a TypeError otherwise\n       */\n      function findTypeByName (typeName) {\n        var entry = findInArray(typed.types, function (entry) {\n          return entry.name === typeName;\n        });\n\n        if (entry) {\n          return entry;\n        }\n\n        if (typeName === 'any') { // special baked-in case 'any'\n          return anyType;\n        }\n\n        var hint = findInArray(typed.types, function (entry) {\n          return entry.name.toLowerCase() === typeName.toLowerCase();\n        });\n\n        throw new TypeError('Unknown type \"' + typeName + '\"' +\n            (hint ? ('. Did you mean \"' + hint.name + '\"?') : ''));\n      }\n\n      /**\n       * Find the index of a type definition. Handles special case 'any'\n       * @param {TypeDef} type\n       * @return {number}\n       */\n      function findTypeIndex(type) {\n        if (type === anyType) {\n          return 999;\n        }\n\n        return typed.types.indexOf(type);\n      }\n\n      /**\n       * Find a type that matches a value.\n       * @param {*} value\n       * @return {string} Returns the name of the first type for which\n       *                  the type test matches the value.\n       */\n      function findTypeName(value) {\n        var entry = findInArray(typed.types, function (entry) {\n          return entry.test(value);\n        });\n\n        if (entry) {\n          return entry.name;\n        }\n\n        throw new TypeError('Value has unknown type. Value: ' + value);\n      }\n\n      /**\n       * Find a specific signature from a (composed) typed function, for example:\n       *\n       *   typed.find(fn, ['number', 'string'])\n       *   typed.find(fn, 'number, string')\n       *\n       * Function find only only works for exact matches.\n       *\n       * @param {Function} fn                   A typed-function\n       * @param {string | string[]} signature   Signature to be found, can be\n       *                                        an array or a comma separated string.\n       * @return {Function}                     Returns the matching signature, or\n       *                                        throws an error when no signature\n       *                                        is found.\n       */\n      function find (fn, signature) {\n        if (!fn.signatures) {\n          throw new TypeError('Function is no typed-function');\n        }\n\n        // normalize input\n        var arr;\n        if (typeof signature === 'string') {\n          arr = signature.split(',');\n          for (var i = 0; i < arr.length; i++) {\n            arr[i] = arr[i].trim();\n          }\n        }\n        else if (Array.isArray(signature)) {\n          arr = signature;\n        }\n        else {\n          throw new TypeError('String array or a comma separated string expected');\n        }\n\n        var str = arr.join(',');\n\n        // find an exact match\n        var match = fn.signatures[str];\n        if (match) {\n          return match;\n        }\n\n        // TODO: extend find to match non-exact signatures\n\n        throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n      }\n\n      /**\n       * Convert a given value to another data type.\n       * @param {*} value\n       * @param {string} type\n       */\n      function convert (value, type) {\n        var from = findTypeName(value);\n\n        // check conversion is needed\n        if (type === from) {\n          return value;\n        }\n\n        for (var i = 0; i < typed.conversions.length; i++) {\n          var conversion = typed.conversions[i];\n          if (conversion.from === from && conversion.to === type) {\n            return conversion.convert(value);\n          }\n        }\n\n        throw new Error('Cannot convert from ' + from + ' to ' + type);\n      }\n      \n      /**\n       * Stringify parameters in a normalized way\n       * @param {Param[]} params\n       * @return {string}\n       */\n      function stringifyParams (params) {\n        return params\n            .map(function (param) {\n              var typeNames = param.types.map(getTypeName);\n\n              return (param.restParam ? '...' : '') + typeNames.join('|');\n            })\n            .join(',');\n      }\n\n      /**\n       * Parse a parameter, like \"...number | boolean\"\n       * @param {string} param\n       * @param {ConversionDef[]} conversions\n       * @return {Param} param\n       */\n      function parseParam (param, conversions) {\n        var restParam = param.indexOf('...') === 0;\n        var types = (!restParam)\n            ? param\n            : (param.length > 3)\n                ? param.slice(3)\n                : 'any';\n\n        var typeNames = types.split('|').map(trim)\n            .filter(notEmpty)\n            .filter(notIgnore);\n\n        var matchingConversions = filterConversions(conversions, typeNames);\n\n        var exactTypes = typeNames.map(function (typeName) {\n          var type = findTypeByName(typeName);\n\n          return {\n            name: typeName,\n            typeIndex: findTypeIndex(type),\n            test: type.test,\n            conversion: null,\n            conversionIndex: -1\n          };\n        });\n\n        var convertibleTypes = matchingConversions.map(function (conversion) {\n          var type = findTypeByName(conversion.from);\n\n          return {\n            name: conversion.from,\n            typeIndex: findTypeIndex(type),\n            test: type.test,\n            conversion: conversion,\n            conversionIndex: conversions.indexOf(conversion)\n          };\n        });\n\n        return {\n          types: exactTypes.concat(convertibleTypes),\n          restParam: restParam\n        };\n      }\n\n      /**\n       * Parse a signature with comma separated parameters,\n       * like \"number | boolean, ...string\"\n       * @param {string} signature\n       * @param {function} fn\n       * @param {ConversionDef[]} conversions\n       * @return {Signature | null} signature\n       */\n      function parseSignature (signature, fn, conversions) {\n        var params = [];\n\n        if (signature.trim() !== '') {\n          params = signature\n              .split(',')\n              .map(trim)\n              .map(function (param, index, array) {\n                var parsedParam = parseParam(param, conversions);\n\n                if (parsedParam.restParam && (index !== array.length - 1)) {\n                  throw new SyntaxError('Unexpected rest parameter \"' + param + '\": ' +\n                      'only allowed for the last parameter');\n                }\n\n                return parsedParam;\n            });\n        }\n\n        if (params.some(isInvalidParam)) {\n          // invalid signature: at least one parameter has no types\n          // (they may have been filtered)\n          return null;\n        }\n\n        return {\n          params: params,\n          fn: fn\n        };\n      }\n\n      /**\n       * Test whether a set of params contains a restParam\n       * @param {Param[]} params\n       * @return {boolean} Returns true when the last parameter is a restParam\n       */\n      function hasRestParam(params) {\n        var param = last(params);\n        return param ? param.restParam : false;\n      }\n\n      /**\n       * Test whether a parameter contains conversions\n       * @param {Param} param\n       * @return {boolean} Returns true when at least one of the parameters\n       *                   contains a conversion.\n       */\n      function hasConversions(param) {\n        return param.types.some(function (type) {\n          return type.conversion != null;\n        });\n      }\n\n      /**\n       * Create a type test for a single parameter, which can have one or multiple\n       * types.\n       * @param {Param} param\n       * @return {function(x: *) : boolean} Returns a test function\n       */\n      function compileTest(param) {\n        if (!param || param.types.length === 0) {\n          // nothing to do\n          return ok;\n        }\n        else if (param.types.length === 1) {\n          return findTypeByName(param.types[0].name).test;\n        }\n        else if (param.types.length === 2) {\n          var test0 = findTypeByName(param.types[0].name).test;\n          var test1 = findTypeByName(param.types[1].name).test;\n          return function or(x) {\n            return test0(x) || test1(x);\n          }\n        }\n        else { // param.types.length > 2\n          var tests = param.types.map(function (type) {\n            return findTypeByName(type.name).test;\n          });\n          return function or(x) {\n            for (var i = 0; i < tests.length; i++) {\n              if (tests[i](x)) {\n                return true;\n              }\n            }\n            return false;\n          }\n        }\n      }\n\n      /**\n       * Create a test for all parameters of a signature\n       * @param {Param[]} params\n       * @return {function(args: Array<*>) : boolean}\n       */\n      function compileTests(params) {\n        var tests, test0, test1;\n\n        if (hasRestParam(params)) {\n          // variable arguments like '...number'\n          tests = initial(params).map(compileTest);\n          var varIndex = tests.length;\n          var lastTest = compileTest(last(params));\n          var testRestParam = function (args) {\n            for (var i = varIndex; i < args.length; i++) {\n              if (!lastTest(args[i])) {\n                return false;\n              }\n            }\n            return true;\n          };\n\n          return function testArgs(args) {\n            for (var i = 0; i < tests.length; i++) {\n              if (!tests[i](args[i])) {\n                return false;\n              }\n            }\n            return testRestParam(args) && (args.length >= varIndex + 1);\n          };\n        }\n        else {\n          // no variable arguments\n          if (params.length === 0) {\n            return function testArgs(args) {\n              return args.length === 0;\n            };\n          }\n          else if (params.length === 1) {\n            test0 = compileTest(params[0]);\n            return function testArgs(args) {\n              return test0(args[0]) && args.length === 1;\n            };\n          }\n          else if (params.length === 2) {\n            test0 = compileTest(params[0]);\n            test1 = compileTest(params[1]);\n            return function testArgs(args) {\n              return test0(args[0]) && test1(args[1]) && args.length === 2;\n            };\n          }\n          else { // arguments.length > 2\n            tests = params.map(compileTest);\n            return function testArgs(args) {\n              for (var i = 0; i < tests.length; i++) {\n                if (!tests[i](args[i])) {\n                  return false;\n                }\n              }\n              return args.length === tests.length;\n            };\n          }\n        }\n      }\n\n      /**\n       * Find the parameter at a specific index of a signature.\n       * Handles rest parameters.\n       * @param {Signature} signature\n       * @param {number} index\n       * @return {Param | null} Returns the matching parameter when found,\n       *                        null otherwise.\n       */\n      function getParamAtIndex(signature, index) {\n        return index < signature.params.length\n            ? signature.params[index]\n            : hasRestParam(signature.params)\n                ? last(signature.params)\n                : null\n      }\n\n      /**\n       * Get all type names of a parameter\n       * @param {Signature} signature\n       * @param {number} index\n       * @param {boolean} excludeConversions\n       * @return {string[]} Returns an array with type names\n       */\n      function getExpectedTypeNames (signature, index, excludeConversions) {\n        var param = getParamAtIndex(signature, index);\n        var types = param\n            ? excludeConversions\n                    ? param.types.filter(isExactType)\n                    : param.types\n            : [];\n\n        return types.map(getTypeName);\n      }\n\n      /**\n       * Returns the name of a type\n       * @param {Type} type\n       * @return {string} Returns the type name\n       */\n      function getTypeName(type) {\n        return type.name;\n      }\n\n      /**\n       * Test whether a type is an exact type or conversion\n       * @param {Type} type\n       * @return {boolean} Returns true when\n       */\n      function isExactType(type) {\n        return type.conversion === null || type.conversion === undefined;\n      }\n\n      /**\n       * Helper function for creating error messages: create an array with\n       * all available types on a specific argument index.\n       * @param {Signature[]} signatures\n       * @param {number} index\n       * @return {string[]} Returns an array with available types\n       */\n      function mergeExpectedParams(signatures, index) {\n        var typeNames = uniq(flatMap(signatures, function (signature) {\n          return getExpectedTypeNames(signature, index, false);\n        }));\n\n        return (typeNames.indexOf('any') !== -1) ? ['any'] : typeNames;\n      }\n\n      /**\n       * Create\n       * @param {string} name             The name of the function\n       * @param {array.<*>} args          The actual arguments passed to the function\n       * @param {Signature[]} signatures  A list with available signatures\n       * @return {TypeError} Returns a type error with additional data\n       *                     attached to it in the property `data`\n       */\n      function createError(name, args, signatures) {\n        var err, expected;\n        var _name = name || 'unnamed';\n\n        // test for wrong type at some index\n        var matchingSignatures = signatures;\n        var index;\n        for (index = 0; index < args.length; index++) {\n          var nextMatchingDefs = matchingSignatures.filter(function (signature) {\n            var test = compileTest(getParamAtIndex(signature, index));\n            return (index < signature.params.length || hasRestParam(signature.params)) &&\n                test(args[index]);\n          });\n\n          if (nextMatchingDefs.length === 0) {\n            // no matching signatures anymore, throw error \"wrong type\"\n            expected = mergeExpectedParams(matchingSignatures, index);\n            if (expected.length > 0) {\n              var actualType = findTypeName(args[index]);\n\n              err = new TypeError('Unexpected type of argument in function ' + _name +\n                  ' (expected: ' + expected.join(' or ') +\n                  ', actual: ' + actualType + ', index: ' + index + ')');\n              err.data = {\n                category: 'wrongType',\n                fn: _name,\n                index: index,\n                actual: actualType,\n                expected: expected\n              };\n              return err;\n            }\n          }\n          else {\n            matchingSignatures = nextMatchingDefs;\n          }\n        }\n\n        // test for too few arguments\n        var lengths = matchingSignatures.map(function (signature) {\n          return hasRestParam(signature.params) ? Infinity : signature.params.length;\n        });\n        if (args.length < Math.min.apply(null, lengths)) {\n          expected = mergeExpectedParams(matchingSignatures, index);\n          err = new TypeError('Too few arguments in function ' + _name +\n              ' (expected: ' + expected.join(' or ') +\n              ', index: ' + args.length + ')');\n          err.data = {\n            category: 'tooFewArgs',\n            fn: _name,\n            index: args.length,\n            expected: expected\n          };\n          return err;\n        }\n\n        // test for too many arguments\n        var maxLength = Math.max.apply(null, lengths);\n        if (args.length > maxLength) {\n          err = new TypeError('Too many arguments in function ' + _name +\n              ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n          err.data = {\n            category: 'tooManyArgs',\n            fn: _name,\n            index: args.length,\n            expectedLength: maxLength\n          };\n          return err;\n        }\n\n        err = new TypeError('Arguments of type \"' + args.join(', ') +\n            '\" do not match any of the defined signatures of function ' + _name + '.');\n        err.data = {\n          category: 'mismatch',\n          actual: args.map(findTypeName)\n        };\n        return err;\n      }\n\n      /**\n       * Find the lowest index of all exact types of a parameter (no conversions)\n       * @param {Param} param\n       * @return {number} Returns the index of the lowest type in typed.types\n       */\n      function getLowestTypeIndex (param) {\n        var min = 999;\n\n        for (var i = 0; i < param.types.length; i++) {\n          if (isExactType(param.types[i])) {\n            min = Math.min(min, param.types[i].typeIndex);\n          }\n        }\n\n        return min;\n      }\n\n      /**\n       * Find the lowest index of the conversion of all types of the parameter\n       * having a conversion\n       * @param {Param} param\n       * @return {number} Returns the lowest index of the conversions of this type\n       */\n      function getLowestConversionIndex (param) {\n        var min = 999;\n\n        for (var i = 0; i < param.types.length; i++) {\n          if (!isExactType(param.types[i])) {\n            min = Math.min(min, param.types[i].conversionIndex);\n          }\n        }\n\n        return min;\n      }\n\n      /**\n       * Compare two params\n       * @param {Param} param1\n       * @param {Param} param2\n       * @return {number} returns a negative number when param1 must get a lower\n       *                  index than param2, a positive number when the opposite,\n       *                  or zero when both are equal\n       */\n      function compareParams (param1, param2) {\n        var c;\n\n        // compare having a rest parameter or not\n        c = param1.restParam - param2.restParam;\n        if (c !== 0) {\n          return c;\n        }\n\n        // compare having conversions or not\n        c = hasConversions(param1) - hasConversions(param2);\n        if (c !== 0) {\n          return c;\n        }\n\n        // compare the index of the types\n        c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n        if (c !== 0) {\n          return c;\n        }\n\n        // compare the index of any conversion\n        return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n      }\n\n      /**\n       * Compare two signatures\n       * @param {Signature} signature1\n       * @param {Signature} signature2\n       * @return {number} returns a negative number when param1 must get a lower\n       *                  index than param2, a positive number when the opposite,\n       *                  or zero when both are equal\n       */\n      function compareSignatures (signature1, signature2) {\n        var len = Math.min(signature1.params.length, signature2.params.length);\n        var i;\n        var c;\n\n        // compare whether the params have conversions at all or not\n        c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions);\n        if (c !== 0) {\n          return c;\n        }\n\n        // next compare whether the params have conversions one by one\n        for (i = 0; i < len; i++) {\n          c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);\n          if (c !== 0) {\n            return c;\n          }\n        }\n\n        // compare the types of the params one by one\n        for (i = 0; i < len; i++) {\n          c = compareParams(signature1.params[i], signature2.params[i]);\n          if (c !== 0) {\n            return c;\n          }\n        }\n\n        // compare the number of params\n        return signature1.params.length - signature2.params.length;\n      }\n\n      /**\n       * Get params containing all types that can be converted to the defined types.\n       *\n       * @param {ConversionDef[]} conversions\n       * @param {string[]} typeNames\n       * @return {ConversionDef[]} Returns the conversions that are available\n       *                        for every type (if any)\n       */\n      function filterConversions(conversions, typeNames) {\n        var matches = {};\n\n        conversions.forEach(function (conversion) {\n          if (typeNames.indexOf(conversion.from) === -1 &&\n              typeNames.indexOf(conversion.to) !== -1 &&\n              !matches[conversion.from]) {\n            matches[conversion.from] = conversion;\n          }\n        });\n\n        return Object.keys(matches).map(function (from) {\n          return matches[from];\n        });\n      }\n\n      /**\n       * Preprocess arguments before calling the original function:\n       * - if needed convert the parameters\n       * - in case of rest parameters, move the rest parameters into an Array\n       * @param {Param[]} params\n       * @param {function} fn\n       * @return {function} Returns a wrapped function\n       */\n      function compileArgsPreprocessing(params, fn) {\n        var fnConvert = fn;\n\n        // TODO: can we make this wrapper function smarter/simpler?\n\n        if (params.some(hasConversions)) {\n          var restParam = hasRestParam(params);\n          var compiledConversions = params.map(compileArgConversion);\n\n          fnConvert = function convertArgs() {\n            var args = [];\n            var last = restParam ? arguments.length - 1 : arguments.length;\n            for (var i = 0; i < last; i++) {\n              args[i] = compiledConversions[i](arguments[i]);\n            }\n            if (restParam) {\n              args[last] = arguments[last].map(compiledConversions[last]);\n            }\n\n            return fn.apply(null, args);\n          };\n        }\n\n        var fnPreprocess = fnConvert;\n        if (hasRestParam(params)) {\n          var offset = params.length - 1;\n\n          fnPreprocess = function preprocessRestParams () {\n            return fnConvert.apply(null,\n                slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n          };\n        }\n\n        return fnPreprocess;\n      }\n\n      /**\n       * Compile conversion for a parameter to the right type\n       * @param {Param} param\n       * @return {function} Returns the wrapped function that will convert arguments\n       *\n       */\n      function compileArgConversion(param) {\n        var test0, test1, conversion0, conversion1;\n        var tests = [];\n        var conversions = [];\n\n        param.types.forEach(function (type) {\n          if (type.conversion) {\n            tests.push(findTypeByName(type.conversion.from).test);\n            conversions.push(type.conversion.convert);\n          }\n        });\n\n        // create optimized conversion functions depending on the number of conversions\n        switch (conversions.length) {\n          case 0:\n            return function convertArg(arg) {\n              return arg;\n            }\n\n          case 1:\n            test0 = tests[0];\n            conversion0 = conversions[0];\n            return function convertArg(arg) {\n              if (test0(arg)) {\n                return conversion0(arg)\n              }\n              return arg;\n            }\n\n          case 2:\n            test0 = tests[0];\n            test1 = tests[1];\n            conversion0 = conversions[0];\n            conversion1 = conversions[1];\n            return function convertArg(arg) {\n              if (test0(arg)) {\n                return conversion0(arg)\n              }\n              if (test1(arg)) {\n                return conversion1(arg)\n              }\n              return arg;\n            }\n\n          default:\n            return function convertArg(arg) {\n              for (var i = 0; i < conversions.length; i++) {\n                if (tests[i](arg)) {\n                  return conversions[i](arg);\n                }\n              }\n              return arg;\n            }\n        }\n      }\n\n      /**\n       * Convert an array with signatures into a map with signatures,\n       * where signatures with union types are split into separate signatures\n       *\n       * Throws an error when there are conflicting types\n       *\n       * @param {Signature[]} signatures\n       * @return {Object.<string, function>}  Returns a map with signatures\n       *                                      as key and the original function\n       *                                      of this signature as value.\n       */\n      function createSignaturesMap(signatures) {\n        var signaturesMap = {};\n        signatures.forEach(function (signature) {\n          if (!signature.params.some(hasConversions)) {\n            splitParams(signature.params, true).forEach(function (params) {\n              signaturesMap[stringifyParams(params)] = signature.fn;\n            });\n          }\n        });\n\n        return signaturesMap;\n      }\n\n      /**\n       * Split params with union types in to separate params.\n       *\n       * For example:\n       *\n       *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n       *     // returns:\n       *     // [\n       *     //   ['Array', 'string'],\n       *     //   ['Array', 'RegExp'],\n       *     //   ['Object', 'string'],\n       *     //   ['Object', 'RegExp']\n       *     // ]\n       *\n       * @param {Param[]} params\n       * @param {boolean} ignoreConversionTypes\n       * @return {Param[]}\n       */\n      function splitParams(params, ignoreConversionTypes) {\n        function _splitParams(params, index, types) {\n          if (index < params.length) {\n            var param = params[index];\n            var filteredTypes = ignoreConversionTypes\n                ? param.types.filter(isExactType)\n                : param.types;\n            var typeGroups;\n\n            if (param.restParam) {\n              // split the types of a rest parameter in two:\n              // one with only exact types, and one with exact types and conversions\n              var exactTypes = filteredTypes.filter(isExactType);\n              typeGroups = exactTypes.length < filteredTypes.length\n                  ? [exactTypes, filteredTypes]\n                  : [filteredTypes];\n\n            }\n            else {\n              // split all the types of a regular parameter into one type per group\n              typeGroups = filteredTypes.map(function (type) {\n                return [type]\n              });\n            }\n\n            // recurse over the groups with types\n            return flatMap(typeGroups, function (typeGroup) {\n              return _splitParams(params, index + 1, types.concat([typeGroup]));\n            });\n\n          }\n          else {\n            // we've reached the end of the parameters. Now build a new Param\n            var splittedParams = types.map(function (type, typeIndex) {\n              return {\n                types: type,\n                restParam: (typeIndex === params.length - 1) && hasRestParam(params)\n              }\n            });\n\n            return [splittedParams];\n          }\n        }\n\n        return _splitParams(params, 0, []);\n      }\n\n      /**\n       * Test whether two signatures have a conflicting signature\n       * @param {Signature} signature1\n       * @param {Signature} signature2\n       * @return {boolean} Returns true when the signatures conflict, false otherwise.\n       */\n      function hasConflictingParams(signature1, signature2) {\n        var ii = Math.max(signature1.params.length, signature2.params.length);\n\n        for (var i = 0; i < ii; i++) {\n          var typesNames1 = getExpectedTypeNames(signature1, i, true);\n          var typesNames2 = getExpectedTypeNames(signature2, i, true);\n\n          if (!hasOverlap(typesNames1, typesNames2)) {\n            return false;\n          }\n        }\n\n        var len1 = signature1.params.length;\n        var len2 = signature2.params.length;\n        var restParam1 = hasRestParam(signature1.params);\n        var restParam2 = hasRestParam(signature2.params);\n\n        return restParam1\n            ? restParam2 ? (len1 === len2) : (len2 >= len1)\n            : restParam2 ? (len1 >= len2)  : (len1 === len2)\n      }\n\n      /**\n       * Create a typed function\n       * @param {String} name               The name for the typed function\n       * @param {Object.<string, function>} signaturesMap\n       *                                    An object with one or\n       *                                    multiple signatures as key, and the\n       *                                    function corresponding to the\n       *                                    signature as value.\n       * @return {function}  Returns the created typed function.\n       */\n      function createTypedFunction(name, signaturesMap) {\n        if (Object.keys(signaturesMap).length === 0) {\n          throw new SyntaxError('No signatures provided');\n        }\n\n        // parse the signatures, and check for conflicts\n        var parsedSignatures = [];\n        Object.keys(signaturesMap)\n            .map(function (signature) {\n              return parseSignature(signature, signaturesMap[signature], typed.conversions);\n            })\n            .filter(notNull)\n            .forEach(function (parsedSignature) {\n              // check whether this parameter conflicts with already parsed signatures\n              var conflictingSignature = findInArray(parsedSignatures, function (s) {\n                return hasConflictingParams(s, parsedSignature)\n              });\n              if (conflictingSignature) {\n                throw new TypeError('Conflicting signatures \"' +\n                    stringifyParams(conflictingSignature.params) + '\" and \"' +\n                    stringifyParams(parsedSignature.params) + '\".');\n              }\n\n              parsedSignatures.push(parsedSignature);\n            });\n\n        // split and filter the types of the signatures, and then order them\n        var signatures = flatMap(parsedSignatures, function (parsedSignature) {\n          var params = parsedSignature ? splitParams(parsedSignature.params, false) : [];\n\n          return params.map(function (params) {\n            return {\n              params: params,\n              fn: parsedSignature.fn\n            };\n          });\n        }).filter(notNull);\n\n        signatures.sort(compareSignatures);\n\n        // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n        var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n        var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n        var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n        var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n        var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n        var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n        var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;\n\n        // compile the tests\n        var tests = signatures.map(function (signature) {\n          return compileTests(signature.params);\n        });\n\n        var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n        var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n        var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n        var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n        var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n        var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n\n        var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n        var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n        var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n        var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n        var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n        var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;\n\n        // compile the functions\n        var fns = signatures.map(function(signature) {\n          return compileArgsPreprocessing(signature.params, signature.fn)\n        });\n\n        var fn0 = ok0 ? fns[0] : undef;\n        var fn1 = ok1 ? fns[1] : undef;\n        var fn2 = ok2 ? fns[2] : undef;\n        var fn3 = ok3 ? fns[3] : undef;\n        var fn4 = ok4 ? fns[4] : undef;\n        var fn5 = ok5 ? fns[5] : undef;\n\n        var len0 = ok0 ? signatures[0].params.length : -1;\n        var len1 = ok1 ? signatures[1].params.length : -1;\n        var len2 = ok2 ? signatures[2].params.length : -1;\n        var len3 = ok3 ? signatures[3].params.length : -1;\n        var len4 = ok4 ? signatures[4].params.length : -1;\n        var len5 = ok5 ? signatures[5].params.length : -1;\n\n        // simple and generic, but also slow\n        var iStart = allOk ? 6 : 0;\n        var iEnd = signatures.length;\n        var generic = function generic() {\n\n          for (var i = iStart; i < iEnd; i++) {\n            if (tests[i](arguments)) {\n              return fns[i].apply(null, arguments);\n            }\n          }\n\n          throw createError(name, arguments, signatures);\n        };\n\n        // create the typed function\n        // fast, specialized version. Falls back to the slower, generic one if needed\n        var fn = function fn(arg0, arg1) {\n\n          if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(null, arguments); }\n          if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(null, arguments); }\n          if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(null, arguments); }\n          if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(null, arguments); }\n          if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(null, arguments); }\n          if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(null, arguments); }\n\n          return generic.apply(null, arguments);\n        };\n\n        // attach name the typed function\n        try {\n          Object.defineProperty(fn, 'name', {value: name});\n        }\n        catch (err) {\n          // old browsers do not support Object.defineProperty and some don't support setting the name property\n          // the function name is not essential for the functioning, it's mostly useful for debugging,\n          // so it's fine to have unnamed functions.\n        }\n\n        // attach signatures to the function\n        fn.signatures = createSignaturesMap(signatures);\n\n        return fn;\n      }\n\n      /**\n       * Test whether a type should be NOT be ignored\n       * @param {string} typeName\n       * @return {boolean}\n       */\n      function notIgnore(typeName) {\n        return typed.ignore.indexOf(typeName) === -1;\n      }\n\n      /**\n       * trim a string\n       * @param {string} str\n       * @return {string}\n       */\n      function trim(str) {\n        return str.trim();\n      }\n\n      /**\n       * Test whether a string is not empty\n       * @param {string} str\n       * @return {boolean}\n       */\n      function notEmpty(str) {\n        return !!str;\n      }\n\n      /**\n       * test whether a value is not strict equal to null\n       * @param {*} value\n       * @return {boolean}\n       */\n      function notNull(value) {\n        return value !== null;\n      }\n\n      /**\n       * Test whether a parameter has no types defined\n       * @param {Param} param\n       * @return {boolean}\n       */\n      function isInvalidParam (param) {\n        return param.types.length === 0;\n      }\n\n      /**\n       * Return all but the last items of an array\n       * @param {Array} arr\n       * @return {Array}\n       */\n      function initial(arr) {\n        return arr.slice(0, arr.length - 1);\n      }\n\n      /**\n       * return the last item of an array\n       * @param {Array} arr\n       * @return {*}\n       */\n      function last(arr) {\n        return arr[arr.length - 1];\n      }\n\n      /**\n       * Slice an array or function Arguments\n       * @param {Array | Arguments | IArguments} arr\n       * @param {number} start\n       * @param {number} [end]\n       * @return {Array}\n       */\n      function slice(arr, start, end) {\n        return Array.prototype.slice.call(arr, start, end);\n      }\n\n      /**\n       * Test whether an array contains some item\n       * @param {Array} array\n       * @param {*} item\n       * @return {boolean} Returns true if array contains item, false if not.\n       */\n      function contains(array, item) {\n        return array.indexOf(item) !== -1;\n      }\n\n      /**\n       * Test whether two arrays have overlapping items\n       * @param {Array} array1\n       * @param {Array} array2\n       * @return {boolean} Returns true when at least one item exists in both arrays\n       */\n      function hasOverlap(array1, array2) {\n        for (var i = 0; i < array1.length; i++) {\n          if (contains(array2, array1[i])) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      /**\n       * Return the first item from an array for which test(arr[i]) returns true\n       * @param {Array} arr\n       * @param {function} test\n       * @return {* | undefined} Returns the first matching item\n       *                         or undefined when there is no match\n       */\n      function findInArray(arr, test) {\n        for (var i = 0; i < arr.length; i++) {\n          if (test(arr[i])) {\n            return arr[i];\n          }\n        }\n        return undefined;\n      }\n\n      /**\n       * Filter unique items of an array with strings\n       * @param {string[]} arr\n       * @return {string[]}\n       */\n      function uniq(arr) {\n        var entries = {};\n        for (var i = 0; i < arr.length; i++) {\n          entries[arr[i]] = true;\n        }\n        return Object.keys(entries);\n      }\n\n      /**\n       * Flat map the result invoking a callback for every item in an array.\n       * https://gist.github.com/samgiles/762ee337dff48623e729\n       * @param {Array} arr\n       * @param {function} callback\n       * @return {Array}\n       */\n      function flatMap(arr, callback) {\n        return Array.prototype.concat.apply([], arr.map(callback));\n      }\n\n      /**\n       * Retrieve the function name from a set of typed functions,\n       * and check whether the name of all functions match (if given)\n       * @param {function[]} fns\n       */\n      function getName (fns) {\n        var name = '';\n\n        for (var i = 0; i < fns.length; i++) {\n          var fn = fns[i];\n\n          // check whether the names are the same when defined\n          if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {\n            if (name === '') {\n              name = fn.name;\n            }\n            else if (name !== fn.name) {\n              var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n              err.data = {\n                actual: fn.name,\n                expected: name\n              };\n              throw err;\n            }\n          }\n        }\n\n        return name;\n      }\n\n      // extract and merge all signatures of a list with typed functions\n      function extractSignatures(fns) {\n        var err;\n        var signaturesMap = {};\n\n        function validateUnique(_signature, _fn) {\n          if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {\n            err = new Error('Signature \"' + _signature + '\" is defined twice');\n            err.data = {signature: _signature};\n            throw err;\n            // else: both signatures point to the same function, that's fine\n          }\n        }\n\n        for (var i = 0; i < fns.length; i++) {\n          var fn = fns[i];\n\n          // test whether this is a typed-function\n          if (typeof fn.signatures === 'object') {\n            // merge the signatures\n            for (var signature in fn.signatures) {\n              if (fn.signatures.hasOwnProperty(signature)) {\n                validateUnique(signature, fn.signatures[signature]);\n                signaturesMap[signature] = fn.signatures[signature];\n              }\n            }\n          }\n          else if (typeof fn.signature === 'string') {\n            validateUnique(fn.signature, fn);\n            signaturesMap[fn.signature] = fn;\n          }\n          else {\n            err = new TypeError('Function is no typed-function (index: ' + i + ')');\n            err.data = {index: i};\n            throw err;\n          }\n        }\n\n        return signaturesMap;\n      }\n\n      typed = createTypedFunction('typed', {\n        'string, Object': createTypedFunction,\n        'Object': function (signaturesMap) {\n          // find existing name\n          var fns = [];\n          for (var signature in signaturesMap) {\n            if (signaturesMap.hasOwnProperty(signature)) {\n              fns.push(signaturesMap[signature]);\n            }\n          }\n          var name = getName(fns);\n          return createTypedFunction(name, signaturesMap);\n        },\n        '...Function': function (fns) {\n          return createTypedFunction(getName(fns), extractSignatures(fns));\n        },\n        'string, ...Function': function (name, fns) {\n          return createTypedFunction(name, extractSignatures(fns));\n        }\n      });\n\n      typed.create = create;\n      typed.types = _types;\n      typed.conversions = _conversions;\n      typed.ignore = _ignore;\n      typed.convert = convert;\n      typed.find = find;\n\n      /**\n       * add a type\n       * @param {{name: string, test: function}} type\n       * @param {boolean} [beforeObjectTest=true]\n       *                          If true, the new test will be inserted before\n       *                          the test with name 'Object' (if any), since\n       *                          tests for Object match Array and classes too.\n       */\n      typed.addType = function (type, beforeObjectTest) {\n        if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n          throw new TypeError('Object with properties {name: string, test: function} expected');\n        }\n\n        if (beforeObjectTest !== false) {\n          for (var i = 0; i < typed.types.length; i++) {\n            if (typed.types[i].name === 'Object') {\n              typed.types.splice(i, 0, type);\n              return\n            }\n          }\n        }\n\n        typed.types.push(type);\n      };\n\n      // add a conversion\n      typed.addConversion = function (conversion) {\n        if (!conversion\n            || typeof conversion.from !== 'string'\n            || typeof conversion.to !== 'string'\n            || typeof conversion.convert !== 'function') {\n          throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n        }\n\n        typed.conversions.push(conversion);\n      };\n\n      return typed;\n    }\n\n    return create();\n  }));\n  });\n\n  var number = createCommonjsModule(function (module, exports) {\n\n\n  /**\n   * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n   */\n\n  /**\n   * Test whether value is a number\n   * @param {*} value\n   * @return {boolean} isNumber\n   */\n\n\n  exports.isNumber = function (value) {\n    return typeof value === 'number';\n  };\n  /**\n   * Check if a number is integer\n   * @param {number | boolean} value\n   * @return {boolean} isInteger\n   */\n\n\n  exports.isInteger = function (value) {\n    if (typeof value === 'boolean') {\n      return true;\n    }\n\n    return isFinite(value) ? value === Math.round(value) : false; // Note: we use ==, not ===, as we can have Booleans as well\n  };\n  /**\n   * Calculate the sign of a number\n   * @param {number} x\n   * @returns {*}\n   */\n\n\n  exports.sign = Math.sign || function (x) {\n    if (x > 0) {\n      return 1;\n    } else if (x < 0) {\n      return -1;\n    } else {\n      return 0;\n    }\n  };\n  /**\n   * Convert a number to a formatted string representation.\n   *\n   * Syntax:\n   *\n   *    format(value)\n   *    format(value, options)\n   *    format(value, precision)\n   *    format(value, fn)\n   *\n   * Where:\n   *\n   *    {number} value   The value to be formatted\n   *    {Object} options An object with formatting options. Available options:\n   *                     {string} notation\n   *                         Number notation. Choose from:\n   *                         'fixed'          Always use regular number notation.\n   *                                          For example '123.40' and '14000000'\n   *                         'exponential'    Always use exponential notation.\n   *                                          For example '1.234e+2' and '1.4e+7'\n   *                         'engineering'    Always use engineering notation.\n   *                                          For example '123.4e+0' and '14.0e+6'\n   *                         'auto' (default) Regular number notation for numbers\n   *                                          having an absolute value between\n   *                                          `lowerExp` and `upperExp` bounds, and\n   *                                          uses exponential notation elsewhere.\n   *                                          Lower bound is included, upper bound\n   *                                          is excluded.\n   *                                          For example '123.4' and '1.4e7'.\n   *                     {number} precision   A number between 0 and 16 to round\n   *                                          the digits of the number.\n   *                                          In case of notations 'exponential',\n   *                                          'engineering', and 'auto',\n   *                                          `precision` defines the total\n   *                                          number of significant digits returned.\n   *                                          In case of notation 'fixed',\n   *                                          `precision` defines the number of\n   *                                          significant digits after the decimal\n   *                                          point.\n   *                                          `precision` is undefined by default,\n   *                                          not rounding any digits.\n   *                     {number} lowerExp    Exponent determining the lower boundary\n   *                                          for formatting a value with an exponent\n   *                                          when `notation='auto`.\n   *                                          Default value is `-3`.\n   *                     {number} upperExp    Exponent determining the upper boundary\n   *                                          for formatting a value with an exponent\n   *                                          when `notation='auto`.\n   *                                          Default value is `5`.\n   *    {Function} fn    A custom formatting function. Can be used to override the\n   *                     built-in notations. Function `fn` is called with `value` as\n   *                     parameter and must return a string. Is useful for example to\n   *                     format all values inside a matrix in a particular way.\n   *\n   * Examples:\n   *\n   *    format(6.4)                                        // '6.4'\n   *    format(1240000)                                    // '1.24e6'\n   *    format(1/3)                                        // '0.3333333333333333'\n   *    format(1/3, 3)                                     // '0.333'\n   *    format(21385, 2)                                   // '21000'\n   *    format(12.071, {notation: 'fixed'})                // '12'\n   *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n   *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n   *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n   *\n   * @param {number} value\n   * @param {Object | Function | number} [options]\n   * @return {string} str The formatted value\n   */\n\n\n  exports.format = function (value, options) {\n    if (typeof options === 'function') {\n      // handle format(value, fn)\n      return options(value);\n    } // handle special cases\n\n\n    if (value === Infinity) {\n      return 'Infinity';\n    } else if (value === -Infinity) {\n      return '-Infinity';\n    } else if (isNaN(value)) {\n      return 'NaN';\n    } // default values for options\n\n\n    var notation = 'auto';\n    var precision;\n\n    if (options) {\n      // determine notation from options\n      if (options.notation) {\n        notation = options.notation;\n      } // determine precision from options\n\n\n      if (exports.isNumber(options)) {\n        precision = options;\n      } else if (exports.isNumber(options.precision)) {\n        precision = options.precision;\n      }\n    } // handle the various notations\n\n\n    switch (notation) {\n      case 'fixed':\n        return exports.toFixed(value, precision);\n\n      case 'exponential':\n        return exports.toExponential(value, precision);\n\n      case 'engineering':\n        return exports.toEngineering(value, precision);\n\n      case 'auto':\n        // TODO: clean up some day. Deprecated since: 2018-01-24\n        // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n        if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n          var fixedOptions = object.map(options, function (x) {\n            return x;\n          });\n          fixedOptions.exponential = undefined;\n\n          if (options.exponential.lower !== undefined) {\n            fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10);\n          }\n\n          if (options.exponential.upper !== undefined) {\n            fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10);\n          }\n\n          console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' + '(minimum and maximum value) ' + 'are replaced with exponential.lowerExp and exponential.upperExp ' + '(minimum and maximum exponent) since version 4.0.0. ' + 'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions));\n          return exports.toPrecision(value, precision, fixedOptions);\n        }\n\n        return exports.toPrecision(value, precision, options && options) // remove trailing zeros after the decimal point\n        .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          var digits = arguments[2];\n          var e = arguments[4];\n          return digits !== '.' ? digits + e : e;\n        });\n\n      default:\n        throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n    }\n  };\n  /**\n   * Split a number into sign, coefficients, and exponent\n   * @param {number | string} value\n   * @return {SplitValue}\n   *              Returns an object containing sign, coefficients, and exponent\n   */\n\n\n  exports.splitNumber = function (value) {\n    // parse the input value\n    var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n\n    if (!match) {\n      throw new SyntaxError('Invalid number ' + value);\n    }\n\n    var sign = match[1];\n    var digits = match[2];\n    var exponent = parseFloat(match[4] || '0');\n    var dot = digits.indexOf('.');\n    exponent += dot !== -1 ? dot - 1 : digits.length - 1;\n    var coefficients = digits.replace('.', '') // remove the dot (must be removed before removing leading zeros)\n    .replace(/^0*/, function (zeros) {\n      // remove leading zeros, add their count to the exponent\n      exponent -= zeros.length;\n      return '';\n    }).replace(/0*$/, '') // remove trailing zeros\n    .split('').map(function (d) {\n      return parseInt(d);\n    });\n\n    if (coefficients.length === 0) {\n      coefficients.push(0);\n      exponent++;\n    }\n\n    return {\n      sign: sign,\n      coefficients: coefficients,\n      exponent: exponent\n    };\n  };\n  /**\n   * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n   * @param {number | string} value\n   * @param {number} [precision]        Optional number of significant figures to return.\n   */\n\n\n  exports.toEngineering = function (value, precision) {\n    if (isNaN(value) || !isFinite(value)) {\n      return String(value);\n    }\n\n    var rounded = exports.roundDigits(exports.splitNumber(value), precision);\n    var e = rounded.exponent;\n    var c = rounded.coefficients; // find nearest lower multiple of 3 for exponent\n\n    var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;\n\n    if (exports.isNumber(precision)) {\n      // add zeroes to give correct sig figs\n      if (precision > c.length) c = c.concat(zeros(precision - c.length));\n    } else {\n      // concatenate coefficients with necessary zeros\n      var significandsDiff = e >= 0 ? e : Math.abs(newExp); // add zeros if necessary (for ex: 1e+8)\n\n      if (c.length - 1 < significandsDiff) c = c.concat(zeros(significandsDiff - (c.length - 1)));\n    } // find difference in exponents\n\n\n    var expDiff = Math.abs(e - newExp);\n    var decimalIdx = 1; // push decimal index over by expDiff times\n\n    while (--expDiff >= 0) {\n      decimalIdx++;\n    } // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n    // otherwise concat with the rest of the coefficients\n\n\n    var decimals = c.slice(decimalIdx).join('');\n    var decimalVal = exports.isNumber(precision) && decimals.length || decimals.match(/[1-9]/) ? '.' + decimals : '';\n    var str = c.slice(0, decimalIdx).join('') + decimalVal + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n    return rounded.sign + str;\n  };\n  /**\n   * Format a number with fixed notation.\n   * @param {number | string} value\n   * @param {number} [precision=undefined]  Optional number of decimals after the\n   *                                        decimal point. null by default.\n   */\n\n\n  exports.toFixed = function (value, precision) {\n    if (isNaN(value) || !isFinite(value)) {\n      return String(value);\n    }\n\n    var splitValue = exports.splitNumber(value);\n    var rounded = typeof precision === 'number' ? exports.roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;\n    var c = rounded.coefficients;\n    var p = rounded.exponent + 1; // exponent may have changed\n    // append zeros if needed\n\n    var pp = p + (precision || 0);\n\n    if (c.length < pp) {\n      c = c.concat(zeros(pp - c.length));\n    } // prepend zeros if needed\n\n\n    if (p < 0) {\n      c = zeros(-p + 1).concat(c);\n      p = 1;\n    } // insert a dot if needed\n\n\n    if (p < c.length) {\n      c.splice(p, 0, p === 0 ? '0.' : '.');\n    }\n\n    return rounded.sign + c.join('');\n  };\n  /**\n   * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n   * @param {number | string} value\n   * @param {number} [precision]  Number of digits in formatted output.\n   *                              If not provided, the maximum available digits\n   *                              is used.\n   */\n\n\n  exports.toExponential = function (value, precision) {\n    if (isNaN(value) || !isFinite(value)) {\n      return String(value);\n    } // round if needed, else create a clone\n\n\n    var split = exports.splitNumber(value);\n    var rounded = precision ? exports.roundDigits(split, precision) : split;\n    var c = rounded.coefficients;\n    var e = rounded.exponent; // append zeros if needed\n\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    } // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n\n\n    var first = c.shift();\n    return rounded.sign + first + (c.length > 0 ? '.' + c.join('') : '') + 'e' + (e >= 0 ? '+' : '') + e;\n  };\n  /**\n   * Format a number with a certain precision\n   * @param {number | string} value\n   * @param {number} [precision=undefined] Optional number of digits.\n   * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n   *                                       By default:\n   *                                         lowerExp = -3 (incl)\n   *                                         upper = +5 (excl)\n   * @return {string}\n   */\n\n\n  exports.toPrecision = function (value, precision, options) {\n    if (isNaN(value) || !isFinite(value)) {\n      return String(value);\n    } // determine lower and upper bound for exponential notation.\n\n\n    var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n    var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5;\n    var split = exports.splitNumber(value);\n\n    if (split.exponent < lowerExp || split.exponent >= upperExp) {\n      // exponential notation\n      return exports.toExponential(value, precision);\n    } else {\n      var rounded = precision ? exports.roundDigits(split, precision) : split;\n      var c = rounded.coefficients;\n      var e = rounded.exponent; // append trailing zeros\n\n      if (c.length < precision) {\n        c = c.concat(zeros(precision - c.length));\n      } // append trailing zeros\n      // TODO: simplify the next statement\n\n\n      c = c.concat(zeros(e - c.length + 1 + (c.length < precision ? precision - c.length : 0))); // prepend zeros\n\n      c = zeros(-e).concat(c);\n      var dot = e > 0 ? e : 0;\n\n      if (dot < c.length - 1) {\n        c.splice(dot + 1, 0, '.');\n      }\n\n      return rounded.sign + c.join('');\n    }\n  };\n  /**\n   * Round the number of digits of a number *\n   * @param {SplitValue} split       A value split with .splitNumber(value)\n   * @param {number} precision  A positive integer\n   * @return {SplitValue}\n   *              Returns an object containing sign, coefficients, and exponent\n   *              with rounded digits\n   */\n\n\n  exports.roundDigits = function (split, precision) {\n    // create a clone\n    var rounded = {\n      sign: split.sign,\n      coefficients: split.coefficients,\n      exponent: split.exponent\n    };\n    var c = rounded.coefficients; // prepend zeros if needed\n\n    while (precision <= 0) {\n      c.unshift(0);\n      rounded.exponent++;\n      precision++;\n    }\n\n    if (c.length > precision) {\n      var removed = c.splice(precision, c.length - precision);\n\n      if (removed[0] >= 5) {\n        var i = precision - 1;\n        c[i]++;\n\n        while (c[i] === 10) {\n          c.pop();\n\n          if (i === 0) {\n            c.unshift(0);\n            rounded.exponent++;\n            i++;\n          }\n\n          i--;\n          c[i]++;\n        }\n      }\n    }\n\n    return rounded;\n  };\n  /**\n   * Create an array filled with zeros.\n   * @param {number} length\n   * @return {Array}\n   */\n\n\n  function zeros(length) {\n    var arr = [];\n\n    for (var i = 0; i < length; i++) {\n      arr.push(0);\n    }\n\n    return arr;\n  }\n  /**\n   * Count the number of significant digits of a number.\n   *\n   * For example:\n   *   2.34 returns 3\n   *   0.0034 returns 2\n   *   120.5e+30 returns 4\n   *\n   * @param {number} value\n   * @return {number} digits   Number of significant digits\n   */\n\n\n  exports.digits = function (value) {\n    return value.toExponential().replace(/e.*$/, '') // remove exponential notation\n    .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n    .length;\n  };\n  /**\n   * Minimum number added to one that makes the result different than one\n   */\n\n\n  exports.DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n  /**\n   * Compares two floating point numbers.\n   * @param {number} x          First value to compare\n   * @param {number} y          Second value to compare\n   * @param {number} [epsilon]  The maximum relative difference between x and y\n   *                            If epsilon is undefined or null, the function will\n   *                            test whether x and y are exactly equal.\n   * @return {boolean} whether the two numbers are nearly equal\n  */\n\n  exports.nearlyEqual = function (x, y, epsilon) {\n    // if epsilon is null or undefined, test whether x and y are exactly equal\n    if (epsilon === null || epsilon === undefined) {\n      return x === y;\n    }\n\n    if (x === y) {\n      return true;\n    } // NaN\n\n\n    if (isNaN(x) || isNaN(y)) {\n      return false;\n    } // at this point x and y should be finite\n\n\n    if (isFinite(x) && isFinite(y)) {\n      // check numbers are very close, needed when comparing numbers near zero\n      var diff = Math.abs(x - y);\n\n      if (diff < exports.DBL_EPSILON) {\n        return true;\n      } else {\n        // use relative error\n        return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n      }\n    } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n    return false;\n  };\n  });\n  var number_1 = number.isNumber;\n  var number_2 = number.isInteger;\n  var number_3 = number.sign;\n  var number_4 = number.format;\n  var number_5 = number.splitNumber;\n  var number_6 = number.toEngineering;\n  var number_7 = number.toFixed;\n  var number_8 = number.toExponential;\n  var number_9 = number.toPrecision;\n  var number_10 = number.roundDigits;\n  var number_11 = number.digits;\n  var number_12 = number.DBL_EPSILON;\n  var number_13 = number.nearlyEqual;\n\n  /**\n   * Test whether a value is a Matrix\n   * @param {*} x\n   * @returns {boolean} returns true with input is a Matrix\n   *                    (like a DenseMatrix or SparseMatrix)\n   */\n\n  var isMatrix = function isMatrix(x) {\n    return x && x.constructor.prototype.isMatrix || false;\n  };\n\n  function _typeof$1(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$1 = function _typeof(obj) { return typeof obj; }; } else { _typeof$1 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$1(obj); }\n\n\n\n  var digits = number.digits;\n\n\n\n   // returns a new instance of typed-function\n\n\n  var _createTyped = function createTyped() {\n    // initially, return the original instance of typed-function\n    // consecutively, return a new instance from typed.create.\n    _createTyped = typedFunction.create;\n    return typedFunction;\n  };\n  /**\n   * Factory function for creating a new typed instance\n   * @param {Object} type   Object with data types like Complex and BigNumber\n   * @returns {Function}\n   */\n\n\n  var create = function create(type) {\n    // TODO: typed-function must be able to silently ignore signatures with unknown data types\n    // type checks for all known types\n    //\n    // note that:\n    //\n    // - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n    //   instanceof cannot be used because that would not allow to pass data from\n    //   one instance of math.js to another since each has it's own instance of Unit.\n    // - check the `isUnit` property via the constructor, so there will be no\n    //   matches for \"fake\" instances like plain objects with a property `isUnit`.\n    //   That is important for security reasons.\n    // - It must not be possible to override the type checks used internally,\n    //   for security reasons, so these functions are not exposed in the expression\n    //   parser.\n    type.isNumber = function (x) {\n      return typeof x === 'number';\n    };\n\n    type.isComplex = function (x) {\n      return type.Complex && x instanceof type.Complex || false;\n    };\n\n    type.isBigNumber = isBigNumber;\n\n    type.isFraction = function (x) {\n      return type.Fraction && x instanceof type.Fraction || false;\n    };\n\n    type.isUnit = function (x) {\n      return x && x.constructor.prototype.isUnit || false;\n    };\n\n    type.isString = function (x) {\n      return typeof x === 'string';\n    };\n\n    type.isArray = Array.isArray;\n    type.isMatrix = isMatrix;\n\n    type.isDenseMatrix = function (x) {\n      return x && x.isDenseMatrix && x.constructor.prototype.isMatrix || false;\n    };\n\n    type.isSparseMatrix = function (x) {\n      return x && x.isSparseMatrix && x.constructor.prototype.isMatrix || false;\n    };\n\n    type.isRange = function (x) {\n      return x && x.constructor.prototype.isRange || false;\n    };\n\n    type.isIndex = function (x) {\n      return x && x.constructor.prototype.isIndex || false;\n    };\n\n    type.isBoolean = function (x) {\n      return typeof x === 'boolean';\n    };\n\n    type.isResultSet = function (x) {\n      return x && x.constructor.prototype.isResultSet || false;\n    };\n\n    type.isHelp = function (x) {\n      return x && x.constructor.prototype.isHelp || false;\n    };\n\n    type.isFunction = function (x) {\n      return typeof x === 'function';\n    };\n\n    type.isDate = function (x) {\n      return x instanceof Date;\n    };\n\n    type.isRegExp = function (x) {\n      return x instanceof RegExp;\n    };\n\n    type.isObject = function (x) {\n      return _typeof$1(x) === 'object' && x.constructor === Object && !type.isComplex(x) && !type.isFraction(x);\n    };\n\n    type.isNull = function (x) {\n      return x === null;\n    };\n\n    type.isUndefined = function (x) {\n      return x === undefined;\n    };\n\n    type.isAccessorNode = function (x) {\n      return x && x.isAccessorNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isArrayNode = function (x) {\n      return x && x.isArrayNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isAssignmentNode = function (x) {\n      return x && x.isAssignmentNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isBlockNode = function (x) {\n      return x && x.isBlockNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isConditionalNode = function (x) {\n      return x && x.isConditionalNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isConstantNode = function (x) {\n      return x && x.isConstantNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isFunctionAssignmentNode = function (x) {\n      return x && x.isFunctionAssignmentNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isFunctionNode = function (x) {\n      return x && x.isFunctionNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isIndexNode = function (x) {\n      return x && x.isIndexNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isNode = function (x) {\n      return x && x.isNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isObjectNode = function (x) {\n      return x && x.isObjectNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isOperatorNode = function (x) {\n      return x && x.isOperatorNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isParenthesisNode = function (x) {\n      return x && x.isParenthesisNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isRangeNode = function (x) {\n      return x && x.isRangeNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isSymbolNode = function (x) {\n      return x && x.isSymbolNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isChain = function (x) {\n      return x && x.constructor.prototype.isChain || false;\n    }; // get a new instance of typed-function\n\n\n    var typed = _createTyped(); // define all types. The order of the types determines in which order function\n    // arguments are type-checked (so for performance it's important to put the\n    // most used types first).\n\n\n    typed.types = [{\n      name: 'number',\n      test: type.isNumber\n    }, {\n      name: 'Complex',\n      test: type.isComplex\n    }, {\n      name: 'BigNumber',\n      test: type.isBigNumber\n    }, {\n      name: 'Fraction',\n      test: type.isFraction\n    }, {\n      name: 'Unit',\n      test: type.isUnit\n    }, {\n      name: 'string',\n      test: type.isString\n    }, {\n      name: 'Array',\n      test: type.isArray\n    }, {\n      name: 'Matrix',\n      test: type.isMatrix\n    }, {\n      name: 'DenseMatrix',\n      test: type.isDenseMatrix\n    }, {\n      name: 'SparseMatrix',\n      test: type.isSparseMatrix\n    }, {\n      name: 'Range',\n      test: type.isRange\n    }, {\n      name: 'Index',\n      test: type.isIndex\n    }, {\n      name: 'boolean',\n      test: type.isBoolean\n    }, {\n      name: 'ResultSet',\n      test: type.isResultSet\n    }, {\n      name: 'Help',\n      test: type.isHelp\n    }, {\n      name: 'function',\n      test: type.isFunction\n    }, {\n      name: 'Date',\n      test: type.isDate\n    }, {\n      name: 'RegExp',\n      test: type.isRegExp\n    }, {\n      name: 'null',\n      test: type.isNull\n    }, {\n      name: 'undefined',\n      test: type.isUndefined\n    }, {\n      name: 'OperatorNode',\n      test: type.isOperatorNode\n    }, {\n      name: 'ConstantNode',\n      test: type.isConstantNode\n    }, {\n      name: 'SymbolNode',\n      test: type.isSymbolNode\n    }, {\n      name: 'ParenthesisNode',\n      test: type.isParenthesisNode\n    }, {\n      name: 'FunctionNode',\n      test: type.isFunctionNode\n    }, {\n      name: 'FunctionAssignmentNode',\n      test: type.isFunctionAssignmentNode\n    }, {\n      name: 'ArrayNode',\n      test: type.isArrayNode\n    }, {\n      name: 'AssignmentNode',\n      test: type.isAssignmentNode\n    }, {\n      name: 'BlockNode',\n      test: type.isBlockNode\n    }, {\n      name: 'ConditionalNode',\n      test: type.isConditionalNode\n    }, {\n      name: 'IndexNode',\n      test: type.isIndexNode\n    }, {\n      name: 'RangeNode',\n      test: type.isRangeNode\n    }, {\n      name: 'Node',\n      test: type.isNode\n    }, {\n      name: 'Object',\n      test: type.isObject // order 'Object' last, it matches on other classes too\n\n    }]; // TODO: add conversion from BigNumber to number?\n\n    typed.conversions = [{\n      from: 'number',\n      to: 'BigNumber',\n      convert: function convert(x) {\n        // note: conversion from number to BigNumber can fail if x has >15 digits\n        if (digits(x) > 15) {\n          throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');\n        }\n\n        return new type.BigNumber(x);\n      }\n    }, {\n      from: 'number',\n      to: 'Complex',\n      convert: function convert(x) {\n        return new type.Complex(x, 0);\n      }\n    }, {\n      from: 'number',\n      to: 'string',\n      convert: function convert(x) {\n        return x + '';\n      }\n    }, {\n      from: 'BigNumber',\n      to: 'Complex',\n      convert: function convert(x) {\n        return new type.Complex(x.toNumber(), 0);\n      }\n    }, {\n      from: 'Fraction',\n      to: 'BigNumber',\n      convert: function convert(x) {\n        throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n      }\n    }, {\n      from: 'Fraction',\n      to: 'Complex',\n      convert: function convert(x) {\n        return new type.Complex(x.valueOf(), 0);\n      }\n    }, {\n      from: 'number',\n      to: 'Fraction',\n      convert: function convert(x) {\n        var f = new type.Fraction(x);\n\n        if (f.valueOf() !== x) {\n          throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');\n        }\n\n        return new type.Fraction(x);\n      }\n    }, {\n      // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n      //  from: 'Fraction',\n      //  to: 'number',\n      //  convert: function (x) {\n      //    return x.valueOf()\n      //  }\n      // }, {\n      from: 'string',\n      to: 'number',\n      convert: function convert(x) {\n        var n = Number(x);\n\n        if (isNaN(n)) {\n          throw new Error('Cannot convert \"' + x + '\" to a number');\n        }\n\n        return n;\n      }\n    }, {\n      from: 'string',\n      to: 'BigNumber',\n      convert: function convert(x) {\n        try {\n          return new type.BigNumber(x);\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Fraction',\n      convert: function convert(x) {\n        try {\n          return new type.Fraction(x);\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Fraction');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Complex',\n      convert: function convert(x) {\n        try {\n          return new type.Complex(x);\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Complex');\n        }\n      }\n    }, {\n      from: 'boolean',\n      to: 'number',\n      convert: function convert(x) {\n        return +x;\n      }\n    }, {\n      from: 'boolean',\n      to: 'BigNumber',\n      convert: function convert(x) {\n        return new type.BigNumber(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'Fraction',\n      convert: function convert(x) {\n        return new type.Fraction(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'string',\n      convert: function convert(x) {\n        return +x;\n      }\n    }, {\n      from: 'Array',\n      to: 'Matrix',\n      convert: function convert(array) {\n        return new type.DenseMatrix(array);\n      }\n    }, {\n      from: 'Matrix',\n      to: 'Array',\n      convert: function convert(matrix) {\n        return matrix.valueOf();\n      }\n    }];\n    return typed;\n  };\n\n  var typed = {\n  \tcreate: create\n  };\n\n  function E () {\n    // Keep this empty so it's easier to inherit from\n    // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n  }\n\n  E.prototype = {\n    on: function (name, callback, ctx) {\n      var e = this.e || (this.e = {});\n\n      (e[name] || (e[name] = [])).push({\n        fn: callback,\n        ctx: ctx\n      });\n\n      return this;\n    },\n\n    once: function (name, callback, ctx) {\n      var self = this;\n      function listener () {\n        self.off(name, listener);\n        callback.apply(ctx, arguments);\n      }\n      listener._ = callback;\n      return this.on(name, listener, ctx);\n    },\n\n    emit: function (name) {\n      var data = [].slice.call(arguments, 1);\n      var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n      var i = 0;\n      var len = evtArr.length;\n\n      for (i; i < len; i++) {\n        evtArr[i].fn.apply(evtArr[i].ctx, data);\n      }\n\n      return this;\n    },\n\n    off: function (name, callback) {\n      var e = this.e || (this.e = {});\n      var evts = e[name];\n      var liveEvents = [];\n\n      if (evts && callback) {\n        for (var i = 0, len = evts.length; i < len; i++) {\n          if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n            liveEvents.push(evts[i]);\n        }\n      }\n\n      // Remove event from queue to prevent memory leak\n      // Suggested by https://github.com/lazd\n      // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n      (liveEvents.length)\n        ? e[name] = liveEvents\n        : delete e[name];\n\n      return this;\n    }\n  };\n\n  var tinyEmitter = E;\n  var TinyEmitter = E;\n  tinyEmitter.TinyEmitter = TinyEmitter;\n\n  /**\n   * Extend given object with emitter functions `on`, `off`, `once`, `emit`\n   * @param {Object} obj\n   * @return {Object} obj\n   */\n\n\n  var mixin = function (obj) {\n    // create event emitter\n    var emitter = new tinyEmitter(); // bind methods to obj (we don't want to expose the emitter.e Array...)\n\n    obj.on = emitter.on.bind(emitter);\n    obj.off = emitter.off.bind(emitter);\n    obj.once = emitter.once.bind(emitter);\n    obj.emit = emitter.emit.bind(emitter);\n    return obj;\n  };\n\n  var emitter = {\n  \tmixin: mixin\n  };\n\n  /**\n   * Create a syntax error with the message:\n   *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n   * @param {string} fn     Function name\n   * @param {number} count  Actual argument count\n   * @param {number} min    Minimum required argument count\n   * @param {number} [max]  Maximum required argument count\n   * @extends Error\n   */\n\n  function ArgumentsError(fn, count, min, max) {\n    if (!(this instanceof ArgumentsError)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.fn = fn;\n    this.count = count;\n    this.min = min;\n    this.max = max;\n    this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';\n    this.stack = new Error().stack;\n  }\n\n  ArgumentsError.prototype = new Error();\n  ArgumentsError.prototype.constructor = Error;\n  ArgumentsError.prototype.name = 'ArgumentsError';\n  ArgumentsError.prototype.isArgumentsError = true;\n  var ArgumentsError_1 = ArgumentsError;\n\n  function _typeof$2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$2 = function _typeof(obj) { return typeof obj; }; } else { _typeof$2 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$2(obj); }\n\n  var lazy = object.lazy;\n\n  var isFactory = object.isFactory;\n\n  var traverse = object.traverse;\n\n\n\n  function factory(type, config, load, typed, math) {\n    /**\n     * Import functions from an object or a module\n     *\n     * Syntax:\n     *\n     *    math.import(object)\n     *    math.import(object, options)\n     *\n     * Where:\n     *\n     * - `object: Object`\n     *   An object with functions to be imported.\n     * - `options: Object` An object with import options. Available options:\n     *   - `override: boolean`\n     *     If true, existing functions will be overwritten. False by default.\n     *   - `silent: boolean`\n     *     If true, the function will not throw errors on duplicates or invalid\n     *     types. False by default.\n     *   - `wrap: boolean`\n     *     If true, the functions will be wrapped in a wrapper function\n     *     which converts data types like Matrix to primitive data types like Array.\n     *     The wrapper is needed when extending math.js with libraries which do not\n     *     support these data type. False by default.\n     *\n     * Examples:\n     *\n     *    // define new functions and variables\n     *    math.import({\n     *      myvalue: 42,\n     *      hello: function (name) {\n     *        return 'hello, ' + name + '!'\n     *      }\n     *    })\n     *\n     *    // use the imported function and variable\n     *    math.myvalue * 2               // 84\n     *    math.hello('user')             // 'hello, user!'\n     *\n     *    // import the npm module 'numbers'\n     *    // (must be installed first with `npm install numbers`)\n     *    math.import(require('numbers'), {wrap: true})\n     *\n     *    math.fibonacci(7) // returns 13\n     *\n     * @param {Object | Array} object   Object with functions to be imported.\n     * @param {Object} [options]        Import options.\n     */\n    function mathImport(object, options) {\n      var num = arguments.length;\n\n      if (num !== 1 && num !== 2) {\n        throw new ArgumentsError_1('import', num, 1, 2);\n      }\n\n      if (!options) {\n        options = {};\n      } // TODO: allow a typed-function with name too\n\n\n      if (isFactory(object)) {\n        _importFactory(object, options);\n      } else if (Array.isArray(object)) {\n        object.forEach(function (entry) {\n          mathImport(entry, options);\n        });\n      } else if (_typeof$2(object) === 'object') {\n        // a map with functions\n        for (var name in object) {\n          if (object.hasOwnProperty(name)) {\n            var value = object[name];\n\n            if (isSupportedType(value)) {\n              _import(name, value, options);\n            } else if (isFactory(object)) {\n              _importFactory(object, options);\n            } else {\n              mathImport(value, options);\n            }\n          }\n        }\n      } else {\n        if (!options.silent) {\n          throw new TypeError('Factory, Object, or Array expected');\n        }\n      }\n    }\n    /**\n     * Add a property to the math namespace and create a chain proxy for it.\n     * @param {string} name\n     * @param {*} value\n     * @param {Object} options  See import for a description of the options\n     * @private\n     */\n\n\n    function _import(name, value, options) {\n      // TODO: refactor this function, it's to complicated and contains duplicate code\n      if (options.wrap && typeof value === 'function') {\n        // create a wrapper around the function\n        value = _wrap(value);\n      }\n\n      if (isTypedFunction(math[name]) && isTypedFunction(value)) {\n        if (options.override) {\n          // give the typed function the right name\n          value = typed(name, value.signatures);\n        } else {\n          // merge the existing and typed function\n          value = typed(math[name], value);\n        }\n\n        math[name] = value;\n\n        _importTransform(name, value);\n\n        math.emit('import', name, function resolver() {\n          return value;\n        });\n        return;\n      }\n\n      if (math[name] === undefined || options.override) {\n        math[name] = value;\n\n        _importTransform(name, value);\n\n        math.emit('import', name, function resolver() {\n          return value;\n        });\n        return;\n      }\n\n      if (!options.silent) {\n        throw new Error('Cannot import \"' + name + '\": already exists');\n      }\n    }\n\n    function _importTransform(name, value) {\n      if (value && typeof value.transform === 'function') {\n        math.expression.transform[name] = value.transform;\n\n        if (allowedInExpressions(name)) {\n          math.expression.mathWithTransform[name] = value.transform;\n        }\n      } else {\n        // remove existing transform\n        delete math.expression.transform[name];\n\n        if (allowedInExpressions(name)) {\n          math.expression.mathWithTransform[name] = value;\n        }\n      }\n    }\n\n    function _deleteTransform(name) {\n      delete math.expression.transform[name];\n\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = math[name];\n      } else {\n        delete math.expression.mathWithTransform[name];\n      }\n    }\n    /**\n     * Create a wrapper a round an function which converts the arguments\n     * to their primitive values (like convert a Matrix to Array)\n     * @param {Function} fn\n     * @return {Function} Returns the wrapped function\n     * @private\n     */\n\n\n    function _wrap(fn) {\n      var wrapper = function wrapper() {\n        var args = [];\n\n        for (var i = 0, len = arguments.length; i < len; i++) {\n          var arg = arguments[i];\n          args[i] = arg && arg.valueOf();\n        }\n\n        return fn.apply(math, args);\n      };\n\n      if (fn.transform) {\n        wrapper.transform = fn.transform;\n      }\n\n      return wrapper;\n    }\n    /**\n     * Import an instance of a factory into math.js\n     * @param {{factory: Function, name: string, path: string, math: boolean}} factory\n     * @param {Object} options  See import for a description of the options\n     * @private\n     */\n\n\n    function _importFactory(factory, options) {\n      if (typeof factory.name === 'string') {\n        var name = factory.name;\n        var existingTransform = name in math.expression.transform;\n        var namespace = factory.path ? traverse(math, factory.path) : math;\n        var existing = namespace.hasOwnProperty(name) ? namespace[name] : undefined;\n\n        var resolver = function resolver() {\n          var instance = load(factory);\n\n          if (instance && typeof instance.transform === 'function') {\n            throw new Error('Transforms cannot be attached to factory functions. ' + 'Please create a separate function for it with exports.path=\"expression.transform\"');\n          }\n\n          if (isTypedFunction(existing) && isTypedFunction(instance)) {\n            if (options.override) ; else {\n              // merge the existing and new typed function\n              instance = typed(existing, instance);\n            }\n\n            return instance;\n          }\n\n          if (existing === undefined || options.override) {\n            return instance;\n          }\n\n          if (!options.silent) {\n            throw new Error('Cannot import \"' + name + '\": already exists');\n          }\n        };\n\n        if (factory.lazy !== false) {\n          lazy(namespace, name, resolver);\n\n          if (existingTransform) {\n            _deleteTransform(name);\n          } else {\n            if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n              lazy(math.expression.mathWithTransform, name, resolver);\n            }\n          }\n        } else {\n          namespace[name] = resolver();\n\n          if (existingTransform) {\n            _deleteTransform(name);\n          } else {\n            if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n              math.expression.mathWithTransform[name] = resolver();\n            }\n          }\n        }\n\n        math.emit('import', name, resolver, factory.path);\n      } else {\n        // unnamed factory.\n        // no lazy loading\n        load(factory);\n      }\n    }\n    /**\n     * Check whether given object is a type which can be imported\n     * @param {Function | number | string | boolean | null | Unit | Complex} object\n     * @return {boolean}\n     * @private\n     */\n\n\n    function isSupportedType(object) {\n      return typeof object === 'function' || typeof object === 'number' || typeof object === 'string' || typeof object === 'boolean' || object === null || object && type.isUnit(object) || object && type.isComplex(object) || object && type.isBigNumber(object) || object && type.isFraction(object) || object && type.isMatrix(object) || object && Array.isArray(object);\n    }\n    /**\n     * Test whether a given thing is a typed-function\n     * @param {*} fn\n     * @return {boolean} Returns true when `fn` is a typed-function\n     */\n\n\n    function isTypedFunction(fn) {\n      return typeof fn === 'function' && _typeof$2(fn.signatures) === 'object';\n    }\n\n    function allowedInExpressions(name) {\n      return !unsafe.hasOwnProperty(name);\n    }\n\n    function factoryAllowedInExpressions(factory) {\n      return factory.path === undefined && !unsafe.hasOwnProperty(factory.name);\n    } // namespaces and functions not available in the parser for safety reasons\n\n\n    var unsafe = {\n      'expression': true,\n      'type': true,\n      'docs': true,\n      'error': true,\n      'json': true,\n      'chain': true // chain method not supported. Note that there is a unit chain too.\n\n    };\n    return mathImport;\n  }\n\n  var math = true; // request access to the math namespace as 5th argument of the factory function\n\n  var name = 'import';\n  var factory_1 = factory;\n  var lazy_1 = true;\n\n  var _import = {\n  \tmath: math,\n  \tname: name,\n  \tfactory: factory_1,\n  \tlazy: lazy_1\n  };\n\n  function factory$1(type, config, load, typed, math) {\n    var MATRIX = ['Matrix', 'Array']; // valid values for option matrix\n\n    var NUMBER = ['number', 'BigNumber', 'Fraction']; // valid values for option number\n\n    /**\n     * Set configuration options for math.js, and get current options.\n     * Will emit a 'config' event, with arguments (curr, prev, changes).\n     *\n     * Syntax:\n     *\n     *     math.config(config: Object): Object\n     *\n     * Examples:\n     *\n     *     math.config().number                // outputs 'number'\n     *     math.eval('0.4')                    // outputs number 0.4\n     *     math.config({number: 'Fraction'})\n     *     math.eval('0.4')                    // outputs Fraction 2/5\n     *\n     * @param {Object} [options] Available options:\n     *                            {number} epsilon\n     *                              Minimum relative difference between two\n     *                              compared values, used by all comparison functions.\n     *                            {string} matrix\n     *                              A string 'Matrix' (default) or 'Array'.\n     *                            {string} number\n     *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n     *                            {number} precision\n     *                              The number of significant digits for BigNumbers.\n     *                              Not applicable for Numbers.\n     *                            {string} parenthesis\n     *                              How to display parentheses in LaTeX and string\n     *                              output.\n     *                            {string} randomSeed\n     *                              Random seed for seeded pseudo random number generator.\n     *                              Set to null to randomly seed.\n     * @return {Object} Returns the current configuration\n     */\n\n    function _config(options) {\n      if (options) {\n        var prev = object.map(config, object.clone); // validate some of the options\n\n        validateOption(options, 'matrix', MATRIX);\n        validateOption(options, 'number', NUMBER); // merge options\n\n        object.deepExtend(config, options);\n        var curr = object.map(config, object.clone);\n        var changes = object.map(options, object.clone); // emit 'config' event\n\n        math.emit('config', curr, prev, changes);\n        return curr;\n      } else {\n        return object.map(config, object.clone);\n      }\n    } // attach the valid options to the function so they can be extended\n\n\n    _config.MATRIX = MATRIX;\n    _config.NUMBER = NUMBER;\n    return _config;\n  }\n  /**\n   * Test whether an Array contains a specific item.\n   * @param {Array.<string>} array\n   * @param {string} item\n   * @return {boolean}\n   */\n\n\n  function contains(array, item) {\n    return array.indexOf(item) !== -1;\n  }\n  /**\n   * Find a string in an array. Case insensitive search\n   * @param {Array.<string>} array\n   * @param {string} item\n   * @return {number} Returns the index when found. Returns -1 when not found\n   */\n\n\n  function findIndex(array, item) {\n    return array.map(function (i) {\n      return i.toLowerCase();\n    }).indexOf(item.toLowerCase());\n  }\n  /**\n   * Validate an option\n   * @param {Object} options         Object with options\n   * @param {string} name            Name of the option to validate\n   * @param {Array.<string>} values  Array with valid values for this option\n   */\n\n\n  function validateOption(options, name, values) {\n    if (options[name] !== undefined && !contains(values, options[name])) {\n      var index = findIndex(values, options[name]);\n\n      if (index !== -1) {\n        // right value, wrong casing\n        // TODO: lower case values are deprecated since v3, remove this warning some day.\n        console.warn('Warning: Wrong casing for configuration option \"' + name + '\", should be \"' + values[index] + '\" instead of \"' + options[name] + '\".');\n        options[name] = values[index]; // change the option to the right casing\n      } else {\n        // unknown value\n        console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". Available options: ' + values.map(JSON.stringify).join(', ') + '.');\n      }\n    }\n  }\n\n  var name$1 = 'config';\n  var math$1 = true; // request the math namespace as fifth argument\n\n  var factory_1$1 = factory$1;\n\n  var config = {\n  \tname: name$1,\n  \tmath: math$1,\n  \tfactory: factory_1$1\n  };\n\n  var isFactory$1 = object.isFactory;\n\n\n\n\n\n\n\n\n  /**\n   * Math.js core. Creates a new, empty math.js instance\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {boolean} predictable\n   *                              Predictable output type of functions. When true,\n   *                              output type depends only on the input types. When\n   *                              false (default), output type can vary depending\n   *                              on input values. For example `math.sqrt(-4)`\n   *                              returns `complex('2i')` when predictable is false, and\n   *                              returns `NaN` when true.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @returns {Object} Returns a bare-bone math.js instance containing\n   *                   functions:\n   *                   - `import` to add new functions\n   *                   - `config` to change configuration\n   *                   - `on`, `off`, `once`, `emit` for events\n   */\n\n\n  var create$1 = function create(options) {\n    // simple test for ES5 support\n    if (typeof Object.create !== 'function') {\n      throw new Error('ES5 not supported by this JavaScript engine. ' + 'Please load the es5-shim and es5-sham library for compatibility.');\n    } // cached factories and instances\n\n\n    var factories = [];\n    var instances = []; // create a namespace for the mathjs instance, and attach emitter functions\n\n    var math = emitter.mixin({});\n    math.type = {};\n    math.expression = {\n      transform: {},\n      mathWithTransform: {} // create a new typed instance\n\n    };\n    math.typed = typed.create(math.type); // create configuration options. These are private\n\n    var _config = {\n      // minimum relative difference between two compared values,\n      // used by all comparison functions\n      epsilon: 1e-12,\n      // type of default matrix output. Choose 'matrix' (default) or 'array'\n      matrix: 'Matrix',\n      // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n      number: 'number',\n      // number of significant digits in BigNumbers\n      precision: 64,\n      // predictable output type of functions. When true, output type depends only\n      // on the input types. When false (default), output type can vary depending\n      // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n      // predictable is false, and returns `NaN` when true.\n      predictable: false,\n      // random seed for seeded pseudo random number generation\n      // null = randomly seed\n      randomSeed: null\n      /**\n       * Load a function or data type from a factory.\n       * If the function or data type already exists, the existing instance is\n       * returned.\n       * @param {{type: string, name: string, factory: Function}} factory\n       * @returns {*}\n       */\n\n    };\n\n    function load(factory) {\n      if (!isFactory$1(factory)) {\n        throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n      }\n\n      var index = factories.indexOf(factory);\n      var instance;\n\n      if (index === -1) {\n        // doesn't yet exist\n        if (factory.math === true) {\n          // pass with math namespace\n          instance = factory.factory(math.type, _config, load, math.typed, math);\n        } else {\n          instance = factory.factory(math.type, _config, load, math.typed);\n        } // append to the cache\n\n\n        factories.push(factory);\n        instances.push(instance);\n      } else {\n        // already existing function, return the cached instance\n        instance = instances[index];\n      }\n\n      return instance;\n    } // load the import and config functions\n\n\n    math['import'] = load(_import);\n    math['config'] = load(config);\n    math.expression.mathWithTransform['config'] = math['config']; // apply options\n\n    if (options) {\n      math.config(options);\n    }\n\n    return math;\n  };\n\n  var core = {\n  \tcreate: create$1\n  };\n\n  var core$1 = core;\n\n  /**\n   * Execute the callback function element wise for each element in array and any\n   * nested array\n   * Returns an array with the results\n   * @param {Array | Matrix} array\n   * @param {Function} callback   The callback is called with two parameters:\n   *                              value1 and value2, which contain the current\n   *                              element of both arrays.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Array | Matrix} res\n   */\n\n  var deepMap = function deepMap(array, callback, skipZeros) {\n    if (array && typeof array.map === 'function') {\n      // TODO: replace array.map with a for loop to improve performance\n      return array.map(function (x) {\n        return deepMap(x, callback);\n      });\n    } else {\n      return callback(array);\n    }\n  };\n\n  function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\n  function factory$2(type, config, load, typed) {\n    /**\n     * Determine the type of a variable.\n     *\n     * Function `typeof` recognizes the following types of objects:\n     *\n     * Object                 | Returns       | Example\n     * ---------------------- | ------------- | ------------------------------------------\n     * null                   | `'null'`      | `math.typeof(null)`\n     * number                 | `'number'`    | `math.typeof(3.5)`\n     * boolean                | `'boolean'`   | `math.typeof(true)`\n     * string                 | `'string'`    | `math.typeof('hello world')`\n     * Array                  | `'Array'`     | `math.typeof([1, 2, 3])`\n     * Date                   | `'Date'`      | `math.typeof(new Date())`\n     * Function               | `'Function'`  | `math.typeof(function () {})`\n     * Object                 | `'Object'`    | `math.typeof({a: 2, b: 3})`\n     * RegExp                 | `'RegExp'`    | `math.typeof(/a regexp/)`\n     * undefined              | `'undefined'` | `math.typeof(undefined)`\n     * math.type.BigNumber    | `'BigNumber'` | `math.typeof(math.bignumber('2.3e500'))`\n     * math.type.Chain        | `'Chain'`     | `math.typeof(math.chain(2))`\n     * math.type.Complex      | `'Complex'`   | `math.typeof(math.complex(2, 3))`\n     * math.type.Fraction     | `'Fraction'`  | `math.typeof(math.fraction(1, 3))`\n     * math.type.Help         | `'Help'`      | `math.typeof(math.help('sqrt'))`\n     * math.type.Help         | `'Help'`      | `math.typeof(math.help('sqrt'))`\n     * math.type.Index        | `'Index'`     | `math.typeof(math.index(1, 3))`\n     * math.type.Matrix       | `'Matrix'`    | `math.typeof(math.matrix([[1,2], [3, 4]]))`\n     * math.type.Range        | `'Range'`     | `math.typeof(math.range(0, 10))`\n     * math.type.ResultSet    | `'ResultSet'` | `math.typeof(math.eval('a=2\\nb=3'))`\n     * math.type.Unit         | `'Unit'`      | `math.typeof(math.unit('45 deg'))`\n     * math.expression.node&#8203;.AccessorNode            | `'AccessorNode'`            | `math.typeof(math.parse('A[2]'))`\n     * math.expression.node&#8203;.ArrayNode               | `'ArrayNode'`               | `math.typeof(math.parse('[1,2,3]'))`\n     * math.expression.node&#8203;.AssignmentNode          | `'AssignmentNode'`          | `math.typeof(math.parse('x=2'))`\n     * math.expression.node&#8203;.BlockNode               | `'BlockNode'`               | `math.typeof(math.parse('a=2; b=3'))`\n     * math.expression.node&#8203;.ConditionalNode         | `'ConditionalNode'`         | `math.typeof(math.parse('x<0 ? -x : x'))`\n     * math.expression.node&#8203;.ConstantNode            | `'ConstantNode'`            | `math.typeof(math.parse('2.3'))`\n     * math.expression.node&#8203;.FunctionAssignmentNode  | `'FunctionAssignmentNode'`  | `math.typeof(math.parse('f(x)=x^2'))`\n     * math.expression.node&#8203;.FunctionNode            | `'FunctionNode'`            | `math.typeof(math.parse('sqrt(4)'))`\n     * math.expression.node&#8203;.IndexNode               | `'IndexNode'`               | `math.typeof(math.parse('A[2]').index)`\n     * math.expression.node&#8203;.ObjectNode              | `'ObjectNode'`              | `math.typeof(math.parse('{a:2}'))`\n     * math.expression.node&#8203;.ParenthesisNode         | `'ParenthesisNode'`         | `math.typeof(math.parse('(2+3)'))`\n     * math.expression.node&#8203;.RangeNode               | `'RangeNode'`               | `math.typeof(math.parse('1:10'))`\n     * math.expression.node&#8203;.SymbolNode              | `'SymbolNode'`              | `math.typeof(math.parse('x'))`\n     *\n     * Syntax:\n     *\n     *    math.typeof(x)\n     *\n     * Examples:\n     *\n     *    math.typeof(3.5)                     // returns 'number'\n     *    math.typeof(math.complex('2-4i'))    // returns 'Complex'\n     *    math.typeof(math.unit('45 deg'))     // returns 'Unit'\n     *    math.typeof('hello world')           // returns 'string'\n     *\n     * @param {*} x     The variable for which to test the type.\n     * @return {string} Returns the name of the type. Primitive types are lower case,\n     *                  non-primitive types are upper-camel-case.\n     *                  For example 'number', 'string', 'Array', 'Date'.\n     */\n    var _typeof = typed('_typeof', {\n      'any': function any(x) {\n        var t = _typeof2(x);\n\n        if (t === 'object') {\n          // JavaScript types\n          if (x === null) return 'null';\n          if (Array.isArray(x)) return 'Array';\n          if (x instanceof Date) return 'Date';\n          if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n          if (type.isBigNumber(x)) return 'BigNumber';\n          if (type.isComplex(x)) return 'Complex';\n          if (type.isFraction(x)) return 'Fraction';\n          if (type.isMatrix(x)) return 'Matrix';\n          if (type.isUnit(x)) return 'Unit';\n          if (type.isIndex(x)) return 'Index';\n          if (type.isRange(x)) return 'Range';\n          if (type.isResultSet(x)) return 'ResultSet';\n          if (type.isNode(x)) return x.type;\n          if (type.isChain(x)) return 'Chain';\n          if (type.isHelp(x)) return 'Help';\n          return 'Object';\n        }\n\n        if (t === 'function') return 'Function';\n        return t; // can be 'string', 'number', 'boolean', ...\n      }\n    });\n\n    _typeof.toTex = undefined; // use default template\n\n    return _typeof;\n  }\n\n  var name$2 = 'typeof';\n  var factory_1$2 = factory$2;\n\n  var _typeof$3 = {\n  \tname: name$2,\n  \tfactory: factory_1$2\n  };\n\n  function factory$3(type, config, load, typed) {\n    /**\n     * Create a number or convert a string, boolean, or unit to a number.\n     * When value is a matrix, all elements will be converted to number.\n     *\n     * Syntax:\n     *\n     *    math.number(value)\n     *    math.number(unit, valuelessUnit)\n     *\n     * Examples:\n     *\n     *    math.number(2)                         // returns number 2\n     *    math.number('7.2')                     // returns number 7.2\n     *    math.number(true)                      // returns number 1\n     *    math.number([true, false, true, true]) // returns [1, 0, 1, 1]\n     *    math.number(math.unit('52cm'), 'm')    // returns 0.52\n     *\n     * See also:\n     *\n     *    bignumber, boolean, complex, index, matrix, string, unit\n     *\n     * @param {string | number | BigNumber | Fraction | boolean | Array | Matrix | Unit | null} [value]  Value to be converted\n     * @param {Unit | string} [valuelessUnit] A valueless unit, used to convert a unit to a number\n     * @return {number | Array | Matrix} The created number\n     */\n    var number = typed('number', {\n      '': function _() {\n        return 0;\n      },\n      'number': function number(x) {\n        return x;\n      },\n      'string': function string(x) {\n        if (x === 'NaN') return NaN;\n        var num = Number(x);\n\n        if (isNaN(num)) {\n          throw new SyntaxError('String \"' + x + '\" is no valid number');\n        }\n\n        return num;\n      },\n      'BigNumber': function BigNumber(x) {\n        return x.toNumber();\n      },\n      'Fraction': function Fraction(x) {\n        return x.valueOf();\n      },\n      'Unit': function Unit(x) {\n        throw new Error('Second argument with valueless unit expected');\n      },\n      'null': function _null(x) {\n        return 0;\n      },\n      'Unit, string | Unit': function UnitStringUnit(unit, valuelessUnit) {\n        return unit.toNumber(valuelessUnit);\n      },\n      'Array | Matrix': function ArrayMatrix(x) {\n        return deepMap(x, number);\n      }\n    });\n    number.toTex = {\n      0: \"0\",\n      1: \"\\\\left(${args[0]}\\\\right)\",\n      2: \"\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)\"\n    };\n    return number;\n  }\n\n  var name$3 = 'number';\n  var factory_1$3 = factory$3;\n\n  var number$1 = {\n  \tname: name$3,\n  \tfactory: factory_1$3\n  };\n\n  function factory$4(type, config, load, typed) {\n    /**\n     * Create a BigNumber, which can store numbers with arbitrary precision.\n     * When a matrix is provided, all elements will be converted to BigNumber.\n     *\n     * Syntax:\n     *\n     *    math.bignumber(x)\n     *\n     * Examples:\n     *\n     *    0.1 + 0.2                                  // returns number 0.30000000000000004\n     *    math.bignumber(0.1) + math.bignumber(0.2)  // returns BigNumber 0.3\n     *\n     *\n     *    7.2e500                                    // returns number Infinity\n     *    math.bignumber('7.2e500')                  // returns BigNumber 7.2e500\n     *\n     * See also:\n     *\n     *    boolean, complex, index, matrix, string, unit\n     *\n     * @param {number | string | Fraction | BigNumber | Array | Matrix | boolean | null} [value]  Value for the big number,\n     *                                                    0 by default.\n     * @returns {BigNumber} The created bignumber\n     */\n    var bignumber = typed('bignumber', {\n      '': function _() {\n        return new type.BigNumber(0);\n      },\n      'number': function number(x) {\n        // convert to string to prevent errors in case of >15 digits\n        return new type.BigNumber(x + '');\n      },\n      'string': function string(x) {\n        return new type.BigNumber(x);\n      },\n      'BigNumber': function BigNumber(x) {\n        // we assume a BigNumber is immutable\n        return x;\n      },\n      'Fraction': function Fraction(x) {\n        return new type.BigNumber(x.n).div(x.d).times(x.s);\n      },\n      'null': function _null(x) {\n        return new type.BigNumber(0);\n      },\n      'Array | Matrix': function ArrayMatrix(x) {\n        return deepMap(x, bignumber);\n      }\n    });\n    bignumber.toTex = {\n      0: '0',\n      1: \"\\\\left(${args[0]}\\\\right)\"\n    };\n    return bignumber;\n  }\n\n  var name$4 = 'bignumber';\n  var factory_1$4 = factory$4;\n\n  var bignumber = {\n  \tname: name$4,\n  \tfactory: factory_1$4\n  };\n\n  function factory$5(type, config, load, typed) {\n    /**\n     * Create a fraction convert a value to a fraction.\n     *\n     * Syntax:\n     *     math.fraction(numerator, denominator)\n     *     math.fraction({n: numerator, d: denominator})\n     *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries\n     *                                                   into fractions\n     *\n     * Examples:\n     *\n     *     math.fraction(1, 3)\n     *     math.fraction('2/3')\n     *     math.fraction({n: 2, d: 3})\n     *     math.fraction([0.2, 0.25, 1.25])\n     *\n     * See also:\n     *\n     *    bignumber, number, string, unit\n     *\n     * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]\n     *            Arguments specifying the numerator and denominator of\n     *            the fraction\n     * @return {Fraction | Array | Matrix} Returns a fraction\n     */\n    var fraction = typed('fraction', {\n      'number': function number(x) {\n        if (!isFinite(x) || isNaN(x)) {\n          throw new Error(x + ' cannot be represented as a fraction');\n        }\n\n        return new type.Fraction(x);\n      },\n      'string': function string(x) {\n        return new type.Fraction(x);\n      },\n      'number, number': function numberNumber(numerator, denominator) {\n        return new type.Fraction(numerator, denominator);\n      },\n      'null': function _null(x) {\n        return new type.Fraction(0);\n      },\n      'BigNumber': function BigNumber(x) {\n        return new type.Fraction(x.toString());\n      },\n      'Fraction': function Fraction(x) {\n        return x; // fractions are immutable\n      },\n      'Object': function Object(x) {\n        return new type.Fraction(x);\n      },\n      'Array | Matrix': function ArrayMatrix(x) {\n        return deepMap(x, fraction);\n      }\n    });\n    return fraction;\n  }\n\n  var name$5 = 'fraction';\n  var factory_1$5 = factory$5;\n\n  var fraction = {\n  \tname: name$5,\n  \tfactory: factory_1$5\n  };\n\n  function factory$6(type, config, load, typed) {\n    var getTypeOf = load(_typeof$3);\n    var validInputTypes = {\n      'string': true,\n      'number': true,\n      'BigNumber': true,\n      'Fraction': true // Load the conversion functions for each output type\n\n    };\n    var validOutputTypes = {\n      'number': load(number$1),\n      'BigNumber': load(bignumber),\n      'Fraction': load(fraction)\n      /**\n       * Convert a numeric value to a specific type: number, BigNumber, or Fraction\n       *\n       * @param {string | number | BigNumber | Fraction } value\n       * @param {'number' | 'BigNumber' | 'Fraction'} outputType\n       * @return {number | BigNumber | Fraction} Returns an instance of the\n       *                                         numeric in the requested type\n       */\n\n    };\n\n    var numeric = function numeric(value, outputType) {\n      var inputType = getTypeOf(value);\n\n      if (!(inputType in validInputTypes)) {\n        throw new TypeError('Cannot convert ' + value + ' of type \"' + inputType + '\"; valid input types are ' + Object.keys(validInputTypes).join(', '));\n      }\n\n      if (!(outputType in validOutputTypes)) {\n        throw new TypeError('Cannot convert ' + value + ' to type \"' + outputType + '\"; valid output types are ' + Object.keys(validOutputTypes).join(', '));\n      }\n\n      if (outputType === inputType) {\n        return value;\n      } else {\n        return validOutputTypes[outputType](value);\n      }\n    };\n\n    numeric.toTex = function (node, options) {\n      // Not sure if this is strictly right but should work correctly for the vast majority of use cases.\n      return node.args[0].toTex();\n    };\n\n    return numeric;\n  } // FIXME: expose numeric in the math namespace after we've decided on a name and have written proper docs for this function. See https://github.com/josdejong/mathjs/pull/1270\n  // exports.name = 'type._numeric'\n\n\n  var path = 'type';\n  var name$6 = '_numeric';\n  var factory_1$6 = factory$6;\n\n  var numeric = {\n  \tpath: path,\n  \tname: name$6,\n  \tfactory: factory_1$6\n  };\n\n  function _typeof$4(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$4 = function _typeof(obj) { return typeof obj; }; } else { _typeof$4 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$4(obj); }\n\n  var hasOwnProperty = object.hasOwnProperty;\n  /**\n   * Get a property of a plain object\n   * Throws an error in case the object is not a plain object or the\n   * property is not defined on the object itself\n   * @param {Object} object\n   * @param {string} prop\n   * @return {*} Returns the property value when safe\n   */\n\n\n  function getSafeProperty(object, prop) {\n    // only allow getting safe properties of a plain object\n    if (isPlainObject(object) && isSafeProperty(object, prop)) {\n      return object[prop];\n    }\n\n    if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n      throw new Error('Cannot access method \"' + prop + '\" as a property');\n    }\n\n    throw new Error('No access to property \"' + prop + '\"');\n  }\n  /**\n   * Set a property on a plain object.\n   * Throws an error in case the object is not a plain object or the\n   * property would override an inherited property like .constructor or .toString\n   * @param {Object} object\n   * @param {string} prop\n   * @param {*} value\n   * @return {*} Returns the value\n   */\n  // TODO: merge this function into access.js?\n\n\n  function setSafeProperty(object, prop, value) {\n    // only allow setting safe properties of a plain object\n    if (isPlainObject(object) && isSafeProperty(object, prop)) {\n      object[prop] = value;\n      return value;\n    }\n\n    throw new Error('No access to property \"' + prop + '\"');\n  }\n  /**\n   * Test whether a property is safe to use for an object.\n   * For example .toString and .constructor are not safe\n   * @param {string} prop\n   * @return {boolean} Returns true when safe\n   */\n\n\n  function isSafeProperty(object, prop) {\n    if (!object || _typeof$4(object) !== 'object') {\n      return false;\n    } // SAFE: whitelisted\n    // e.g length\n\n\n    if (hasOwnProperty(safeNativeProperties, prop)) {\n      return true;\n    } // UNSAFE: inherited from Object prototype\n    // e.g constructor\n\n\n    if (prop in Object.prototype) {\n      // 'in' is used instead of hasOwnProperty for nodejs v0.10\n      // which is inconsistent on root prototypes. It is safe\n      // here because Object.prototype is a root object\n      return false;\n    } // UNSAFE: inherited from Function prototype\n    // e.g call, apply\n\n\n    if (prop in Function.prototype) {\n      // 'in' is used instead of hasOwnProperty for nodejs v0.10\n      // which is inconsistent on root prototypes. It is safe\n      // here because Function.prototype is a root object\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Validate whether a method is safe.\n   * Throws an error when that's not the case.\n   * @param {Object} object\n   * @param {string} method\n   */\n  // TODO: merge this function into assign.js?\n\n\n  function validateSafeMethod(object, method) {\n    if (!isSafeMethod(object, method)) {\n      throw new Error('No access to method \"' + method + '\"');\n    }\n  }\n  /**\n   * Check whether a method is safe.\n   * Throws an error when that's not the case (for example for `constructor`).\n   * @param {Object} object\n   * @param {string} method\n   * @return {boolean} Returns true when safe, false otherwise\n   */\n\n\n  function isSafeMethod(object, method) {\n    if (!object || typeof object[method] !== 'function') {\n      return false;\n    } // UNSAFE: ghosted\n    // e.g overridden toString\n    // Note that IE10 doesn't support __proto__ and we can't do this check there.\n\n\n    if (hasOwnProperty(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\n      return false;\n    } // SAFE: whitelisted\n    // e.g toString\n\n\n    if (hasOwnProperty(safeNativeMethods, method)) {\n      return true;\n    } // UNSAFE: inherited from Object prototype\n    // e.g constructor\n\n\n    if (method in Object.prototype) {\n      // 'in' is used instead of hasOwnProperty for nodejs v0.10\n      // which is inconsistent on root prototypes. It is safe\n      // here because Object.prototype is a root object\n      return false;\n    } // UNSAFE: inherited from Function prototype\n    // e.g call, apply\n\n\n    if (method in Function.prototype) {\n      // 'in' is used instead of hasOwnProperty for nodejs v0.10\n      // which is inconsistent on root prototypes. It is safe\n      // here because Function.prototype is a root object\n      return false;\n    }\n\n    return true;\n  }\n\n  function isPlainObject(object) {\n    return _typeof$4(object) === 'object' && object && object.constructor === Object;\n  }\n\n  var safeNativeProperties = {\n    length: true,\n    name: true\n  };\n  var safeNativeMethods = {\n    toString: true,\n    valueOf: true,\n    toLocaleString: true\n  };\n  var getSafeProperty_1 = getSafeProperty;\n  var setSafeProperty_1 = setSafeProperty;\n  var isSafeProperty_1 = isSafeProperty;\n  var validateSafeMethod_1 = validateSafeMethod;\n  var isSafeMethod_1 = isSafeMethod;\n  var isPlainObject_1 = isPlainObject;\n\n  var customs = {\n  \tgetSafeProperty: getSafeProperty_1,\n  \tsetSafeProperty: setSafeProperty_1,\n  \tisSafeProperty: isSafeProperty_1,\n  \tvalidateSafeMethod: validateSafeMethod_1,\n  \tisSafeMethod: isSafeMethod_1,\n  \tisPlainObject: isPlainObject_1\n  };\n\n  var keywords = {\n    end: true\n  };\n\n  function _typeof$5(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$5 = function _typeof(obj) { return typeof obj; }; } else { _typeof$5 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$5(obj); }\n\n\n\n  var deepEqual = object.deepEqual;\n\n  var hasOwnProperty$1 = object.hasOwnProperty;\n\n  function factory$7(type, config, load, typed, math) {\n    /**\n     * Node\n     */\n    function Node() {\n      if (!(this instanceof Node)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n    }\n    /**\n     * Evaluate the node\n     * @param {Object} [scope]  Scope to read/write variables\n     * @return {*}              Returns the result\n     */\n\n\n    Node.prototype.eval = function (scope) {\n      return this.compile().eval(scope);\n    };\n\n    Node.prototype.type = 'Node';\n    Node.prototype.isNode = true;\n    Node.prototype.comment = '';\n    /**\n     * Compile the node into an optimized, evauatable JavaScript function\n     * @return {{eval: function([Object])}} expr  Returns an object with a function 'eval',\n     *                                  which can be invoked as expr.eval([scope: Object]),\n     *                                  where scope is an optional object with\n     *                                  variables.\n     */\n\n    Node.prototype.compile = function () {\n      var expr = this._compile(math.expression.mathWithTransform, {});\n\n      var args = {};\n      var context = null;\n      return {\n        eval: function evalNode(scope) {\n          var s = scope || {};\n\n          _validateScope(s);\n\n          return expr(s, args, context);\n        }\n      };\n    };\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n\n    Node.prototype._compile = function (math, argNames) {\n      throw new Error('Method _compile should be implemented by type ' + this.type);\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    Node.prototype.forEach = function (callback) {\n      // must be implemented by each of the Node implementations\n      throw new Error('Cannot run forEach on a Node interface');\n    };\n    /**\n     * Create a new Node having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {OperatorNode} Returns a transformed copy of the node\n     */\n\n\n    Node.prototype.map = function (callback) {\n      // must be implemented by each of the Node implementations\n      throw new Error('Cannot run map on a Node interface');\n    };\n    /**\n     * Validate whether an object is a Node, for use with map\n     * @param {Node} node\n     * @returns {Node} Returns the input if it's a node, else throws an Error\n     * @protected\n     */\n\n\n    Node.prototype._ifNode = function (node) {\n      if (!type.isNode(node)) {\n        throw new TypeError('Callback function must return a Node');\n      }\n\n      return node;\n    };\n    /**\n     * Recursively traverse all nodes in a node tree. Executes given callback for\n     * this node and each of its child nodes.\n     * @param {function(node: Node, path: string, parent: Node)} callback\n     *          A callback called for every node in the node tree.\n     */\n\n\n    Node.prototype.traverse = function (callback) {\n      // execute callback for itself\n      callback(this, null, null); // eslint-disable-line standard/no-callback-literal\n      // recursively traverse over all childs of a node\n\n      function _traverse(node, callback) {\n        node.forEach(function (child, path, parent) {\n          callback(child, path, parent);\n\n          _traverse(child, callback);\n        });\n      }\n\n      _traverse(this, callback);\n    };\n    /**\n     * Recursively transform a node tree via a transform function.\n     *\n     * For example, to replace all nodes of type SymbolNode having name 'x' with a\n     * ConstantNode with value 2:\n     *\n     *     const res = Node.transform(function (node, path, parent) {\n     *       if (node && node.isSymbolNode) && (node.name === 'x')) {\n     *         return new ConstantNode(2)\n     *       }\n     *       else {\n     *         return node\n     *       }\n     *     })\n     *\n     * @param {function(node: Node, path: string, parent: Node) : Node} callback\n     *          A mapping function accepting a node, and returning\n     *          a replacement for the node or the original node.\n     *          Signature: callback(node: Node, index: string, parent: Node) : Node\n     * @return {Node} Returns the original node or its replacement\n     */\n\n\n    Node.prototype.transform = function (callback) {\n      // traverse over all childs\n      function _transform(node, callback) {\n        return node.map(function (child, path, parent) {\n          var replacement = callback(child, path, parent);\n          return _transform(replacement, callback);\n        });\n      }\n\n      var replacement = callback(this, null, null); // eslint-disable-line standard/no-callback-literal\n\n      return _transform(replacement, callback);\n    };\n    /**\n     * Find any node in the node tree matching given filter function. For example, to\n     * find all nodes of type SymbolNode having name 'x':\n     *\n     *     const results = Node.filter(function (node) {\n     *       return (node && node.isSymbolNode) && (node.name === 'x')\n     *     })\n     *\n     * @param {function(node: Node, path: string, parent: Node) : Node} callback\n     *            A test function returning true when a node matches, and false\n     *            otherwise. Function signature:\n     *            callback(node: Node, index: string, parent: Node) : boolean\n     * @return {Node[]} nodes       An array with nodes matching given filter criteria\n     */\n\n\n    Node.prototype.filter = function (callback) {\n      var nodes = [];\n      this.traverse(function (node, path, parent) {\n        if (callback(node, path, parent)) {\n          nodes.push(node);\n        }\n      });\n      return nodes;\n    }; // TODO: deprecated since version 1.1.0, remove this some day\n\n\n    Node.prototype.find = function () {\n      throw new Error('Function Node.find is deprecated. Use Node.filter instead.');\n    }; // TODO: deprecated since version 1.1.0, remove this some day\n\n\n    Node.prototype.match = function () {\n      throw new Error('Function Node.match is deprecated. See functions Node.filter, Node.transform, Node.traverse.');\n    };\n    /**\n     * Create a shallow clone of this node\n     * @return {Node}\n     */\n\n\n    Node.prototype.clone = function () {\n      // must be implemented by each of the Node implementations\n      throw new Error('Cannot clone a Node interface');\n    };\n    /**\n     * Create a deep clone of this node\n     * @return {Node}\n     */\n\n\n    Node.prototype.cloneDeep = function () {\n      return this.map(function (node) {\n        return node.cloneDeep();\n      });\n    };\n    /**\n     * Deep compare this node with another node.\n     * @param {Node} other\n     * @return {boolean} Returns true when both nodes are of the same type and\n     *                   contain the same values (as do their childs)\n     */\n\n\n    Node.prototype.equals = function (other) {\n      return other ? deepEqual(this, other) : false;\n    };\n    /**\n     * Get string representation. (wrapper function)\n     *\n     * This function can get an object of the following form:\n     * {\n     *    handler: //This can be a callback function of the form\n     *             // \"function callback(node, options)\"or\n     *             // a map that maps function names (used in FunctionNodes)\n     *             // to callbacks\n     *    parenthesis: \"keep\" //the parenthesis option (This is optional)\n     * }\n     *\n     * @param {Object} [options]\n     * @return {string}\n     */\n\n\n    Node.prototype.toString = function (options) {\n      var customString;\n\n      if (options && _typeof$5(options) === 'object') {\n        switch (_typeof$5(options.handler)) {\n          case 'object':\n          case 'undefined':\n            break;\n\n          case 'function':\n            customString = options.handler(this, options);\n            break;\n\n          default:\n            throw new TypeError('Object or function expected as callback');\n        }\n      }\n\n      if (typeof customString !== 'undefined') {\n        return customString;\n      }\n\n      return this._toString(options);\n    };\n    /**\n     * Get a JSON representation of the node\n     * Both .toJSON() and the static .fromJSON(json) should be implemented by all\n     * implementations of Node\n     * @returns {Object}\n     */\n\n\n    Node.prototype.toJSON = function () {\n      throw new Error('Cannot serialize object: toJSON not implemented by ' + this.type);\n    };\n    /**\n     * Get HTML representation. (wrapper function)\n     *\n     * This function can get an object of the following form:\n     * {\n     *    handler: //This can be a callback function of the form\n     *             // \"function callback(node, options)\" or\n     *             // a map that maps function names (used in FunctionNodes)\n     *             // to callbacks\n     *    parenthesis: \"keep\" //the parenthesis option (This is optional)\n     * }\n     *\n     * @param {Object} [options]\n     * @return {string}\n     */\n\n\n    Node.prototype.toHTML = function (options) {\n      var customString;\n\n      if (options && _typeof$5(options) === 'object') {\n        switch (_typeof$5(options.handler)) {\n          case 'object':\n          case 'undefined':\n            break;\n\n          case 'function':\n            customString = options.handler(this, options);\n            break;\n\n          default:\n            throw new TypeError('Object or function expected as callback');\n        }\n      }\n\n      if (typeof customString !== 'undefined') {\n        return customString;\n      }\n\n      return this.toHTML(options);\n    };\n    /**\n     * Internal function to generate the string output.\n     * This has to be implemented by every Node\n     *\n     * @throws {Error}\n     */\n\n\n    Node.prototype._toString = function () {\n      // must be implemented by each of the Node implementations\n      throw new Error('_toString not implemented for ' + this.type);\n    };\n    /**\n     * Get LaTeX representation. (wrapper function)\n     *\n     * This function can get an object of the following form:\n     * {\n     *    handler: //This can be a callback function of the form\n     *             // \"function callback(node, options)\"or\n     *             // a map that maps function names (used in FunctionNodes)\n     *             // to callbacks\n     *    parenthesis: \"keep\" //the parenthesis option (This is optional)\n     * }\n     *\n     * @param {Object} [options]\n     * @return {string}\n     */\n\n\n    Node.prototype.toTex = function (options) {\n      var customTex;\n\n      if (options && _typeof$5(options) === 'object') {\n        switch (_typeof$5(options.handler)) {\n          case 'object':\n          case 'undefined':\n            break;\n\n          case 'function':\n            customTex = options.handler(this, options);\n            break;\n\n          default:\n            throw new TypeError('Object or function expected as callback');\n        }\n      }\n\n      if (typeof customTex !== 'undefined') {\n        return customTex;\n      }\n\n      return this._toTex(options);\n    };\n    /**\n     * Internal function to generate the LaTeX output.\n     * This has to be implemented by every Node\n     *\n     * @param {Object} [options]\n     * @throws {Error}\n     */\n\n\n    Node.prototype._toTex = function (options) {\n      // must be implemented by each of the Node implementations\n      throw new Error('_toTex not implemented for ' + this.type);\n    };\n    /**\n     * Get identifier.\n     * @return {string}\n     */\n\n\n    Node.prototype.getIdentifier = function () {\n      return this.type;\n    };\n    /**\n     * Get the content of the current Node.\n     * @return {Node} node\n     **/\n\n\n    Node.prototype.getContent = function () {\n      return this;\n    };\n    /**\n     * Validate the symbol names of a scope.\n     * Throws an error when the scope contains an illegal symbol.\n     * @param {Object} scope\n     */\n\n\n    function _validateScope(scope) {\n      for (var symbol in scope) {\n        if (hasOwnProperty$1(scope, symbol)) {\n          if (symbol in keywords) {\n            throw new Error('Scope contains an illegal symbol, \"' + symbol + '\" is a reserved keyword');\n          }\n        }\n      }\n    }\n\n    return Node;\n  }\n\n  var name$7 = 'Node';\n  var path$1 = 'expression.node';\n  var math$2 = true; // request access to the math namespace as 5th argument of the factory function\n\n  var factory_1$7 = factory$7;\n\n  var Node = {\n  \tname: name$7,\n  \tpath: path$1,\n  \tmath: math$2,\n  \tfactory: factory_1$7\n  };\n\n  /**\n   * Create a range error with the message:\n   *     'Index out of range (index < min)'\n   *     'Index out of range (index < max)'\n   *\n   * @param {number} index     The actual index\n   * @param {number} [min=0]   Minimum index (included)\n   * @param {number} [max]     Maximum index (excluded)\n   * @extends RangeError\n   */\n\n  function IndexError(index, min, max) {\n    if (!(this instanceof IndexError)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.index = index;\n\n    if (arguments.length < 3) {\n      this.min = 0;\n      this.max = min;\n    } else {\n      this.min = min;\n      this.max = max;\n    }\n\n    if (this.min !== undefined && this.index < this.min) {\n      this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n    } else if (this.max !== undefined && this.index >= this.max) {\n      this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n    } else {\n      this.message = 'Index out of range (' + this.index + ')';\n    }\n\n    this.stack = new Error().stack;\n  }\n\n  IndexError.prototype = new RangeError();\n  IndexError.prototype.constructor = RangeError;\n  IndexError.prototype.name = 'IndexError';\n  IndexError.prototype.isIndexError = true;\n  var IndexError_1 = IndexError;\n\n  /**\n   * Transform zero-based indices to one-based indices in errors\n   * @param {Error} err\n   * @returns {Error} Returns the transformed error\n   */\n\n\n  var transform = function (err) {\n    if (err && err.isIndexError) {\n      return new IndexError_1(err.index + 1, err.min + 1, err.max !== undefined ? err.max + 1 : undefined);\n    }\n\n    return err;\n  };\n\n  var error_transform = {\n  \ttransform: transform\n  };\n\n  var formatter = createCommonjsModule(function (module, exports) {\n\n\n  /**\n   * Convert a BigNumber to a formatted string representation.\n   *\n   * Syntax:\n   *\n   *    format(value)\n   *    format(value, options)\n   *    format(value, precision)\n   *    format(value, fn)\n   *\n   * Where:\n   *\n   *    {number} value   The value to be formatted\n   *    {Object} options An object with formatting options. Available options:\n   *                     {string} notation\n   *                         Number notation. Choose from:\n   *                         'fixed'          Always use regular number notation.\n   *                                          For example '123.40' and '14000000'\n   *                         'exponential'    Always use exponential notation.\n   *                                          For example '1.234e+2' and '1.4e+7'\n   *                         'auto' (default) Regular number notation for numbers\n   *                                          having an absolute value between\n   *                                          `lower` and `upper` bounds, and uses\n   *                                          exponential notation elsewhere.\n   *                                          Lower bound is included, upper bound\n   *                                          is excluded.\n   *                                          For example '123.4' and '1.4e7'.\n   *                     {number} precision   A number between 0 and 16 to round\n   *                                          the digits of the number.\n   *                                          In case of notations 'exponential',\n   *                                          'engineering', and 'auto',\n   *                                          `precision` defines the total\n   *                                          number of significant digits returned.\n   *                                          In case of notation 'fixed',\n   *                                          `precision` defines the number of\n   *                                          significant digits after the decimal\n   *                                          point.\n   *                                          `precision` is undefined by default.\n   *                     {number} lowerExp    Exponent determining the lower boundary\n   *                                          for formatting a value with an exponent\n   *                                          when `notation='auto`.\n   *                                          Default value is `-3`.\n   *                     {number} upperExp    Exponent determining the upper boundary\n   *                                          for formatting a value with an exponent\n   *                                          when `notation='auto`.\n   *                                          Default value is `5`.\n   *    {Function} fn    A custom formatting function. Can be used to override the\n   *                     built-in notations. Function `fn` is called with `value` as\n   *                     parameter and must return a string. Is useful for example to\n   *                     format all values inside a matrix in a particular way.\n   *\n   * Examples:\n   *\n   *    format(6.4)                                        // '6.4'\n   *    format(1240000)                                    // '1.24e6'\n   *    format(1/3)                                        // '0.3333333333333333'\n   *    format(1/3, 3)                                     // '0.333'\n   *    format(21385, 2)                                   // '21000'\n   *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n   *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n   *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n   *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n   *\n   * @param {BigNumber} value\n   * @param {Object | Function | number} [options]\n   * @return {string} str The formatted value\n   */\n\n\n  exports.format = function (value, options) {\n    if (typeof options === 'function') {\n      // handle format(value, fn)\n      return options(value);\n    } // handle special cases\n\n\n    if (!value.isFinite()) {\n      return value.isNaN() ? 'NaN' : value.gt(0) ? 'Infinity' : '-Infinity';\n    } // default values for options\n\n\n    var notation = 'auto';\n    var precision;\n\n    if (options !== undefined) {\n      // determine notation from options\n      if (options.notation) {\n        notation = options.notation;\n      } // determine precision from options\n\n\n      if (typeof options === 'number') {\n        precision = options;\n      } else if (options.precision) {\n        precision = options.precision;\n      }\n    } // handle the various notations\n\n\n    switch (notation) {\n      case 'fixed':\n        return exports.toFixed(value, precision);\n\n      case 'exponential':\n        return exports.toExponential(value, precision);\n\n      case 'engineering':\n        return exports.toEngineering(value, precision);\n\n      case 'auto':\n        // TODO: clean up some day. Deprecated since: 2018-01-24\n        // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n        if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n          var fixedOptions = object.map(options, function (x) {\n            return x;\n          });\n          fixedOptions.exponential = undefined;\n\n          if (options.exponential.lower !== undefined) {\n            fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10);\n          }\n\n          if (options.exponential.upper !== undefined) {\n            fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10);\n          }\n\n          console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' + '(minimum and maximum value) ' + 'are replaced with exponential.lowerExp and exponential.upperExp ' + '(minimum and maximum exponent) since version 4.0.0. ' + 'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions));\n          return exports.format(value, fixedOptions);\n        } // determine lower and upper bound for exponential notation.\n        // TODO: implement support for upper and lower to be BigNumbers themselves\n\n\n        var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n        var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5; // handle special case zero\n\n        if (value.isZero()) return '0'; // determine whether or not to output exponential notation\n\n        var str;\n        var exp = value.e;\n\n        if (exp >= lowerExp && exp < upperExp) {\n          // normal number notation\n          str = value.toSignificantDigits(precision).toFixed();\n        } else {\n          // exponential notation\n          str = exports.toExponential(value, precision);\n        } // remove trailing zeros after the decimal point\n\n\n        return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          var digits = arguments[2];\n          var e = arguments[4];\n          return digits !== '.' ? digits + e : e;\n        });\n\n      default:\n        throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n    }\n  };\n  /**\n   * Format a BigNumber in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n   * @param {BigNumber | string} value\n   * @param {number} [precision]        Optional number of significant figures to return.\n   */\n\n\n  exports.toEngineering = function (value, precision) {\n    // find nearest lower multiple of 3 for exponent\n    var e = value.e;\n    var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3; // find difference in exponents, and calculate the value without exponent\n\n    var expDiff = Math.abs(e - newExp);\n    var valueWithoutExp = value.mul(Math.pow(10, expDiff - e));\n    return valueWithoutExp.toPrecision(precision).toString() + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  };\n  /**\n   * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n   * @param {BigNumber} value\n   * @param {number} [precision]  Number of digits in formatted output.\n   *                              If not provided, the maximum available digits\n   *                              is used.\n   * @returns {string} str\n   */\n\n\n  exports.toExponential = function (value, precision) {\n    if (precision !== undefined) {\n      return value.toExponential(precision - 1); // Note the offset of one\n    } else {\n      return value.toExponential();\n    }\n  };\n  /**\n   * Format a number with fixed notation.\n   * @param {BigNumber} value\n   * @param {number} [precision=undefined] Optional number of decimals after the\n   *                                       decimal point. Undefined by default.\n   */\n\n\n  exports.toFixed = function (value, precision) {\n    return value.toFixed(precision);\n  };\n  });\n  var formatter_1 = formatter.format;\n  var formatter_2 = formatter.toEngineering;\n  var formatter_3 = formatter.toExponential;\n  var formatter_4 = formatter.toFixed;\n\n  var string = createCommonjsModule(function (module, exports) {\n\n  function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var formatNumber = number.format;\n\n  var formatBigNumber = formatter.format;\n\n\n  /**\n   * Test whether value is a string\n   * @param {*} value\n   * @return {boolean} isString\n   */\n\n\n  exports.isString = function (value) {\n    return typeof value === 'string';\n  };\n  /**\n   * Check if a text ends with a certain string.\n   * @param {string} text\n   * @param {string} search\n   */\n\n\n  exports.endsWith = function (text, search) {\n    var start = text.length - search.length;\n    var end = text.length;\n    return text.substring(start, end) === search;\n  };\n  /**\n   * Format a value of any type into a string.\n   *\n   * Usage:\n   *     math.format(value)\n   *     math.format(value, precision)\n   *\n   * When value is a function:\n   *\n   * - When the function has a property `syntax`, it returns this\n   *   syntax description.\n   * - In other cases, a string `'function'` is returned.\n   *\n   * When `value` is an Object:\n   *\n   * - When the object contains a property `format` being a function, this\n   *   function is invoked as `value.format(options)` and the result is returned.\n   * - When the object has its own `toString` method, this method is invoked\n   *   and the result is returned.\n   * - In other cases the function will loop over all object properties and\n   *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n   *\n   * Example usage:\n   *     math.format(2/7)                // '0.2857142857142857'\n   *     math.format(math.pi, 3)         // '3.14'\n   *     math.format(new Complex(2, 3))  // '2 + 3i'\n   *     math.format('hello')            // '\"hello\"'\n   *\n   * @param {*} value             Value to be stringified\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string} str\n   */\n\n\n  exports.format = function (value, options) {\n    if (typeof value === 'number') {\n      return formatNumber(value, options);\n    }\n\n    if (isBigNumber(value)) {\n      return formatBigNumber(value, options);\n    } // note: we use unsafe duck-typing here to check for Fractions, this is\n    // ok here since we're only invoking toString or concatenating its values\n\n\n    if (looksLikeFraction(value)) {\n      if (!options || options.fraction !== 'decimal') {\n        // output as ratio, like '1/3'\n        return value.s * value.n + '/' + value.d;\n      } else {\n        // output as decimal, like '0.(3)'\n        return value.toString();\n      }\n    }\n\n    if (Array.isArray(value)) {\n      return formatArray(value, options);\n    }\n\n    if (exports.isString(value)) {\n      return '\"' + value + '\"';\n    }\n\n    if (typeof value === 'function') {\n      return value.syntax ? String(value.syntax) : 'function';\n    }\n\n    if (value && _typeof(value) === 'object') {\n      if (typeof value.format === 'function') {\n        return value.format(options);\n      } else if (value && value.toString() !== {}.toString()) {\n        // this object has a non-native toString method, use that one\n        return value.toString();\n      } else {\n        var entries = [];\n\n        for (var key in value) {\n          if (value.hasOwnProperty(key)) {\n            entries.push('\"' + key + '\": ' + exports.format(value[key], options));\n          }\n        }\n\n        return '{' + entries.join(', ') + '}';\n      }\n    }\n\n    return String(value);\n  };\n  /**\n   * Stringify a value into a string enclosed in double quotes.\n   * Unescaped double quotes and backslashes inside the value are escaped.\n   * @param {*} value\n   * @return {string}\n   */\n\n\n  exports.stringify = function (value) {\n    var text = String(value);\n    var escaped = '';\n    var i = 0;\n\n    while (i < text.length) {\n      var c = text.charAt(i);\n\n      if (c === '\\\\') {\n        escaped += c;\n        i++;\n        c = text.charAt(i);\n\n        if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n          escaped += '\\\\'; // no valid escape character -> escape it\n        }\n\n        escaped += c;\n      } else if (c === '\"') {\n        escaped += '\\\\\"';\n      } else {\n        escaped += c;\n      }\n\n      i++;\n    }\n\n    return '\"' + escaped + '\"';\n  };\n  /**\n   * Escape special HTML characters\n   * @param {*} value\n   * @return {string}\n   */\n\n\n  exports.escape = function (value) {\n    var text = String(value);\n    text = text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    return text;\n  };\n  /**\n   * Recursively format an n-dimensional matrix\n   * Example output: \"[[1, 2], [3, 4]]\"\n   * @param {Array} array\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  function formatArray(array, options) {\n    if (Array.isArray(array)) {\n      var str = '[';\n      var len = array.length;\n\n      for (var i = 0; i < len; i++) {\n        if (i !== 0) {\n          str += ', ';\n        }\n\n        str += formatArray(array[i], options);\n      }\n\n      str += ']';\n      return str;\n    } else {\n      return exports.format(array, options);\n    }\n  }\n  /**\n   * Check whether a value looks like a Fraction (unsafe duck-type check)\n   * @param {*} value\n   * @return {boolean}\n   */\n\n\n  function looksLikeFraction(value) {\n    return value && _typeof(value) === 'object' && typeof value.s === 'number' && typeof value.n === 'number' && typeof value.d === 'number' || false;\n  }\n  });\n  var string_1 = string.isString;\n  var string_2 = string.endsWith;\n  var string_3 = string.format;\n  var string_4 = string.stringify;\n  var string_5 = string.escape;\n\n  /**\n   * Create a range error with the message:\n   *     'Dimension mismatch (<actual size> != <expected size>)'\n   * @param {number | number[]} actual        The actual size\n   * @param {number | number[]} expected      The expected size\n   * @param {string} [relation='!=']          Optional relation between actual\n   *                                          and expected size: '!=', '<', etc.\n   * @extends RangeError\n   */\n\n  function DimensionError(actual, expected, relation) {\n    if (!(this instanceof DimensionError)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.actual = actual;\n    this.expected = expected;\n    this.relation = relation;\n    this.message = 'Dimension mismatch (' + (Array.isArray(actual) ? '[' + actual.join(', ') + ']' : actual) + ' ' + (this.relation || '!=') + ' ' + (Array.isArray(expected) ? '[' + expected.join(', ') + ']' : expected) + ')';\n    this.stack = new Error().stack;\n  }\n\n  DimensionError.prototype = new RangeError();\n  DimensionError.prototype.constructor = RangeError;\n  DimensionError.prototype.name = 'DimensionError';\n  DimensionError.prototype.isDimensionError = true;\n  var DimensionError_1 = DimensionError;\n\n  var array = createCommonjsModule(function (module, exports) {\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.size = size;\n  exports.validate = validate;\n  exports.validateIndex = validateIndex;\n  exports.resize = resize;\n  exports.reshape = reshape;\n  exports.squeeze = squeeze;\n  exports.unsqueeze = unsqueeze;\n  exports.flatten = flatten;\n  exports.map = map;\n  exports.forEach = forEach;\n  exports.filter = filter;\n  exports.filterRegExp = filterRegExp;\n  exports.join = join;\n  exports.identify = identify;\n  exports.generalize = generalize;\n\n  var _number = _interopRequireDefault(number);\n\n  var _string = _interopRequireDefault(string);\n\n  var _DimensionError = _interopRequireDefault(DimensionError_1);\n\n  var _IndexError = _interopRequireDefault(IndexError_1);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  /**\n   * Calculate the size of a multi dimensional array.\n   * This function checks the size of the first entry, it does not validate\n   * whether all dimensions match. (use function `validate` for that)\n   * @param {Array} x\n   * @Return {Number[]} size\n   */\n  function size(x) {\n    var s = [];\n\n    while (Array.isArray(x)) {\n      s.push(x.length);\n      x = x[0];\n    }\n\n    return s;\n  }\n  /**\n   * Recursively validate whether each element in a multi dimensional array\n   * has a size corresponding to the provided size array.\n   * @param {Array} array    Array to be validated\n   * @param {number[]} size  Array with the size of each dimension\n   * @param {number} dim   Current dimension\n   * @throws DimensionError\n   * @private\n   */\n\n\n  function _validate(array, size, dim) {\n    var i;\n    var len = array.length;\n\n    if (len !== size[dim]) {\n      throw new _DimensionError[\"default\"](len, size[dim]);\n    }\n\n    if (dim < size.length - 1) {\n      // recursively validate each child array\n      var dimNext = dim + 1;\n\n      for (i = 0; i < len; i++) {\n        var child = array[i];\n\n        if (!Array.isArray(child)) {\n          throw new _DimensionError[\"default\"](size.length - 1, size.length, '<');\n        }\n\n        _validate(array[i], size, dimNext);\n      }\n    } else {\n      // last dimension. none of the childs may be an array\n      for (i = 0; i < len; i++) {\n        if (Array.isArray(array[i])) {\n          throw new _DimensionError[\"default\"](size.length + 1, size.length, '>');\n        }\n      }\n    }\n  }\n  /**\n   * Validate whether each element in a multi dimensional array has\n   * a size corresponding to the provided size array.\n   * @param {Array} array    Array to be validated\n   * @param {number[]} size  Array with the size of each dimension\n   * @throws DimensionError\n   */\n\n\n  function validate(array, size) {\n    var isScalar = size.length === 0;\n\n    if (isScalar) {\n      // scalar\n      if (Array.isArray(array)) {\n        throw new _DimensionError[\"default\"](array.length, 0);\n      }\n    } else {\n      // array\n      _validate(array, size, 0);\n    }\n  }\n  /**\n   * Test whether index is an integer number with index >= 0 and index < length\n   * when length is provided\n   * @param {number} index    Zero-based index\n   * @param {number} [length] Length of the array\n   */\n\n\n  function validateIndex(index, length) {\n    if (!_number[\"default\"].isNumber(index) || !_number[\"default\"].isInteger(index)) {\n      throw new TypeError('Index must be an integer (value: ' + index + ')');\n    }\n\n    if (index < 0 || typeof length === 'number' && index >= length) {\n      throw new _IndexError[\"default\"](index, length);\n    }\n  }\n  /**\n   * Resize a multi dimensional array. The resized array is returned.\n   * @param {Array} array         Array to be resized\n   * @param {Array.<number>} size Array with the size of each dimension\n   * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n   *                              zero by default. Specify for example `null`,\n   *                              to clearly see entries that are not explicitly\n   *                              set.\n   * @return {Array} array         The resized array\n   */\n\n\n  function resize(array, size, defaultValue) {\n    // TODO: add support for scalars, having size=[] ?\n    // check the type of the arguments\n    if (!Array.isArray(array) || !Array.isArray(size)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (size.length === 0) {\n      throw new Error('Resizing to scalar is not supported');\n    } // check whether size contains positive integers\n\n\n    size.forEach(function (value) {\n      if (!_number[\"default\"].isNumber(value) || !_number[\"default\"].isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + _string[\"default\"].format(size) + ')');\n      }\n    }); // recursively resize the array\n\n    var _defaultValue = defaultValue !== undefined ? defaultValue : 0;\n\n    _resize(array, size, 0, _defaultValue);\n\n    return array;\n  }\n  /**\n   * Recursively resize a multi dimensional array\n   * @param {Array} array         Array to be resized\n   * @param {number[]} size       Array with the size of each dimension\n   * @param {number} dim          Current dimension\n   * @param {*} [defaultValue]    Value to be filled in in new entries,\n   *                              undefined by default.\n   * @private\n   */\n\n\n  function _resize(array, size, dim, defaultValue) {\n    var i;\n    var elem;\n    var oldLen = array.length;\n    var newLen = size[dim];\n    var minLen = Math.min(oldLen, newLen); // apply new length\n\n    array.length = newLen;\n\n    if (dim < size.length - 1) {\n      // non-last dimension\n      var dimNext = dim + 1; // resize existing child arrays\n\n      for (i = 0; i < minLen; i++) {\n        // resize child array\n        elem = array[i];\n\n        if (!Array.isArray(elem)) {\n          elem = [elem]; // add a dimension\n\n          array[i] = elem;\n        }\n\n        _resize(elem, size, dimNext, defaultValue);\n      } // create new child arrays\n\n\n      for (i = minLen; i < newLen; i++) {\n        // get child array\n        elem = [];\n        array[i] = elem; // resize new child array\n\n        _resize(elem, size, dimNext, defaultValue);\n      }\n    } else {\n      // last dimension\n      // remove dimensions of existing values\n      for (i = 0; i < minLen; i++) {\n        while (Array.isArray(array[i])) {\n          array[i] = array[i][0];\n        }\n      } // fill new elements with the default value\n\n\n      for (i = minLen; i < newLen; i++) {\n        array[i] = defaultValue;\n      }\n    }\n  }\n  /**\n   * Re-shape a multi dimensional array to fit the specified dimensions\n   * @param {Array} array           Array to be reshaped\n   * @param {Array.<number>} sizes  List of sizes for each dimension\n   * @returns {Array}               Array whose data has been formatted to fit the\n   *                                specified dimensions\n   *\n   * @throws {DimensionError}       If the product of the new dimension sizes does\n   *                                not equal that of the old ones\n   */\n\n\n  function reshape(array, sizes) {\n    var flatArray = flatten(array);\n    var newArray;\n\n    function product(arr) {\n      return arr.reduce(function (prev, curr) {\n        return prev * curr;\n      });\n    }\n\n    if (!Array.isArray(array) || !Array.isArray(sizes)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (sizes.length === 0) {\n      throw new _DimensionError[\"default\"](0, product(size(array)), '!=');\n    }\n\n    var totalSize = 1;\n\n    for (var sizeIndex = 0; sizeIndex < sizes.length; sizeIndex++) {\n      totalSize *= sizes[sizeIndex];\n    }\n\n    if (flatArray.length !== totalSize) {\n      throw new _DimensionError[\"default\"](product(sizes), product(size(array)), '!=');\n    }\n\n    try {\n      newArray = _reshape(flatArray, sizes);\n    } catch (e) {\n      if (e instanceof _DimensionError[\"default\"]) {\n        throw new _DimensionError[\"default\"](product(sizes), product(size(array)), '!=');\n      }\n\n      throw e;\n    }\n\n    return newArray;\n  }\n  /**\n   * Iteratively re-shape a multi dimensional array to fit the specified dimensions\n   * @param {Array} array           Array to be reshaped\n   * @param {Array.<number>} sizes  List of sizes for each dimension\n   * @returns {Array}               Array whose data has been formatted to fit the\n   *                                specified dimensions\n   */\n\n\n  function _reshape(array, sizes) {\n    // testing if there are enough elements for the requested shape\n    var tmpArray = array;\n    var tmpArray2; // for each dimensions starting by the last one and ignoring the first one\n\n    for (var sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {\n      var size = sizes[sizeIndex];\n      tmpArray2 = []; // aggregate the elements of the current tmpArray in elements of the requested size\n\n      var length = tmpArray.length / size;\n\n      for (var i = 0; i < length; i++) {\n        tmpArray2.push(tmpArray.slice(i * size, (i + 1) * size));\n      } // set it as the new tmpArray for the next loop turn or for return\n\n\n      tmpArray = tmpArray2;\n    }\n\n    return tmpArray;\n  }\n  /**\n   * Squeeze a multi dimensional array\n   * @param {Array} array\n   * @param {Array} [arraySize]\n   * @returns {Array} returns the array itself\n   */\n\n\n  function squeeze(array, arraySize) {\n    var s = arraySize || size(array); // squeeze outer dimensions\n\n    while (Array.isArray(array) && array.length === 1) {\n      array = array[0];\n      s.shift();\n    } // find the first dimension to be squeezed\n\n\n    var dims = s.length;\n\n    while (s[dims - 1] === 1) {\n      dims--;\n    } // squeeze inner dimensions\n\n\n    if (dims < s.length) {\n      array = _squeeze(array, dims, 0);\n      s.length = dims;\n    }\n\n    return array;\n  }\n  /**\n   * Recursively squeeze a multi dimensional array\n   * @param {Array} array\n   * @param {number} dims Required number of dimensions\n   * @param {number} dim  Current dimension\n   * @returns {Array | *} Returns the squeezed array\n   * @private\n   */\n\n\n  function _squeeze(array, dims, dim) {\n    var i, ii;\n\n    if (dim < dims) {\n      var next = dim + 1;\n\n      for (i = 0, ii = array.length; i < ii; i++) {\n        array[i] = _squeeze(array[i], dims, next);\n      }\n    } else {\n      while (Array.isArray(array)) {\n        array = array[0];\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Unsqueeze a multi dimensional array: add dimensions when missing\n   *\n   * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n   *\n   * @param {Array} array\n   * @param {number} dims       Desired number of dimensions of the array\n   * @param {number} [outer]    Number of outer dimensions to be added\n   * @param {Array} [arraySize] Current size of array.\n   * @returns {Array} returns the array itself\n   * @private\n   */\n\n\n  function unsqueeze(array, dims, outer, arraySize) {\n    var s = arraySize || size(array); // unsqueeze outer dimensions\n\n    if (outer) {\n      for (var i = 0; i < outer; i++) {\n        array = [array];\n        s.unshift(1);\n      }\n    } // unsqueeze inner dimensions\n\n\n    array = _unsqueeze(array, dims, 0);\n\n    while (s.length < dims) {\n      s.push(1);\n    }\n\n    return array;\n  }\n  /**\n   * Recursively unsqueeze a multi dimensional array\n   * @param {Array} array\n   * @param {number} dims Required number of dimensions\n   * @param {number} dim  Current dimension\n   * @returns {Array | *} Returns the squeezed array\n   * @private\n   */\n\n\n  function _unsqueeze(array, dims, dim) {\n    var i, ii;\n\n    if (Array.isArray(array)) {\n      var next = dim + 1;\n\n      for (i = 0, ii = array.length; i < ii; i++) {\n        array[i] = _unsqueeze(array[i], dims, next);\n      }\n    } else {\n      for (var d = dim; d < dims; d++) {\n        array = [array];\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Flatten a multi dimensional array, put all elements in a one dimensional\n   * array\n   * @param {Array} array   A multi dimensional array\n   * @return {Array}        The flattened array (1 dimensional)\n   */\n\n\n  function flatten(array) {\n    if (!Array.isArray(array)) {\n      // if not an array, return as is\n      return array;\n    }\n\n    var flat = [];\n    array.forEach(function callback(value) {\n      if (Array.isArray(value)) {\n        value.forEach(callback); // traverse through sub-arrays recursively\n      } else {\n        flat.push(value);\n      }\n    });\n    return flat;\n  }\n  /**\n   * A safe map\n   * @param {Array} array\n   * @param {function} callback\n   */\n\n\n  function map(array, callback) {\n    return Array.prototype.map.call(array, callback);\n  }\n  /**\n   * A safe forEach\n   * @param {Array} array\n   * @param {function} callback\n   */\n\n\n  function forEach(array, callback) {\n    Array.prototype.forEach.call(array, callback);\n  }\n  /**\n   * A safe filter\n   * @param {Array} array\n   * @param {function} callback\n   */\n\n\n  function filter(array, callback) {\n    if (size(array).length !== 1) {\n      throw new Error('Only one dimensional matrices supported');\n    }\n\n    return Array.prototype.filter.call(array, callback);\n  }\n  /**\n   * Filter values in a callback given a regular expression\n   * @param {Array} array\n   * @param {RegExp} regexp\n   * @return {Array} Returns the filtered array\n   * @private\n   */\n\n\n  function filterRegExp(array, regexp) {\n    if (size(array).length !== 1) {\n      throw new Error('Only one dimensional matrices supported');\n    }\n\n    return Array.prototype.filter.call(array, function (entry) {\n      return regexp.test(entry);\n    });\n  }\n  /**\n   * A safe join\n   * @param {Array} array\n   * @param {string} separator\n   */\n\n\n  function join(array, separator) {\n    return Array.prototype.join.call(array, separator);\n  }\n  /**\n   * Assign a numeric identifier to every element of a sorted array\n   * @param {Array} a  An array\n   * @return {Array} An array of objects containing the original value and its identifier\n   */\n\n\n  function identify(a) {\n    if (!Array.isArray(a)) {\n      throw new TypeError('Array input expected');\n    }\n\n    if (a.length === 0) {\n      return a;\n    }\n\n    var b = [];\n    var count = 0;\n    b[0] = {\n      value: a[0],\n      identifier: 0\n    };\n\n    for (var i = 1; i < a.length; i++) {\n      if (a[i] === a[i - 1]) {\n        count++;\n      } else {\n        count = 0;\n      }\n\n      b.push({\n        value: a[i],\n        identifier: count\n      });\n    }\n\n    return b;\n  }\n  /**\n   * Remove the numeric identifier from the elements\n   * @param {array} a  An array\n   * @return {array} An array of values without identifiers\n   */\n\n\n  function generalize(a) {\n    if (!Array.isArray(a)) {\n      throw new TypeError('Array input expected');\n    }\n\n    if (a.length === 0) {\n      return a;\n    }\n\n    var b = [];\n\n    for (var i = 0; i < a.length; i++) {\n      b.push(a[i].value);\n    }\n\n    return b;\n  }\n  });\n\n  unwrapExports(array);\n  var array_1 = array.size;\n  var array_2 = array.validate;\n  var array_3 = array.validateIndex;\n  var array_4 = array.resize;\n  var array_5 = array.reshape;\n  var array_6 = array.squeeze;\n  var array_7 = array.unsqueeze;\n  var array_8 = array.flatten;\n  var array_9 = array.map;\n  var array_10 = array.forEach;\n  var array_11 = array.filter;\n  var array_12 = array.filterRegExp;\n  var array_13 = array.join;\n  var array_14 = array.identify;\n  var array_15 = array.generalize;\n\n  function factory$8(type, config, load, typed) {\n    /**\n     * Create a Matrix. The function creates a new `math.type.Matrix` object from\n     * an `Array`. A Matrix has utility functions to manipulate the data in the\n     * matrix, like getting the size and getting or setting values in the matrix.\n     * Supported storage formats are 'dense' and 'sparse'.\n     *\n     * Syntax:\n     *\n     *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n     *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n     *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n     *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n     *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n     *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n     *\n     * Examples:\n     *\n     *    let m = math.matrix([[1, 2], [3, 4]])\n     *    m.size()                        // Array [2, 2]\n     *    m.resize([3, 2], 5)\n     *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]\n     *    m.get([1, 0])                    // number 3\n     *\n     * See also:\n     *\n     *    bignumber, boolean, complex, index, number, string, unit, sparse\n     *\n     * @param {Array | Matrix} [data]    A multi dimensional array\n     * @param {string} [format]          The Matrix storage format\n     *\n     * @return {Matrix} The created matrix\n     */\n    var matrix = typed('matrix', {\n      '': function _() {\n        return _create([]);\n      },\n      'string': function string(format) {\n        return _create([], format);\n      },\n      'string, string': function stringString(format, datatype) {\n        return _create([], format, datatype);\n      },\n      'Array': function Array(data) {\n        return _create(data);\n      },\n      'Matrix': function Matrix(data) {\n        return _create(data, data.storage());\n      },\n      'Array | Matrix, string': _create,\n      'Array | Matrix, string, string': _create\n    });\n    matrix.toTex = {\n      0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n      1: \"\\\\left(${args[0]}\\\\right)\",\n      2: \"\\\\left(${args[0]}\\\\right)\"\n    };\n    return matrix;\n    /**\n     * Create a new Matrix with given storage format\n     * @param {Array} data\n     * @param {string} [format]\n     * @param {string} [datatype]\n     * @returns {Matrix} Returns a new Matrix\n     * @private\n     */\n\n    function _create(data, format, datatype) {\n      // get storage format constructor\n      var M = type.Matrix.storage(format || 'default'); // create instance\n\n      return new M(data, datatype);\n    }\n  }\n\n  var name$8 = 'matrix';\n  var factory_1$8 = factory$8;\n\n  var matrix = {\n  \tname: name$8,\n  \tfactory: factory_1$8\n  };\n\n  var clone = object.clone;\n\n  var validateIndex = array.validateIndex;\n\n  var getSafeProperty$1 = customs.getSafeProperty;\n\n  var setSafeProperty$1 = customs.setSafeProperty;\n\n\n\n  function factory$9(type, config, load, typed) {\n    var matrix$1 = load(matrix);\n    /**\n     * Get or set a subset of a matrix or string.\n     *\n     * Syntax:\n     *     math.subset(value, index)                                // retrieve a subset\n     *     math.subset(value, index, replacement [, defaultValue])  // replace a subset\n     *\n     * Examples:\n     *\n     *     // get a subset\n     *     const d = [[1, 2], [3, 4]]\n     *     math.subset(d, math.index(1, 0))        // returns 3\n     *     math.subset(d, math.index([0, 1], 1))   // returns [[2], [4]]\n     *\n     *     // replace a subset\n     *     const e = []\n     *     const f = math.subset(e, math.index(0, [0, 2]), [5, 6])  // f = [[5, 6]]\n     *     const g = math.subset(f, math.index(1, 1), 7, 0)         // g = [[5, 6], [0, 7]]\n     *\n     * See also:\n     *\n     *     size, resize, squeeze, index\n     *\n     * @param {Array | Matrix | string} matrix  An array, matrix, or string\n     * @param {Index} index                     An index containing ranges for each\n     *                                          dimension\n     * @param {*} [replacement]                 An array, matrix, or scalar.\n     *                                          If provided, the subset is replaced with replacement.\n     *                                          If not provided, the subset is returned\n     * @param {*} [defaultValue=undefined]      Default value, filled in on new entries when\n     *                                          the matrix is resized. If not provided,\n     *                                          math.matrix elements will be left undefined.\n     * @return {Array | Matrix | string} Either the retrieved subset or the updated matrix.\n     */\n\n    var subset = typed('subset', {\n      // get subset\n      'Array, Index': function ArrayIndex(value, index) {\n        var m = matrix$1(value);\n        var subset = m.subset(index); // returns a Matrix\n\n        return index.isScalar() ? subset : subset.valueOf(); // return an Array (like the input)\n      },\n      'Matrix, Index': function MatrixIndex(value, index) {\n        return value.subset(index);\n      },\n      'Object, Index': _getObjectProperty,\n      'string, Index': _getSubstring,\n      // set subset\n      'Array, Index, any': function ArrayIndexAny(value, index, replacement) {\n        return matrix$1(clone(value)).subset(index, replacement, undefined).valueOf();\n      },\n      'Array, Index, any, any': function ArrayIndexAnyAny(value, index, replacement, defaultValue) {\n        return matrix$1(clone(value)).subset(index, replacement, defaultValue).valueOf();\n      },\n      'Matrix, Index, any': function MatrixIndexAny(value, index, replacement) {\n        return value.clone().subset(index, replacement);\n      },\n      'Matrix, Index, any, any': function MatrixIndexAnyAny(value, index, replacement, defaultValue) {\n        return value.clone().subset(index, replacement, defaultValue);\n      },\n      'string, Index, string': _setSubstring,\n      'string, Index, string, string': _setSubstring,\n      'Object, Index, any': _setObjectProperty\n    });\n    subset.toTex = undefined; // use default template\n\n    return subset;\n    /**\n     * Retrieve a subset of a string\n     * @param {string} str            string from which to get a substring\n     * @param {Index} index           An index containing ranges for each dimension\n     * @returns {string} substring\n     * @private\n     */\n\n    function _getSubstring(str, index) {\n      if (!type.isIndex(index)) {\n        // TODO: better error message\n        throw new TypeError('Index expected');\n      }\n\n      if (index.size().length !== 1) {\n        throw new DimensionError_1(index.size().length, 1);\n      } // validate whether the range is out of range\n\n\n      var strLen = str.length;\n      validateIndex(index.min()[0], strLen);\n      validateIndex(index.max()[0], strLen);\n      var range = index.dimension(0);\n      var substr = '';\n      range.forEach(function (v) {\n        substr += str.charAt(v);\n      });\n      return substr;\n    }\n    /**\n     * Replace a substring in a string\n     * @param {string} str            string to be replaced\n     * @param {Index} index           An index containing ranges for each dimension\n     * @param {string} replacement    Replacement string\n     * @param {string} [defaultValue] Default value to be uses when resizing\n     *                                the string. is ' ' by default\n     * @returns {string} result\n     * @private\n     */\n\n\n    function _setSubstring(str, index, replacement, defaultValue) {\n      if (!index || index.isIndex !== true) {\n        // TODO: better error message\n        throw new TypeError('Index expected');\n      }\n\n      if (index.size().length !== 1) {\n        throw new DimensionError_1(index.size().length, 1);\n      }\n\n      if (defaultValue !== undefined) {\n        if (typeof defaultValue !== 'string' || defaultValue.length !== 1) {\n          throw new TypeError('Single character expected as defaultValue');\n        }\n      } else {\n        defaultValue = ' ';\n      }\n\n      var range = index.dimension(0);\n      var len = range.size()[0];\n\n      if (len !== replacement.length) {\n        throw new DimensionError_1(range.size()[0], replacement.length);\n      } // validate whether the range is out of range\n\n\n      var strLen = str.length;\n      validateIndex(index.min()[0]);\n      validateIndex(index.max()[0]); // copy the string into an array with characters\n\n      var chars = [];\n\n      for (var i = 0; i < strLen; i++) {\n        chars[i] = str.charAt(i);\n      }\n\n      range.forEach(function (v, i) {\n        chars[v] = replacement.charAt(i[0]);\n      }); // initialize undefined characters with a space\n\n      if (chars.length > strLen) {\n        for (var _i = strLen - 1, _len = chars.length; _i < _len; _i++) {\n          if (!chars[_i]) {\n            chars[_i] = defaultValue;\n          }\n        }\n      }\n\n      return chars.join('');\n    }\n  }\n  /**\n   * Retrieve a property from an object\n   * @param {Object} object\n   * @param {Index} index\n   * @return {*} Returns the value of the property\n   * @private\n   */\n\n\n  function _getObjectProperty(object, index) {\n    if (index.size().length !== 1) {\n      throw new DimensionError_1(index.size(), 1);\n    }\n\n    var key = index.dimension(0);\n\n    if (typeof key !== 'string') {\n      throw new TypeError('String expected as index to retrieve an object property');\n    }\n\n    return getSafeProperty$1(object, key);\n  }\n  /**\n   * Set a property on an object\n   * @param {Object} object\n   * @param {Index} index\n   * @param {*} replacement\n   * @return {*} Returns the updated object\n   * @private\n   */\n\n\n  function _setObjectProperty(object, index, replacement) {\n    if (index.size().length !== 1) {\n      throw new DimensionError_1(index.size(), 1);\n    }\n\n    var key = index.dimension(0);\n\n    if (typeof key !== 'string') {\n      throw new TypeError('String expected as index to retrieve an object property');\n    } // clone the object, and apply the property to the clone\n\n\n    var updated = clone(object);\n    setSafeProperty$1(updated, key, replacement);\n    return updated;\n  }\n\n  var name$9 = 'subset';\n  var factory_1$9 = factory$9;\n\n  var subset = {\n  \tname: name$9,\n  \tfactory: factory_1$9\n  };\n\n  function _typeof$6(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$6 = function _typeof(obj) { return typeof obj; }; } else { _typeof$6 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$6(obj); }\n\n  var errorTransform = error_transform.transform;\n\n  var getSafeProperty$2 = customs.getSafeProperty;\n\n  function factory$a(type, config, load, typed) {\n    var subset$1 = load(subset);\n    /**\n     * Retrieve part of an object:\n     *\n     * - Retrieve a property from an object\n     * - Retrieve a part of a string\n     * - Retrieve a matrix subset\n     *\n     * @param {Object | Array | Matrix | string} object\n     * @param {Index} index\n     * @return {Object | Array | Matrix | string} Returns the subset\n     */\n\n    return function access(object, index) {\n      try {\n        if (Array.isArray(object)) {\n          return subset$1(object, index);\n        } else if (object && typeof object.subset === 'function') {\n          // Matrix\n          return object.subset(index);\n        } else if (typeof object === 'string') {\n          // TODO: move getStringSubset into a separate util file, use that\n          return subset$1(object, index);\n        } else if (_typeof$6(object) === 'object') {\n          if (!index.isObjectProperty()) {\n            throw new TypeError('Cannot apply a numeric index as object property');\n          }\n\n          return getSafeProperty$2(object, index.getObjectProperty());\n        } else {\n          throw new TypeError('Cannot apply index: unsupported type of object');\n        }\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    };\n  }\n\n  var factory_1$a = factory$a;\n\n  var access = {\n  \tfactory: factory_1$a\n  };\n\n  var getSafeProperty$3 = customs.getSafeProperty;\n\n  function factory$b(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var access$1 = load(access);\n    /**\n     * @constructor AccessorNode\n     * @extends {Node}\n     * Access an object property or get a matrix subset\n     *\n     * @param {Node} object                 The object from which to retrieve\n     *                                      a property or subset.\n     * @param {IndexNode} index             IndexNode containing ranges\n     */\n\n    function AccessorNode(object, index) {\n      if (!(this instanceof AccessorNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (!type.isNode(object)) {\n        throw new TypeError('Node expected for parameter \"object\"');\n      }\n\n      if (!type.isIndexNode(index)) {\n        throw new TypeError('IndexNode expected for parameter \"index\"');\n      }\n\n      this.object = object || null;\n      this.index = index; // readonly property name\n\n      Object.defineProperty(this, 'name', {\n        get: function () {\n          if (this.index) {\n            return this.index.isObjectProperty() ? this.index.getObjectProperty() : '';\n          } else {\n            return this.object.name || '';\n          }\n        }.bind(this),\n        set: function set() {\n          throw new Error('Cannot assign a new name, name is read-only');\n        }\n      });\n    }\n\n    AccessorNode.prototype = new Node$1();\n    AccessorNode.prototype.type = 'AccessorNode';\n    AccessorNode.prototype.isAccessorNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    AccessorNode.prototype._compile = function (math, argNames) {\n      var evalObject = this.object._compile(math, argNames);\n\n      var evalIndex = this.index._compile(math, argNames);\n\n      if (this.index.isObjectProperty()) {\n        var prop = this.index.getObjectProperty();\n        return function evalAccessorNode(scope, args, context) {\n          return getSafeProperty$3(evalObject(scope, args, context), prop);\n        };\n      } else {\n        return function evalAccessorNode(scope, args, context) {\n          var object = evalObject(scope, args, context);\n          var index = evalIndex(scope, args, object); // we pass object here instead of context\n\n          return access$1(object, index);\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    AccessorNode.prototype.forEach = function (callback) {\n      callback(this.object, 'object', this);\n      callback(this.index, 'index', this);\n    };\n    /**\n     * Create a new AccessorNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {AccessorNode} Returns a transformed copy of the node\n     */\n\n\n    AccessorNode.prototype.map = function (callback) {\n      return new AccessorNode(this._ifNode(callback(this.object, 'object', this)), this._ifNode(callback(this.index, 'index', this)));\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {AccessorNode}\n     */\n\n\n    AccessorNode.prototype.clone = function () {\n      return new AccessorNode(this.object, this.index);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AccessorNode.prototype._toString = function (options) {\n      var object = this.object.toString(options);\n\n      if (needParenthesis(this.object)) {\n        object = '(' + object + ')';\n      }\n\n      return object + this.index.toString(options);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AccessorNode.prototype.toHTML = function (options) {\n      var object = this.object.toHTML(options);\n\n      if (needParenthesis(this.object)) {\n        object = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + object + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      return object + this.index.toHTML(options);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AccessorNode.prototype._toTex = function (options) {\n      var object = this.object.toTex(options);\n\n      if (needParenthesis(this.object)) {\n        object = \"\\\\left(' + object + '\\\\right)\";\n      }\n\n      return object + this.index.toTex(options);\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    AccessorNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'AccessorNode',\n        object: this.object,\n        index: this.index\n      };\n    };\n    /**\n     * Instantiate an AccessorNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"AccessorNode\", object: ..., index: ...}`,\n     *                       where mathjs is optional\n     * @returns {AccessorNode}\n     */\n\n\n    AccessorNode.fromJSON = function (json) {\n      return new AccessorNode(json.object, json.index);\n    };\n    /**\n     * Are parenthesis needed?\n     * @private\n     */\n\n\n    function needParenthesis(node) {\n      // TODO: maybe make a method on the nodes which tells whether they need parenthesis?\n      return !(type.isAccessorNode(node) || type.isArrayNode(node) || type.isConstantNode(node) || type.isFunctionNode(node) || type.isObjectNode(node) || type.isParenthesisNode(node) || type.isSymbolNode(node));\n    }\n\n    return AccessorNode;\n  }\n\n  var name$a = 'AccessorNode';\n  var path$2 = 'expression.node';\n  var factory_1$b = factory$b;\n\n  var AccessorNode = {\n  \tname: name$a,\n  \tpath: path$2,\n  \tfactory: factory_1$b\n  };\n\n  var map = array.map;\n\n  function factory$c(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor ArrayNode\n     * @extends {Node}\n     * Holds an 1-dimensional array with items\n     * @param {Node[]} [items]   1 dimensional array with items\n     */\n\n    function ArrayNode(items) {\n      if (!(this instanceof ArrayNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.items = items || []; // validate input\n\n      if (!Array.isArray(this.items) || !this.items.every(type.isNode)) {\n        throw new TypeError('Array containing Nodes expected');\n      } // TODO: deprecated since v3, remove some day\n\n\n      var deprecated = function deprecated() {\n        throw new Error('Property `ArrayNode.nodes` is deprecated, use `ArrayNode.items` instead');\n      };\n\n      Object.defineProperty(this, 'nodes', {\n        get: deprecated,\n        set: deprecated\n      });\n    }\n\n    ArrayNode.prototype = new Node$1();\n    ArrayNode.prototype.type = 'ArrayNode';\n    ArrayNode.prototype.isArrayNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ArrayNode.prototype._compile = function (math, argNames) {\n      var evalItems = map(this.items, function (item) {\n        return item._compile(math, argNames);\n      });\n      var asMatrix = math.config().matrix !== 'Array';\n\n      if (asMatrix) {\n        var matrix = math.matrix;\n        return function evalArrayNode(scope, args, context) {\n          return matrix(map(evalItems, function (evalItem) {\n            return evalItem(scope, args, context);\n          }));\n        };\n      } else {\n        return function evalArrayNode(scope, args, context) {\n          return map(evalItems, function (evalItem) {\n            return evalItem(scope, args, context);\n          });\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ArrayNode.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.items.length; i++) {\n        var node = this.items[i];\n        callback(node, 'items[' + i + ']', this);\n      }\n    };\n    /**\n     * Create a new ArrayNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {ArrayNode} Returns a transformed copy of the node\n     */\n\n\n    ArrayNode.prototype.map = function (callback) {\n      var items = [];\n\n      for (var i = 0; i < this.items.length; i++) {\n        items[i] = this._ifNode(callback(this.items[i], 'items[' + i + ']', this));\n      }\n\n      return new ArrayNode(items);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ArrayNode}\n     */\n\n\n    ArrayNode.prototype.clone = function () {\n      return new ArrayNode(this.items.slice(0));\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ArrayNode.prototype._toString = function (options) {\n      var items = this.items.map(function (node) {\n        return node.toString(options);\n      });\n      return '[' + items.join(', ') + ']';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ArrayNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ArrayNode',\n        items: this.items\n      };\n    };\n    /**\n     * Instantiate an ArrayNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"ArrayNode\", items: [...]}`,\n     *                       where mathjs is optional\n     * @returns {ArrayNode}\n     */\n\n\n    ArrayNode.fromJSON = function (json) {\n      return new ArrayNode(json.items);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ArrayNode.prototype.toHTML = function (options) {\n      var items = this.items.map(function (node) {\n        return node.toHTML(options);\n      });\n      return '<span class=\"math-parenthesis math-square-parenthesis\">[</span>' + items.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-square-parenthesis\">]</span>';\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ArrayNode.prototype._toTex = function (options) {\n      var s = '\\\\begin{bmatrix}';\n      this.items.forEach(function (node) {\n        if (node.items) {\n          s += node.items.map(function (childNode) {\n            return childNode.toTex(options);\n          }).join('&');\n        } else {\n          s += node.toTex(options);\n        } // new line\n\n\n        s += '\\\\\\\\';\n      });\n      s += '\\\\end{bmatrix}';\n      return s;\n    };\n\n    return ArrayNode;\n  }\n\n  var name$b = 'ArrayNode';\n  var path$3 = 'expression.node';\n  var factory_1$c = factory$c;\n\n  var ArrayNode = {\n  \tname: name$b,\n  \tpath: path$3,\n  \tfactory: factory_1$c\n  };\n\n  function _typeof$7(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$7 = function _typeof(obj) { return typeof obj; }; } else { _typeof$7 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$7(obj); }\n\n  var errorTransform$1 = error_transform.transform;\n\n  var setSafeProperty$2 = customs.setSafeProperty;\n\n  function factory$d(type, config, load, typed) {\n    var subset$1 = load(subset);\n    var matrix$1 = load(matrix);\n    /**\n     * Replace part of an object:\n     *\n     * - Assign a property to an object\n     * - Replace a part of a string\n     * - Replace a matrix subset\n     *\n     * @param {Object | Array | Matrix | string} object\n     * @param {Index} index\n     * @param {*} value\n     * @return {Object | Array | Matrix | string} Returns the original object\n     *                                            except in case of a string\n     */\n    // TODO: change assign to return the value instead of the object\n\n    return function assign(object, index, value) {\n      try {\n        if (Array.isArray(object)) {\n          return matrix$1(object).subset(index, value).valueOf();\n        } else if (object && typeof object.subset === 'function') {\n          // Matrix\n          return object.subset(index, value);\n        } else if (typeof object === 'string') {\n          // TODO: move setStringSubset into a separate util file, use that\n          return subset$1(object, index, value);\n        } else if (_typeof$7(object) === 'object') {\n          if (!index.isObjectProperty()) {\n            throw TypeError('Cannot apply a numeric index as object property');\n          }\n\n          setSafeProperty$2(object, index.getObjectProperty(), value);\n          return object;\n        } else {\n          throw new TypeError('Cannot apply index: unsupported type of object');\n        }\n      } catch (err) {\n        throw errorTransform$1(err);\n      }\n    };\n  }\n\n  var factory_1$d = factory$d;\n\n  var assign = {\n  \tfactory: factory_1$d\n  };\n\n  // also contains information about left/right associativity\n  // and which other operator the operator is associative with\n  // Example:\n  // addition is associative with addition and subtraction, because:\n  // (a+b)+c=a+(b+c)\n  // (a+b)-c=a+(b-c)\n  //\n  // postfix operators are left associative, prefix operators\n  // are right associative\n  //\n  // It's also possible to set the following properties:\n  // latexParens: if set to false, this node doesn't need to be enclosed\n  //              in parentheses when using LaTeX\n  // latexLeftParens: if set to false, this !OperatorNode's!\n  //                  left argument doesn't need to be enclosed\n  //                  in parentheses\n  // latexRightParens: the same for the right argument\n\n  var properties = [{\n    // assignment\n    'AssignmentNode': {},\n    'FunctionAssignmentNode': {}\n  }, {\n    // conditional expression\n    'ConditionalNode': {\n      latexLeftParens: false,\n      latexRightParens: false,\n      latexParens: false // conditionals don't need parentheses in LaTeX because\n      // they are 2 dimensional\n\n    }\n  }, {\n    // logical or\n    'OperatorNode:or': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // logical xor\n    'OperatorNode:xor': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // logical and\n    'OperatorNode:and': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // bitwise or\n    'OperatorNode:bitOr': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // bitwise xor\n    'OperatorNode:bitXor': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // bitwise and\n    'OperatorNode:bitAnd': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // relational operators\n    'OperatorNode:equal': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:unequal': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:smaller': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:larger': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:smallerEq': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:largerEq': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'RelationalNode': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // bitshift operators\n    'OperatorNode:leftShift': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:rightArithShift': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:rightLogShift': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // unit conversion\n    'OperatorNode:to': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // range\n    'RangeNode': {}\n  }, {\n    // addition, subtraction\n    'OperatorNode:add': {\n      associativity: 'left',\n      associativeWith: ['OperatorNode:add', 'OperatorNode:subtract']\n    },\n    'OperatorNode:subtract': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // multiply, divide, modulus\n    'OperatorNode:multiply': {\n      associativity: 'left',\n      associativeWith: ['OperatorNode:multiply', 'OperatorNode:divide', 'Operator:dotMultiply', 'Operator:dotDivide']\n    },\n    'OperatorNode:divide': {\n      associativity: 'left',\n      associativeWith: [],\n      latexLeftParens: false,\n      latexRightParens: false,\n      latexParens: false // fractions don't require parentheses because\n      // they're 2 dimensional, so parens aren't needed\n      // in LaTeX\n\n    },\n    'OperatorNode:dotMultiply': {\n      associativity: 'left',\n      associativeWith: ['OperatorNode:multiply', 'OperatorNode:divide', 'OperatorNode:dotMultiply', 'OperatorNode:doDivide']\n    },\n    'OperatorNode:dotDivide': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:mod': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // unary prefix operators\n    'OperatorNode:unaryPlus': {\n      associativity: 'right'\n    },\n    'OperatorNode:unaryMinus': {\n      associativity: 'right'\n    },\n    'OperatorNode:bitNot': {\n      associativity: 'right'\n    },\n    'OperatorNode:not': {\n      associativity: 'right'\n    }\n  }, {\n    // exponentiation\n    'OperatorNode:pow': {\n      associativity: 'right',\n      associativeWith: [],\n      latexRightParens: false // the exponent doesn't need parentheses in\n      // LaTeX because it's 2 dimensional\n      // (it's on top)\n\n    },\n    'OperatorNode:dotPow': {\n      associativity: 'right',\n      associativeWith: []\n    }\n  }, {\n    // factorial\n    'OperatorNode:factorial': {\n      associativity: 'left'\n    }\n  }, {\n    // matrix transpose\n    'OperatorNode:transpose': {\n      associativity: 'left'\n    }\n  }];\n  /**\n   * Get the precedence of a Node.\n   * Higher number for higher precedence, starting with 0.\n   * Returns null if the precedence is undefined.\n   *\n   * @param {Node}\n   * @param {string} parenthesis\n   * @return {number|null}\n   */\n\n  function getPrecedence(_node, parenthesis) {\n    var node = _node;\n\n    if (parenthesis !== 'keep') {\n      // ParenthesisNodes are only ignored when not in 'keep' mode\n      node = _node.getContent();\n    }\n\n    var identifier = node.getIdentifier();\n\n    for (var i = 0; i < properties.length; i++) {\n      if (identifier in properties[i]) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Get the associativity of an operator (left or right).\n   * Returns a string containing 'left' or 'right' or null if\n   * the associativity is not defined.\n   *\n   * @param {Node}\n   * @param {string} parenthesis\n   * @return {string|null}\n   * @throws {Error}\n   */\n\n\n  function getAssociativity(_node, parenthesis) {\n    var node = _node;\n\n    if (parenthesis !== 'keep') {\n      // ParenthesisNodes are only ignored when not in 'keep' mode\n      node = _node.getContent();\n    }\n\n    var identifier = node.getIdentifier();\n    var index = getPrecedence(node, parenthesis);\n\n    if (index === null) {\n      // node isn't in the list\n      return null;\n    }\n\n    var property = properties[index][identifier];\n\n    if (property.hasOwnProperty('associativity')) {\n      if (property.associativity === 'left') {\n        return 'left';\n      }\n\n      if (property.associativity === 'right') {\n        return 'right';\n      } // associativity is invalid\n\n\n      throw Error('\\'' + identifier + '\\' has the invalid associativity \\'' + property.associativity + '\\'.');\n    } // associativity is undefined\n\n\n    return null;\n  }\n  /**\n   * Check if an operator is associative with another operator.\n   * Returns either true or false or null if not defined.\n   *\n   * @param {Node} nodeA\n   * @param {Node} nodeB\n   * @param {string} parenthesis\n   * @return {bool|null}\n   */\n\n\n  function isAssociativeWith(nodeA, nodeB, parenthesis) {\n    // ParenthesisNodes are only ignored when not in 'keep' mode\n    var a = parenthesis !== 'keep' ? nodeA.getContent() : nodeA;\n    var b = parenthesis !== 'keep' ? nodeA.getContent() : nodeB;\n    var identifierA = a.getIdentifier();\n    var identifierB = b.getIdentifier();\n    var index = getPrecedence(a, parenthesis);\n\n    if (index === null) {\n      // node isn't in the list\n      return null;\n    }\n\n    var property = properties[index][identifierA];\n\n    if (property.hasOwnProperty('associativeWith') && property.associativeWith instanceof Array) {\n      for (var i = 0; i < property.associativeWith.length; i++) {\n        if (property.associativeWith[i] === identifierB) {\n          return true;\n        }\n      }\n\n      return false;\n    } // associativeWith is not defined\n\n\n    return null;\n  }\n\n  var properties_1 = properties;\n  var getPrecedence_1 = getPrecedence;\n  var getAssociativity_1 = getAssociativity;\n  var isAssociativeWith_1 = isAssociativeWith;\n\n  var operators = {\n  \tproperties: properties_1,\n  \tgetPrecedence: getPrecedence_1,\n  \tgetAssociativity: getAssociativity_1,\n  \tisAssociativeWith: isAssociativeWith_1\n  };\n\n  var getSafeProperty$4 = customs.getSafeProperty;\n\n  var setSafeProperty$3 = customs.setSafeProperty;\n\n  function factory$e(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var assign$1 = load(assign);\n    var access$1 = load(access);\n\n    var operators$1 = operators;\n    /**\n     * @constructor AssignmentNode\n     * @extends {Node}\n     *\n     * Define a symbol, like `a=3.2`, update a property like `a.b=3.2`, or\n     * replace a subset of a matrix like `A[2,2]=42`.\n     *\n     * Syntax:\n     *\n     *     new AssignmentNode(symbol, value)\n     *     new AssignmentNode(object, index, value)\n     *\n     * Usage:\n     *\n     *    new AssignmentNode(new SymbolNode('a'), new ConstantNode(2))                       // a=2\n     *    new AssignmentNode(new SymbolNode('a'), new IndexNode('b'), new ConstantNode(2))   // a.b=2\n     *    new AssignmentNode(new SymbolNode('a'), new IndexNode(1, 2), new ConstantNode(3))  // a[1,2]=3\n     *\n     * @param {SymbolNode | AccessorNode} object  Object on which to assign a value\n     * @param {IndexNode} [index=null]            Index, property name or matrix\n     *                                            index. Optional. If not provided\n     *                                            and `object` is a SymbolNode,\n     *                                            the property is assigned to the\n     *                                            global scope.\n     * @param {Node} value                        The value to be assigned\n     */\n\n\n    function AssignmentNode(object, index, value) {\n      if (!(this instanceof AssignmentNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.object = object;\n      this.index = value ? index : null;\n      this.value = value || index; // validate input\n\n      if (!type.isSymbolNode(object) && !type.isAccessorNode(object)) {\n        throw new TypeError('SymbolNode or AccessorNode expected as \"object\"');\n      }\n\n      if (type.isSymbolNode(object) && object.name === 'end') {\n        throw new Error('Cannot assign to symbol \"end\"');\n      }\n\n      if (this.index && !type.isIndexNode(this.index)) {\n        // index is optional\n        throw new TypeError('IndexNode expected as \"index\"');\n      }\n\n      if (!type.isNode(this.value)) {\n        throw new TypeError('Node expected as \"value\"');\n      } // readonly property name\n\n\n      Object.defineProperty(this, 'name', {\n        get: function () {\n          if (this.index) {\n            return this.index.isObjectProperty() ? this.index.getObjectProperty() : '';\n          } else {\n            return this.object.name || '';\n          }\n        }.bind(this),\n        set: function set() {\n          throw new Error('Cannot assign a new name, name is read-only');\n        }\n      });\n    }\n\n    AssignmentNode.prototype = new Node$1();\n    AssignmentNode.prototype.type = 'AssignmentNode';\n    AssignmentNode.prototype.isAssignmentNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    AssignmentNode.prototype._compile = function (math, argNames) {\n      var evalObject = this.object._compile(math, argNames);\n\n      var evalIndex = this.index ? this.index._compile(math, argNames) : null;\n\n      var evalValue = this.value._compile(math, argNames);\n\n      var name = this.object.name;\n\n      if (!this.index) {\n        // apply a variable to the scope, for example `a=2`\n        if (!type.isSymbolNode(this.object)) {\n          throw new TypeError('SymbolNode expected as object');\n        }\n\n        return function evalAssignmentNode(scope, args, context) {\n          return setSafeProperty$3(scope, name, evalValue(scope, args, context));\n        };\n      } else if (this.index.isObjectProperty()) {\n        // apply an object property for example `a.b=2`\n        var prop = this.index.getObjectProperty();\n        return function evalAssignmentNode(scope, args, context) {\n          var object = evalObject(scope, args, context);\n          var value = evalValue(scope, args, context);\n          return setSafeProperty$3(object, prop, value);\n        };\n      } else if (type.isSymbolNode(this.object)) {\n        // update a matrix subset, for example `a[2]=3`\n        return function evalAssignmentNode(scope, args, context) {\n          var childObject = evalObject(scope, args, context);\n          var value = evalValue(scope, args, context);\n          var index = evalIndex(scope, args, childObject); // Important:  we pass childObject instead of context\n\n          setSafeProperty$3(scope, name, assign$1(childObject, index, value));\n          return value;\n        };\n      } else {\n        // type.isAccessorNode(node.object) === true\n        // update a matrix subset, for example `a.b[2]=3`\n        // we will not use the compile function of the AccessorNode, but compile it\n        // ourselves here as we need the parent object of the AccessorNode:\n        // wee need to apply the updated object to parent object\n        var evalParentObject = this.object.object._compile(math, argNames);\n\n        if (this.object.index.isObjectProperty()) {\n          var parentProp = this.object.index.getObjectProperty();\n          return function evalAssignmentNode(scope, args, context) {\n            var parent = evalParentObject(scope, args, context);\n            var childObject = getSafeProperty$4(parent, parentProp);\n            var index = evalIndex(scope, args, childObject); // Important: we pass childObject instead of context\n\n            var value = evalValue(scope, args, context);\n            setSafeProperty$3(parent, parentProp, assign$1(childObject, index, value));\n            return value;\n          };\n        } else {\n          // if some parameters use the 'end' parameter, we need to calculate the size\n          var evalParentIndex = this.object.index._compile(math, argNames);\n\n          return function evalAssignmentNode(scope, args, context) {\n            var parent = evalParentObject(scope, args, context);\n            var parentIndex = evalParentIndex(scope, args, parent); // Important: we pass parent instead of context\n\n            var childObject = access$1(parent, parentIndex);\n            var index = evalIndex(scope, args, childObject); // Important:  we pass childObject instead of context\n\n            var value = evalValue(scope, args, context);\n            assign$1(parent, parentIndex, assign$1(childObject, index, value));\n            return value;\n          };\n        }\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    AssignmentNode.prototype.forEach = function (callback) {\n      callback(this.object, 'object', this);\n\n      if (this.index) {\n        callback(this.index, 'index', this);\n      }\n\n      callback(this.value, 'value', this);\n    };\n    /**\n     * Create a new AssignmentNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {AssignmentNode} Returns a transformed copy of the node\n     */\n\n\n    AssignmentNode.prototype.map = function (callback) {\n      var object = this._ifNode(callback(this.object, 'object', this));\n\n      var index = this.index ? this._ifNode(callback(this.index, 'index', this)) : null;\n\n      var value = this._ifNode(callback(this.value, 'value', this));\n\n      return new AssignmentNode(object, index, value);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {AssignmentNode}\n     */\n\n\n    AssignmentNode.prototype.clone = function () {\n      return new AssignmentNode(this.object, this.index, this.value);\n    };\n    /*\n     * Is parenthesis needed?\n     * @param {node} node\n     * @param {string} [parenthesis='keep']\n     * @private\n     */\n\n\n    function needParenthesis(node, parenthesis) {\n      if (!parenthesis) {\n        parenthesis = 'keep';\n      }\n\n      var precedence = operators$1.getPrecedence(node, parenthesis);\n      var exprPrecedence = operators$1.getPrecedence(node.value, parenthesis);\n      return parenthesis === 'all' || exprPrecedence !== null && exprPrecedence <= precedence;\n    }\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AssignmentNode.prototype._toString = function (options) {\n      var object = this.object.toString(options);\n      var index = this.index ? this.index.toString(options) : '';\n      var value = this.value.toString(options);\n\n      if (needParenthesis(this, options && options.parenthesis)) {\n        value = '(' + value + ')';\n      }\n\n      return object + index + ' = ' + value;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    AssignmentNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'AssignmentNode',\n        object: this.object,\n        index: this.index,\n        value: this.value\n      };\n    };\n    /**\n     * Instantiate an AssignmentNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"AssignmentNode\", object: ..., index: ..., value: ...}`,\n     *                       where mathjs is optional\n     * @returns {AssignmentNode}\n     */\n\n\n    AssignmentNode.fromJSON = function (json) {\n      return new AssignmentNode(json.object, json.index, json.value);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AssignmentNode.prototype.toHTML = function (options) {\n      var object = this.object.toHTML(options);\n      var index = this.index ? this.index.toHTML(options) : '';\n      var value = this.value.toHTML(options);\n\n      if (needParenthesis(this, options && options.parenthesis)) {\n        value = '<span class=\"math-paranthesis math-round-parenthesis\">(</span>' + value + '<span class=\"math-paranthesis math-round-parenthesis\">)</span>';\n      }\n\n      return object + index + '<span class=\"math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator\">=</span>' + value;\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AssignmentNode.prototype._toTex = function (options) {\n      var object = this.object.toTex(options);\n      var index = this.index ? this.index.toTex(options) : '';\n      var value = this.value.toTex(options);\n\n      if (needParenthesis(this, options && options.parenthesis)) {\n        value = \"\\\\left(\".concat(value, \"\\\\right)\");\n      }\n\n      return object + index + ':=' + value;\n    };\n\n    return AssignmentNode;\n  }\n\n  var name$c = 'AssignmentNode';\n  var path$4 = 'expression.node';\n  var factory_1$e = factory$e;\n\n  var AssignmentNode = {\n  \tname: name$c,\n  \tpath: path$4,\n  \tfactory: factory_1$e\n  };\n\n  function factory$f(type, config, load, typed) {\n    /**\n     * A ResultSet contains a list or results\n     * @class ResultSet\n     * @param {Array} entries\n     * @constructor ResultSet\n     */\n    function ResultSet(entries) {\n      if (!(this instanceof ResultSet)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.entries = entries || [];\n    }\n    /**\n     * Attach type information\n     */\n\n\n    ResultSet.prototype.type = 'ResultSet';\n    ResultSet.prototype.isResultSet = true;\n    /**\n     * Returns the array with results hold by this ResultSet\n     * @memberof ResultSet\n     * @returns {Array} entries\n     */\n\n    ResultSet.prototype.valueOf = function () {\n      return this.entries;\n    };\n    /**\n     * Returns the stringified results of the ResultSet\n     * @memberof ResultSet\n     * @returns {string} string\n     */\n\n\n    ResultSet.prototype.toString = function () {\n      return '[' + this.entries.join(', ') + ']';\n    };\n    /**\n     * Get a JSON representation of the ResultSet\n     * @memberof ResultSet\n     * @returns {Object} Returns a JSON object structured as:\n     *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n     */\n\n\n    ResultSet.prototype.toJSON = function () {\n      return {\n        mathjs: 'ResultSet',\n        entries: this.entries\n      };\n    };\n    /**\n     * Instantiate a ResultSet from a JSON object\n     * @memberof ResultSet\n     * @param {Object} json  A JSON object structured as:\n     *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n     * @return {ResultSet}\n     */\n\n\n    ResultSet.fromJSON = function (json) {\n      return new ResultSet(json.entries);\n    };\n\n    return ResultSet;\n  }\n\n  var name$d = 'ResultSet';\n  var path$5 = 'type';\n  var factory_1$f = factory$f;\n\n  var ResultSet = {\n  \tname: name$d,\n  \tpath: path$5,\n  \tfactory: factory_1$f\n  };\n\n  var forEach = array.forEach;\n\n  var map$1 = array.map;\n\n  function factory$g(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var ResultSet$1 = load(ResultSet);\n    /**\n     * @constructor BlockNode\n     * @extends {Node}\n     * Holds a set with blocks\n     * @param {Array.<{node: Node} | {node: Node, visible: boolean}>} blocks\n     *            An array with blocks, where a block is constructed as an Object\n     *            with properties block, which is a Node, and visible, which is\n     *            a boolean. The property visible is optional and is true by default\n     */\n\n    function BlockNode(blocks) {\n      if (!(this instanceof BlockNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input, copy blocks\n\n\n      if (!Array.isArray(blocks)) throw new Error('Array expected');\n      this.blocks = blocks.map(function (block) {\n        var node = block && block.node;\n        var visible = block && block.visible !== undefined ? block.visible : true;\n        if (!type.isNode(node)) throw new TypeError('Property \"node\" must be a Node');\n        if (typeof visible !== 'boolean') throw new TypeError('Property \"visible\" must be a boolean');\n        return {\n          node: node,\n          visible: visible\n        };\n      });\n    }\n\n    BlockNode.prototype = new Node$1();\n    BlockNode.prototype.type = 'BlockNode';\n    BlockNode.prototype.isBlockNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    BlockNode.prototype._compile = function (math, argNames) {\n      var evalBlocks = map$1(this.blocks, function (block) {\n        return {\n          eval: block.node._compile(math, argNames),\n          visible: block.visible\n        };\n      });\n      return function evalBlockNodes(scope, args, context) {\n        var results = [];\n        forEach(evalBlocks, function evalBlockNode(block) {\n          var result = block.eval(scope, args, context);\n\n          if (block.visible) {\n            results.push(result);\n          }\n        });\n        return new ResultSet$1(results);\n      };\n    };\n    /**\n     * Execute a callback for each of the child blocks of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    BlockNode.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.blocks.length; i++) {\n        callback(this.blocks[i].node, 'blocks[' + i + '].node', this);\n      }\n    };\n    /**\n     * Create a new BlockNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {BlockNode} Returns a transformed copy of the node\n     */\n\n\n    BlockNode.prototype.map = function (callback) {\n      var blocks = [];\n\n      for (var i = 0; i < this.blocks.length; i++) {\n        var block = this.blocks[i];\n\n        var node = this._ifNode(callback(block.node, 'blocks[' + i + '].node', this));\n\n        blocks[i] = {\n          node: node,\n          visible: block.visible\n        };\n      }\n\n      return new BlockNode(blocks);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {BlockNode}\n     */\n\n\n    BlockNode.prototype.clone = function () {\n      var blocks = this.blocks.map(function (block) {\n        return {\n          node: block.node,\n          visible: block.visible\n        };\n      });\n      return new BlockNode(blocks);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    BlockNode.prototype._toString = function (options) {\n      return this.blocks.map(function (param) {\n        return param.node.toString(options) + (param.visible ? '' : ';');\n      }).join('\\n');\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    BlockNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'BlockNode',\n        blocks: this.blocks\n      };\n    };\n    /**\n     * Instantiate an BlockNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"BlockNode\", blocks: [{node: ..., visible: false}, ...]}`,\n     *                       where mathjs is optional\n     * @returns {BlockNode}\n     */\n\n\n    BlockNode.fromJSON = function (json) {\n      return new BlockNode(json.blocks);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    BlockNode.prototype.toHTML = function (options) {\n      return this.blocks.map(function (param) {\n        return param.node.toHTML(options) + (param.visible ? '' : '<span class=\"math-separator\">;</span>');\n      }).join('<span class=\"math-separator\"><br /></span>');\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    BlockNode.prototype._toTex = function (options) {\n      return this.blocks.map(function (param) {\n        return param.node.toTex(options) + (param.visible ? '' : ';');\n      }).join('\\\\;\\\\;\\n');\n    };\n\n    return BlockNode;\n  }\n\n  var name$e = 'BlockNode';\n  var path$6 = 'expression.node';\n  var factory_1$g = factory$g;\n\n  var BlockNode = {\n  \tname: name$e,\n  \tpath: path$6,\n  \tfactory: factory_1$g\n  };\n\n  function factory$h(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var mathTypeOf = load(_typeof$3);\n    /**\n     * A lazy evaluating conditional operator: 'condition ? trueExpr : falseExpr'\n     *\n     * @param {Node} condition   Condition, must result in a boolean\n     * @param {Node} trueExpr    Expression evaluated when condition is true\n     * @param {Node} falseExpr   Expression evaluated when condition is true\n     *\n     * @constructor ConditionalNode\n     * @extends {Node}\n     */\n\n    function ConditionalNode(condition, trueExpr, falseExpr) {\n      if (!(this instanceof ConditionalNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (!type.isNode(condition)) throw new TypeError('Parameter condition must be a Node');\n      if (!type.isNode(trueExpr)) throw new TypeError('Parameter trueExpr must be a Node');\n      if (!type.isNode(falseExpr)) throw new TypeError('Parameter falseExpr must be a Node');\n      this.condition = condition;\n      this.trueExpr = trueExpr;\n      this.falseExpr = falseExpr;\n    }\n\n    ConditionalNode.prototype = new Node$1();\n    ConditionalNode.prototype.type = 'ConditionalNode';\n    ConditionalNode.prototype.isConditionalNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ConditionalNode.prototype._compile = function (math, argNames) {\n      var evalCondition = this.condition._compile(math, argNames);\n\n      var evalTrueExpr = this.trueExpr._compile(math, argNames);\n\n      var evalFalseExpr = this.falseExpr._compile(math, argNames);\n\n      return function evalConditionalNode(scope, args, context) {\n        return testCondition(evalCondition(scope, args, context)) ? evalTrueExpr(scope, args, context) : evalFalseExpr(scope, args, context);\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ConditionalNode.prototype.forEach = function (callback) {\n      callback(this.condition, 'condition', this);\n      callback(this.trueExpr, 'trueExpr', this);\n      callback(this.falseExpr, 'falseExpr', this);\n    };\n    /**\n     * Create a new ConditionalNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {ConditionalNode} Returns a transformed copy of the node\n     */\n\n\n    ConditionalNode.prototype.map = function (callback) {\n      return new ConditionalNode(this._ifNode(callback(this.condition, 'condition', this)), this._ifNode(callback(this.trueExpr, 'trueExpr', this)), this._ifNode(callback(this.falseExpr, 'falseExpr', this)));\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ConditionalNode}\n     */\n\n\n    ConditionalNode.prototype.clone = function () {\n      return new ConditionalNode(this.condition, this.trueExpr, this.falseExpr);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConditionalNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis); // Enclose Arguments in parentheses if they are an OperatorNode\n      // or have lower or equal precedence\n      // NOTE: enclosing all OperatorNodes in parentheses is a decision\n      // purely based on aesthetics and readability\n\n      var condition = this.condition.toString(options);\n      var conditionPrecedence = operators.getPrecedence(this.condition, parenthesis);\n\n      if (parenthesis === 'all' || this.condition.type === 'OperatorNode' || conditionPrecedence !== null && conditionPrecedence <= precedence) {\n        condition = '(' + condition + ')';\n      }\n\n      var trueExpr = this.trueExpr.toString(options);\n      var truePrecedence = operators.getPrecedence(this.trueExpr, parenthesis);\n\n      if (parenthesis === 'all' || this.trueExpr.type === 'OperatorNode' || truePrecedence !== null && truePrecedence <= precedence) {\n        trueExpr = '(' + trueExpr + ')';\n      }\n\n      var falseExpr = this.falseExpr.toString(options);\n      var falsePrecedence = operators.getPrecedence(this.falseExpr, parenthesis);\n\n      if (parenthesis === 'all' || this.falseExpr.type === 'OperatorNode' || falsePrecedence !== null && falsePrecedence <= precedence) {\n        falseExpr = '(' + falseExpr + ')';\n      }\n\n      return condition + ' ? ' + trueExpr + ' : ' + falseExpr;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ConditionalNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ConditionalNode',\n        condition: this.condition,\n        trueExpr: this.trueExpr,\n        falseExpr: this.falseExpr\n      };\n    };\n    /**\n     * Instantiate an ConditionalNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"ConditionalNode\", \"condition\": ..., \"trueExpr\": ..., \"falseExpr\": ...}`,\n     *                       where mathjs is optional\n     * @returns {ConditionalNode}\n     */\n\n\n    ConditionalNode.fromJSON = function (json) {\n      return new ConditionalNode(json.condition, json.trueExpr, json.falseExpr);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConditionalNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis); // Enclose Arguments in parentheses if they are an OperatorNode\n      // or have lower or equal precedence\n      // NOTE: enclosing all OperatorNodes in parentheses is a decision\n      // purely based on aesthetics and readability\n\n      var condition = this.condition.toHTML(options);\n      var conditionPrecedence = operators.getPrecedence(this.condition, parenthesis);\n\n      if (parenthesis === 'all' || this.condition.type === 'OperatorNode' || conditionPrecedence !== null && conditionPrecedence <= precedence) {\n        condition = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + condition + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      var trueExpr = this.trueExpr.toHTML(options);\n      var truePrecedence = operators.getPrecedence(this.trueExpr, parenthesis);\n\n      if (parenthesis === 'all' || this.trueExpr.type === 'OperatorNode' || truePrecedence !== null && truePrecedence <= precedence) {\n        trueExpr = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + trueExpr + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      var falseExpr = this.falseExpr.toHTML(options);\n      var falsePrecedence = operators.getPrecedence(this.falseExpr, parenthesis);\n\n      if (parenthesis === 'all' || this.falseExpr.type === 'OperatorNode' || falsePrecedence !== null && falsePrecedence <= precedence) {\n        falseExpr = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + falseExpr + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      return condition + '<span class=\"math-operator math-conditional-operator\">?</span>' + trueExpr + '<span class=\"math-operator math-conditional-operator\">:</span>' + falseExpr;\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConditionalNode.prototype._toTex = function (options) {\n      return '\\\\begin{cases} {' + this.trueExpr.toTex(options) + '}, &\\\\quad{\\\\text{if }\\\\;' + this.condition.toTex(options) + '}\\\\\\\\{' + this.falseExpr.toTex(options) + '}, &\\\\quad{\\\\text{otherwise}}\\\\end{cases}';\n    };\n    /**\n     * Test whether a condition is met\n     * @param {*} condition\n     * @returns {boolean} true if condition is true or non-zero, else false\n     */\n\n\n    function testCondition(condition) {\n      if (typeof condition === 'number' || typeof condition === 'boolean' || typeof condition === 'string') {\n        return !!condition;\n      }\n\n      if (condition) {\n        if (type.isBigNumber(condition)) {\n          return !condition.isZero();\n        }\n\n        if (type.isComplex(condition)) {\n          return !!(condition.re || condition.im);\n        }\n\n        if (type.isUnit(condition)) {\n          return !!condition.value;\n        }\n      }\n\n      if (condition === null || condition === undefined) {\n        return false;\n      }\n\n      throw new TypeError('Unsupported type of condition \"' + mathTypeOf(condition) + '\"');\n    }\n\n    return ConditionalNode;\n  }\n\n  var name$f = 'ConditionalNode';\n  var path$7 = 'expression.node';\n  var factory_1$h = factory$h;\n\n  var ConditionalNode = {\n  \tname: name$f,\n  \tpath: path$7,\n  \tfactory: factory_1$h\n  };\n\n  // Map the characters to escape to their escaped values. The list is derived\n  // from http://www.cespedes.org/blog/85/how-to-escape-latex-special-characters\n\n  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n  var defaultEscapes = {\n    \"{\": \"\\\\{\",\n    \"}\": \"\\\\}\",\n    \"\\\\\": \"\\\\textbackslash{}\",\n    \"#\": \"\\\\#\",\n    $: \"\\\\$\",\n    \"%\": \"\\\\%\",\n    \"&\": \"\\\\&\",\n    \"^\": \"\\\\textasciicircum{}\",\n    _: \"\\\\_\",\n    \"~\": \"\\\\textasciitilde{}\"\n  };\n  var formatEscapes = {\n    \"\\u2013\": \"\\\\--\",\n    \"\\u2014\": \"\\\\---\",\n    \" \": \"~\",\n    \"\\t\": \"\\\\qquad{}\",\n    \"\\r\\n\": \"\\\\newline{}\",\n    \"\\n\": \"\\\\newline{}\"\n  };\n\n  var defaultEscapeMapFn = function defaultEscapeMapFn(defaultEscapes, formatEscapes) {\n    return _extends({}, defaultEscapes, formatEscapes);\n  };\n\n  /**\n   * Escape a string to be used in LaTeX documents.\n   * @param {string} str the string to be escaped.\n   * @param {boolean} params.preserveFormatting whether formatting escapes should\n   *  be performed (default: false).\n   * @param {function} params.escapeMapFn the function to modify the escape maps.\n   * @return {string} the escaped string, ready to be used in LaTeX.\n   */\n  var dist = function (str) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$preserveFormatti = _ref.preserveFormatting,\n        preserveFormatting = _ref$preserveFormatti === undefined ? false : _ref$preserveFormatti,\n        _ref$escapeMapFn = _ref.escapeMapFn,\n        escapeMapFn = _ref$escapeMapFn === undefined ? defaultEscapeMapFn : _ref$escapeMapFn;\n\n    var runningStr = String(str);\n    var result = \"\";\n\n    var escapes = escapeMapFn(_extends({}, defaultEscapes), preserveFormatting ? _extends({}, formatEscapes) : {});\n    var escapeKeys = Object.keys(escapes); // as it is reused later on\n\n    // Algorithm: Go through the string character by character, if it matches\n    // with one of the special characters then we'll replace it with the escaped\n    // version.\n\n    var _loop = function _loop() {\n      var specialCharFound = false;\n      escapeKeys.forEach(function (key, index) {\n        if (specialCharFound) {\n          return;\n        }\n        if (runningStr.length >= key.length && runningStr.slice(0, key.length) === key) {\n          result += escapes[escapeKeys[index]];\n          runningStr = runningStr.slice(key.length, runningStr.length);\n          specialCharFound = true;\n        }\n      });\n      if (!specialCharFound) {\n        result += runningStr.slice(0, 1);\n        runningStr = runningStr.slice(1, runningStr.length);\n      }\n    };\n\n    while (runningStr) {\n      _loop();\n    }\n    return result;\n  };\n\n  var latex = createCommonjsModule(function (module, exports) {\n\n\n\n  exports.symbols = {\n    // GREEK LETTERS\n    Alpha: 'A',\n    alpha: '\\\\alpha',\n    Beta: 'B',\n    beta: '\\\\beta',\n    Gamma: '\\\\Gamma',\n    gamma: '\\\\gamma',\n    Delta: '\\\\Delta',\n    delta: '\\\\delta',\n    Epsilon: 'E',\n    epsilon: '\\\\epsilon',\n    varepsilon: '\\\\varepsilon',\n    Zeta: 'Z',\n    zeta: '\\\\zeta',\n    Eta: 'H',\n    eta: '\\\\eta',\n    Theta: '\\\\Theta',\n    theta: '\\\\theta',\n    vartheta: '\\\\vartheta',\n    Iota: 'I',\n    iota: '\\\\iota',\n    Kappa: 'K',\n    kappa: '\\\\kappa',\n    varkappa: '\\\\varkappa',\n    Lambda: '\\\\Lambda',\n    lambda: '\\\\lambda',\n    Mu: 'M',\n    mu: '\\\\mu',\n    Nu: 'N',\n    nu: '\\\\nu',\n    Xi: '\\\\Xi',\n    xi: '\\\\xi',\n    Omicron: 'O',\n    omicron: 'o',\n    Pi: '\\\\Pi',\n    pi: '\\\\pi',\n    varpi: '\\\\varpi',\n    Rho: 'P',\n    rho: '\\\\rho',\n    varrho: '\\\\varrho',\n    Sigma: '\\\\Sigma',\n    sigma: '\\\\sigma',\n    varsigma: '\\\\varsigma',\n    Tau: 'T',\n    tau: '\\\\tau',\n    Upsilon: \"\\\\Upsilon\",\n    upsilon: \"\\\\upsilon\",\n    Phi: '\\\\Phi',\n    phi: '\\\\phi',\n    varphi: '\\\\varphi',\n    Chi: 'X',\n    chi: '\\\\chi',\n    Psi: '\\\\Psi',\n    psi: '\\\\psi',\n    Omega: '\\\\Omega',\n    omega: '\\\\omega',\n    // logic\n    'true': '\\\\mathrm{True}',\n    'false': '\\\\mathrm{False}',\n    // other\n    i: 'i',\n    // TODO use \\i ??\n    inf: '\\\\infty',\n    Inf: '\\\\infty',\n    infinity: '\\\\infty',\n    Infinity: '\\\\infty',\n    oo: '\\\\infty',\n    lim: '\\\\lim',\n    'undefined': '\\\\mathbf{?}'\n  };\n  exports.operators = {\n    'transpose': '^\\\\top',\n    'ctranspose': '^H',\n    'factorial': '!',\n    'pow': '^',\n    'dotPow': '.^\\\\wedge',\n    // TODO find ideal solution\n    'unaryPlus': '+',\n    'unaryMinus': '-',\n    'bitNot': '\\\\~',\n    // TODO find ideal solution\n    'not': '\\\\neg',\n    'multiply': '\\\\cdot',\n    'divide': '\\\\frac',\n    // TODO how to handle that properly?\n    'dotMultiply': '.\\\\cdot',\n    // TODO find ideal solution\n    'dotDivide': '.:',\n    // TODO find ideal solution\n    'mod': '\\\\mod',\n    'add': '+',\n    'subtract': '-',\n    'to': '\\\\rightarrow',\n    'leftShift': '<<',\n    'rightArithShift': '>>',\n    'rightLogShift': '>>>',\n    'equal': '=',\n    'unequal': '\\\\neq',\n    'smaller': '<',\n    'larger': '>',\n    'smallerEq': '\\\\leq',\n    'largerEq': '\\\\geq',\n    'bitAnd': '\\\\&',\n    'bitXor': \"\\\\underline{|}\",\n    'bitOr': '|',\n    'and': '\\\\wedge',\n    'xor': '\\\\veebar',\n    'or': '\\\\vee'\n  };\n  exports.defaultTemplate = \"\\\\mathrm{${name}}\\\\left(${args}\\\\right)\";\n  var units = {\n    deg: '^\\\\circ'\n  };\n\n  exports.escape = function (string) {\n    return dist(string, {\n      'preserveFormatting': true\n    });\n  }; // @param {string} name\n  // @param {boolean} isUnit\n\n\n  exports.toSymbol = function (name, isUnit) {\n    isUnit = typeof isUnit === 'undefined' ? false : isUnit;\n\n    if (isUnit) {\n      if (units.hasOwnProperty(name)) {\n        return units[name];\n      }\n\n      return '\\\\mathrm{' + exports.escape(name) + '}';\n    }\n\n    if (exports.symbols.hasOwnProperty(name)) {\n      return exports.symbols[name];\n    }\n\n    return exports.escape(name);\n  };\n  });\n  var latex_1 = latex.symbols;\n  var latex_2 = latex.operators;\n  var latex_3 = latex.defaultTemplate;\n  var latex_4 = latex.escape;\n  var latex_5 = latex.toSymbol;\n\n  var format = string.format;\n\n  var escapeLatex = latex.escape;\n\n  function factory$i(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var getType = load(_typeof$3);\n    /**\n     * A ConstantNode holds a constant value like a number or string.\n     *\n     * Usage:\n     *\n     *     new ConstantNode(2.3)\n     *     new ConstantNode('hello')\n     *\n     * @param {*} value    Value can be any type (number, BigNumber, string, ...)\n     * @constructor ConstantNode\n     * @extends {Node}\n     */\n\n    function ConstantNode(value) {\n      if (!(this instanceof ConstantNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (arguments.length === 2) {\n        // TODO: remove deprecation error some day (created 2018-01-23)\n        throw new SyntaxError('new ConstantNode(valueStr, valueType) is not supported anymore since math v4.0.0. Use new ConstantNode(value) instead, where value is a non-stringified value.');\n      }\n\n      this.value = value;\n    }\n\n    ConstantNode.prototype = new Node$1();\n    ConstantNode.prototype.type = 'ConstantNode';\n    ConstantNode.prototype.isConstantNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ConstantNode.prototype._compile = function (math, argNames) {\n      var value = this.value;\n      return function evalConstantNode() {\n        return value;\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ConstantNode.prototype.forEach = function (callback) {} // nothing to do, we don't have childs\n\n    /**\n     * Create a new ConstantNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node) : Node} callback\n     * @returns {ConstantNode} Returns a clone of the node\n     */\n    ;\n\n    ConstantNode.prototype.map = function (callback) {\n      return this.clone();\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ConstantNode}\n     */\n\n\n    ConstantNode.prototype.clone = function () {\n      return new ConstantNode(this.value);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConstantNode.prototype._toString = function (options) {\n      return format(this.value, options);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConstantNode.prototype.toHTML = function (options) {\n      var value = this._toString(options);\n\n      switch (getType(this.value)) {\n        case 'number':\n        case 'BigNumber':\n        case 'Fraction':\n          return '<span class=\"math-number\">' + value + '</span>';\n\n        case 'string':\n          return '<span class=\"math-string\">' + value + '</span>';\n\n        case 'boolean':\n          return '<span class=\"math-boolean\">' + value + '</span>';\n\n        case 'null':\n          return '<span class=\"math-null-symbol\">' + value + '</span>';\n\n        case 'undefined':\n          return '<span class=\"math-undefined\">' + value + '</span>';\n\n        default:\n          return '<span class=\"math-symbol\">' + value + '</span>';\n      }\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ConstantNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ConstantNode',\n        value: this.value\n      };\n    };\n    /**\n     * Instantiate a ConstantNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"SymbolNode\", value: 2.3}`,\n     *                       where mathjs is optional\n     * @returns {ConstantNode}\n     */\n\n\n    ConstantNode.fromJSON = function (json) {\n      return new ConstantNode(json.value);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConstantNode.prototype._toTex = function (options) {\n      var value = this._toString(options);\n\n      switch (getType(this.value)) {\n        case 'string':\n          return '\\\\mathtt{' + escapeLatex(value) + '}';\n\n        case 'number':\n        case 'BigNumber':\n          var index = value.toLowerCase().indexOf('e');\n\n          if (index !== -1) {\n            return value.substring(0, index) + '\\\\cdot10^{' + value.substring(index + 1) + '}';\n          }\n\n          return value;\n\n        case 'Fraction':\n          return this.value.toLatex();\n\n        default:\n          return value;\n      }\n    };\n\n    return ConstantNode;\n  }\n\n  var name$g = 'ConstantNode';\n  var path$8 = 'expression.node';\n  var factory_1$i = factory$i;\n\n  var ConstantNode = {\n  \tname: name$g,\n  \tpath: path$8,\n  \tfactory: factory_1$i\n  };\n\n  var escape = string.escape;\n\n  var forEach$1 = array.forEach;\n\n  var join = array.join;\n\n\n\n\n\n  var setSafeProperty$4 = customs.setSafeProperty;\n\n  function factory$j(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor FunctionAssignmentNode\n     * @extends {Node}\n     * Function assignment\n     *\n     * @param {string} name           Function name\n     * @param {string[] | Array.<{name: string, type: string}>} params\n     *                                Array with function parameter names, or an\n     *                                array with objects containing the name\n     *                                and type of the parameter\n     * @param {Node} expr             The function expression\n     */\n\n    function FunctionAssignmentNode(name, params, expr) {\n      if (!(this instanceof FunctionAssignmentNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input\n\n\n      if (typeof name !== 'string') throw new TypeError('String expected for parameter \"name\"');\n      if (!Array.isArray(params)) throw new TypeError('Array containing strings or objects expected for parameter \"params\"');\n      if (!type.isNode(expr)) throw new TypeError('Node expected for parameter \"expr\"');\n      if (name in keywords) throw new Error('Illegal function name, \"' + name + '\" is a reserved keyword');\n      this.name = name;\n      this.params = params.map(function (param) {\n        return param && param.name || param;\n      });\n      this.types = params.map(function (param) {\n        return param && param.type || 'any';\n      });\n      this.expr = expr;\n    }\n\n    FunctionAssignmentNode.prototype = new Node$1();\n    FunctionAssignmentNode.prototype.type = 'FunctionAssignmentNode';\n    FunctionAssignmentNode.prototype.isFunctionAssignmentNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    FunctionAssignmentNode.prototype._compile = function (math, argNames) {\n      var childArgNames = Object.create(argNames);\n      forEach$1(this.params, function (param) {\n        childArgNames[param] = true;\n      }); // compile the function expression with the child args\n\n      var evalExpr = this.expr._compile(math, childArgNames);\n\n      var name = this.name;\n      var params = this.params;\n      var signature = join(this.types, ',');\n      var syntax = name + '(' + join(this.params, ', ') + ')';\n      return function evalFunctionAssignmentNode(scope, args, context) {\n        var signatures = {};\n\n        signatures[signature] = function () {\n          var childArgs = Object.create(args);\n\n          for (var i = 0; i < params.length; i++) {\n            childArgs[params[i]] = arguments[i];\n          }\n\n          return evalExpr(scope, childArgs, context);\n        };\n\n        var fn = typed(name, signatures);\n        fn.syntax = syntax;\n        setSafeProperty$4(scope, name, fn);\n        return fn;\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    FunctionAssignmentNode.prototype.forEach = function (callback) {\n      callback(this.expr, 'expr', this);\n    };\n    /**\n     * Create a new FunctionAssignmentNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {FunctionAssignmentNode} Returns a transformed copy of the node\n     */\n\n\n    FunctionAssignmentNode.prototype.map = function (callback) {\n      var expr = this._ifNode(callback(this.expr, 'expr', this));\n\n      return new FunctionAssignmentNode(this.name, this.params.slice(0), expr);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {FunctionAssignmentNode}\n     */\n\n\n    FunctionAssignmentNode.prototype.clone = function () {\n      return new FunctionAssignmentNode(this.name, this.params.slice(0), this.expr);\n    };\n    /**\n     * Is parenthesis needed?\n     * @param {Node} node\n     * @param {Object} parenthesis\n     * @private\n     */\n\n\n    function needParenthesis(node, parenthesis) {\n      var precedence = operators.getPrecedence(node, parenthesis);\n      var exprPrecedence = operators.getPrecedence(node.expr, parenthesis);\n      return parenthesis === 'all' || exprPrecedence !== null && exprPrecedence <= precedence;\n    }\n    /**\n     * get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionAssignmentNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var expr = this.expr.toString(options);\n\n      if (needParenthesis(this, parenthesis)) {\n        expr = '(' + expr + ')';\n      }\n\n      return this.name + '(' + this.params.join(', ') + ') = ' + expr;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    FunctionAssignmentNode.prototype.toJSON = function () {\n      var types = this.types;\n      return {\n        mathjs: 'FunctionAssignmentNode',\n        name: this.name,\n        params: this.params.map(function (param, index) {\n          return {\n            name: param,\n            type: types[index]\n          };\n        }),\n        expr: this.expr\n      };\n    };\n    /**\n     * Instantiate an FunctionAssignmentNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"FunctionAssignmentNode\", name: ..., params: ..., expr: ...}`,\n     *                       where mathjs is optional\n     * @returns {FunctionAssignmentNode}\n     */\n\n\n    FunctionAssignmentNode.fromJSON = function (json) {\n      return new FunctionAssignmentNode(json.name, json.params, json.expr);\n    };\n    /**\n     * get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionAssignmentNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var params = [];\n\n      for (var i = 0; i < this.params.length; i++) {\n        params.push('<span class=\"math-symbol math-parameter\">' + escape(this.params[i]) + '</span>');\n      }\n\n      var expr = this.expr.toHTML(options);\n\n      if (needParenthesis(this, parenthesis)) {\n        expr = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + expr + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      return '<span class=\"math-function\">' + escape(this.name) + '</span>' + '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + params.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-round-parenthesis\">)</span><span class=\"math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator\">=</span>' + expr;\n    };\n    /**\n     * get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionAssignmentNode.prototype._toTex = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var expr = this.expr.toTex(options);\n\n      if (needParenthesis(this, parenthesis)) {\n        expr = \"\\\\left(\".concat(expr, \"\\\\right)\");\n      }\n\n      return '\\\\mathrm{' + this.name + '}\\\\left(' + this.params.map(latex.toSymbol).join(',') + '\\\\right):=' + expr;\n    };\n\n    return FunctionAssignmentNode;\n  }\n\n  var name$h = 'FunctionAssignmentNode';\n  var path$9 = 'expression.node';\n  var factory_1$j = factory$j;\n\n  var FunctionAssignmentNode = {\n  \tname: name$h,\n  \tpath: path$9,\n  \tfactory: factory_1$j\n  };\n\n  function factory$k(type, config, load, typed) {\n    /**\n     * Create a range. A range has a start, step, and end, and contains functions\n     * to iterate over the range.\n     *\n     * A range can be constructed as:\n     *\n     *     const range = new Range(start, end)\n     *     const range = new Range(start, end, step)\n     *\n     * To get the result of the range:\n     *     range.forEach(function (x) {\n     *         console.log(x)\n     *     })\n     *     range.map(function (x) {\n     *         return math.sin(x)\n     *     })\n     *     range.toArray()\n     *\n     * Example usage:\n     *\n     *     const c = new Range(2, 6)       // 2:1:5\n     *     c.toArray()                     // [2, 3, 4, 5]\n     *     const d = new Range(2, -3, -1)  // 2:-1:-2\n     *     d.toArray()                     // [2, 1, 0, -1, -2]\n     *\n     * @class Range\n     * @constructor Range\n     * @param {number} start  included lower bound\n     * @param {number} end    excluded upper bound\n     * @param {number} [step] step size, default value is 1\n     */\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      var hasStart = start !== null && start !== undefined;\n      var hasEnd = end !== null && end !== undefined;\n      var hasStep = step !== null && step !== undefined;\n\n      if (hasStart) {\n        if (type.isBigNumber(start)) {\n          start = start.toNumber();\n        } else if (typeof start !== 'number') {\n          throw new TypeError('Parameter start must be a number');\n        }\n      }\n\n      if (hasEnd) {\n        if (type.isBigNumber(end)) {\n          end = end.toNumber();\n        } else if (typeof end !== 'number') {\n          throw new TypeError('Parameter end must be a number');\n        }\n      }\n\n      if (hasStep) {\n        if (type.isBigNumber(step)) {\n          step = step.toNumber();\n        } else if (typeof step !== 'number') {\n          throw new TypeError('Parameter step must be a number');\n        }\n      }\n\n      this.start = hasStart ? parseFloat(start) : 0;\n      this.end = hasEnd ? parseFloat(end) : 0;\n      this.step = hasStep ? parseFloat(step) : 1;\n    }\n    /**\n     * Attach type information\n     */\n\n\n    Range.prototype.type = 'Range';\n    Range.prototype.isRange = true;\n    /**\n     * Parse a string into a range,\n     * The string contains the start, optional step, and end, separated by a colon.\n     * If the string does not contain a valid range, null is returned.\n     * For example str='0:2:11'.\n     * @memberof Range\n     * @param {string} str\n     * @return {Range | null} range\n     */\n\n    Range.parse = function (str) {\n      if (typeof str !== 'string') {\n        return null;\n      }\n\n      var args = str.split(':');\n      var nums = args.map(function (arg) {\n        return parseFloat(arg);\n      });\n      var invalid = nums.some(function (num) {\n        return isNaN(num);\n      });\n\n      if (invalid) {\n        return null;\n      }\n\n      switch (nums.length) {\n        case 2:\n          return new Range(nums[0], nums[1]);\n\n        case 3:\n          return new Range(nums[0], nums[2], nums[1]);\n\n        default:\n          return null;\n      }\n    };\n    /**\n     * Create a clone of the range\n     * @return {Range} clone\n     */\n\n\n    Range.prototype.clone = function () {\n      return new Range(this.start, this.end, this.step);\n    };\n    /**\n     * Retrieve the size of the range.\n     * Returns an array containing one number, the number of elements in the range.\n     * @memberof Range\n     * @returns {number[]} size\n     */\n\n\n    Range.prototype.size = function () {\n      var len = 0;\n      var start = this.start;\n      var step = this.step;\n      var end = this.end;\n      var diff = end - start;\n\n      if (number.sign(step) === number.sign(diff)) {\n        len = Math.ceil(diff / step);\n      } else if (diff === 0) {\n        len = 0;\n      }\n\n      if (isNaN(len)) {\n        len = 0;\n      }\n\n      return [len];\n    };\n    /**\n     * Calculate the minimum value in the range\n     * @memberof Range\n     * @return {number | undefined} min\n     */\n\n\n    Range.prototype.min = function () {\n      var size = this.size()[0];\n\n      if (size > 0) {\n        if (this.step > 0) {\n          // positive step\n          return this.start;\n        } else {\n          // negative step\n          return this.start + (size - 1) * this.step;\n        }\n      } else {\n        return undefined;\n      }\n    };\n    /**\n     * Calculate the maximum value in the range\n     * @memberof Range\n     * @return {number | undefined} max\n     */\n\n\n    Range.prototype.max = function () {\n      var size = this.size()[0];\n\n      if (size > 0) {\n        if (this.step > 0) {\n          // positive step\n          return this.start + (size - 1) * this.step;\n        } else {\n          // negative step\n          return this.start;\n        }\n      } else {\n        return undefined;\n      }\n    };\n    /**\n     * Execute a callback function for each value in the range.\n     * @memberof Range\n     * @param {function} callback   The callback method is invoked with three\n     *                              parameters: the value of the element, the index\n     *                              of the element, and the Range being traversed.\n     */\n\n\n    Range.prototype.forEach = function (callback) {\n      var x = this.start;\n      var step = this.step;\n      var end = this.end;\n      var i = 0;\n\n      if (step > 0) {\n        while (x < end) {\n          callback(x, [i], this);\n          x += step;\n          i++;\n        }\n      } else if (step < 0) {\n        while (x > end) {\n          callback(x, [i], this);\n          x += step;\n          i++;\n        }\n      }\n    };\n    /**\n     * Execute a callback function for each value in the Range, and return the\n     * results as an array\n     * @memberof Range\n     * @param {function} callback   The callback method is invoked with three\n     *                              parameters: the value of the element, the index\n     *                              of the element, and the Matrix being traversed.\n     * @returns {Array} array\n     */\n\n\n    Range.prototype.map = function (callback) {\n      var array = [];\n      this.forEach(function (value, index, obj) {\n        array[index[0]] = callback(value, index, obj);\n      });\n      return array;\n    };\n    /**\n     * Create an Array with a copy of the Ranges data\n     * @memberof Range\n     * @returns {Array} array\n     */\n\n\n    Range.prototype.toArray = function () {\n      var array = [];\n      this.forEach(function (value, index) {\n        array[index[0]] = value;\n      });\n      return array;\n    };\n    /**\n     * Get the primitive value of the Range, a one dimensional array\n     * @memberof Range\n     * @returns {Array} array\n     */\n\n\n    Range.prototype.valueOf = function () {\n      // TODO: implement a caching mechanism for range.valueOf()\n      return this.toArray();\n    };\n    /**\n     * Get a string representation of the range, with optional formatting options.\n     * Output is formatted as 'start:step:end', for example '2:6' or '0:0.2:11'\n     * @memberof Range\n     * @param {Object | number | function} [options]  Formatting options. See\n     *                                                lib/utils/number:format for a\n     *                                                description of the available\n     *                                                options.\n     * @returns {string} str\n     */\n\n\n    Range.prototype.format = function (options) {\n      var str = number.format(this.start, options);\n\n      if (this.step !== 1) {\n        str += ':' + number.format(this.step, options);\n      }\n\n      str += ':' + number.format(this.end, options);\n      return str;\n    };\n    /**\n     * Get a string representation of the range.\n     * @memberof Range\n     * @returns {string}\n     */\n\n\n    Range.prototype.toString = function () {\n      return this.format();\n    };\n    /**\n     * Get a JSON representation of the range\n     * @memberof Range\n     * @returns {Object} Returns a JSON object structured as:\n     *                   `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n     */\n\n\n    Range.prototype.toJSON = function () {\n      return {\n        mathjs: 'Range',\n        start: this.start,\n        end: this.end,\n        step: this.step\n      };\n    };\n    /**\n     * Instantiate a Range from a JSON object\n     * @memberof Range\n     * @param {Object} json A JSON object structured as:\n     *                      `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n     * @return {Range}\n     */\n\n\n    Range.fromJSON = function (json) {\n      return new Range(json.start, json.end, json.step);\n    };\n\n    return Range;\n  }\n\n  var name$i = 'Range';\n  var path$a = 'type';\n  var factory_1$k = factory$k;\n\n  var Range = {\n  \tname: name$i,\n  \tpath: path$a,\n  \tfactory: factory_1$k\n  };\n\n  var map$2 = array.map;\n\n  var escape$1 = string.escape;\n\n  function factory$l(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var Range$1 = load(Range);\n    var isArray = Array.isArray;\n    /**\n     * @constructor IndexNode\n     * @extends Node\n     *\n     * Describes a subset of a matrix or an object property.\n     * Cannot be used on its own, needs to be used within an AccessorNode or\n     * AssignmentNode.\n     *\n     * @param {Node[]} dimensions\n     * @param {boolean} [dotNotation=false]  Optional property describing whether\n     *                                       this index was written using dot\n     *                                       notation like `a.b`, or using bracket\n     *                                       notation like `a[\"b\"]` (default).\n     *                                       Used to stringify an IndexNode.\n     */\n\n    function IndexNode(dimensions, dotNotation) {\n      if (!(this instanceof IndexNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.dimensions = dimensions;\n      this.dotNotation = dotNotation || false; // validate input\n\n      if (!isArray(dimensions) || !dimensions.every(type.isNode)) {\n        throw new TypeError('Array containing Nodes expected for parameter \"dimensions\"');\n      }\n\n      if (this.dotNotation && !this.isObjectProperty()) {\n        throw new Error('dotNotation only applicable for object properties');\n      } // TODO: deprecated since v3, remove some day\n\n\n      var deprecated = function deprecated() {\n        throw new Error('Property `IndexNode.object` is deprecated, use `IndexNode.fn` instead');\n      };\n\n      Object.defineProperty(this, 'object', {\n        get: deprecated,\n        set: deprecated\n      });\n    }\n\n    IndexNode.prototype = new Node$1();\n    IndexNode.prototype.type = 'IndexNode';\n    IndexNode.prototype.isIndexNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    IndexNode.prototype._compile = function (math, argNames) {\n      // TODO: implement support for bignumber (currently bignumbers are silently\n      //       reduced to numbers when changing the value to zero-based)\n      // TODO: Optimization: when the range values are ConstantNodes,\n      //       we can beforehand resolve the zero-based value\n      // optimization for a simple object property\n      var evalDimensions = map$2(this.dimensions, function (range, i) {\n        if (type.isRangeNode(range)) {\n          if (range.needsEnd()) {\n            // create a range containing end (like '4:end')\n            var childArgNames = Object.create(argNames);\n            childArgNames['end'] = true;\n\n            var evalStart = range.start._compile(math, childArgNames);\n\n            var evalEnd = range.end._compile(math, childArgNames);\n\n            var evalStep = range.step ? range.step._compile(math, childArgNames) : function () {\n              return 1;\n            };\n            return function evalDimension(scope, args, context) {\n              var size = math.size(context).valueOf();\n              var childArgs = Object.create(args);\n              childArgs['end'] = size[i];\n              return createRange(evalStart(scope, childArgs, context), evalEnd(scope, childArgs, context), evalStep(scope, childArgs, context));\n            };\n          } else {\n            // create range\n            var _evalStart = range.start._compile(math, argNames);\n\n            var _evalEnd = range.end._compile(math, argNames);\n\n            var _evalStep = range.step ? range.step._compile(math, argNames) : function () {\n              return 1;\n            };\n\n            return function evalDimension(scope, args, context) {\n              return createRange(_evalStart(scope, args, context), _evalEnd(scope, args, context), _evalStep(scope, args, context));\n            };\n          }\n        } else if (type.isSymbolNode(range) && range.name === 'end') {\n          // SymbolNode 'end'\n          var _childArgNames = Object.create(argNames);\n\n          _childArgNames['end'] = true;\n\n          var evalRange = range._compile(math, _childArgNames);\n\n          return function evalDimension(scope, args, context) {\n            var size = math.size(context).valueOf();\n            var childArgs = Object.create(args);\n            childArgs['end'] = size[i];\n            return evalRange(scope, childArgs, context);\n          };\n        } else {\n          // ConstantNode\n          var _evalRange = range._compile(math, argNames);\n\n          return function evalDimension(scope, args, context) {\n            return _evalRange(scope, args, context);\n          };\n        }\n      });\n      return function evalIndexNode(scope, args, context) {\n        var dimensions = map$2(evalDimensions, function (evalDimension) {\n          return evalDimension(scope, args, context);\n        });\n        return math.index.apply(math, dimensions);\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    IndexNode.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.dimensions.length; i++) {\n        callback(this.dimensions[i], 'dimensions[' + i + ']', this);\n      }\n    };\n    /**\n     * Create a new IndexNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {IndexNode} Returns a transformed copy of the node\n     */\n\n\n    IndexNode.prototype.map = function (callback) {\n      var dimensions = [];\n\n      for (var i = 0; i < this.dimensions.length; i++) {\n        dimensions[i] = this._ifNode(callback(this.dimensions[i], 'dimensions[' + i + ']', this));\n      }\n\n      return new IndexNode(dimensions);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {IndexNode}\n     */\n\n\n    IndexNode.prototype.clone = function () {\n      return new IndexNode(this.dimensions.slice(0));\n    };\n    /**\n     * Test whether this IndexNode contains a single property name\n     * @return {boolean}\n     */\n\n\n    IndexNode.prototype.isObjectProperty = function () {\n      return this.dimensions.length === 1 && type.isConstantNode(this.dimensions[0]) && typeof this.dimensions[0].value === 'string';\n    };\n    /**\n     * Returns the property name if IndexNode contains a property.\n     * If not, returns null.\n     * @return {string | null}\n     */\n\n\n    IndexNode.prototype.getObjectProperty = function () {\n      return this.isObjectProperty() ? this.dimensions[0].value : null;\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    IndexNode.prototype._toString = function (options) {\n      // format the parameters like \"[1, 0:5]\"\n      return this.dotNotation ? '.' + this.getObjectProperty() : '[' + this.dimensions.join(', ') + ']';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    IndexNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'IndexNode',\n        dimensions: this.dimensions,\n        dotNotation: this.dotNotation\n      };\n    };\n    /**\n     * Instantiate an IndexNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"IndexNode\", dimensions: [...], dotNotation: false}`,\n     *                       where mathjs is optional\n     * @returns {IndexNode}\n     */\n\n\n    IndexNode.fromJSON = function (json) {\n      return new IndexNode(json.dimensions, json.dotNotation);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    IndexNode.prototype.toHTML = function (options) {\n      // format the parameters like \"[1, 0:5]\"\n      var dimensions = [];\n\n      for (var i = 0; i < this.dimensions.length; i++) {\n        dimensions[i] = this.dimensions[i].toHTML();\n      }\n\n      if (this.dotNotation) {\n        return '<span class=\"math-operator math-accessor-operator\">.</span>' + '<span class=\"math-symbol math-property\">' + escape$1(this.getObjectProperty()) + '</span>';\n      } else {\n        return '<span class=\"math-parenthesis math-square-parenthesis\">[</span>' + dimensions.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-square-parenthesis\">]</span>';\n      }\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    IndexNode.prototype._toTex = function (options) {\n      var dimensions = this.dimensions.map(function (range) {\n        return range.toTex(options);\n      });\n      return this.dotNotation ? '.' + this.getObjectProperty() + '' : '_{' + dimensions.join(',') + '}';\n    }; // helper function to create a Range from start, step and end\n\n\n    function createRange(start, end, step) {\n      return new Range$1(type.isBigNumber(start) ? start.toNumber() : start, type.isBigNumber(end) ? end.toNumber() : end, type.isBigNumber(step) ? step.toNumber() : step);\n    }\n\n    return IndexNode;\n  }\n\n  var name$j = 'IndexNode';\n  var path$b = 'expression.node';\n  var factory_1$l = factory$l;\n\n  var IndexNode = {\n  \tname: name$j,\n  \tpath: path$b,\n  \tfactory: factory_1$l\n  };\n\n  function _typeof$8(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$8 = function _typeof(obj) { return typeof obj; }; } else { _typeof$8 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$8(obj); }\n\n  var stringify = string.stringify;\n\n  var escape$2 = string.escape;\n\n  var isSafeProperty$1 = customs.isSafeProperty;\n\n  var hasOwnProperty$2 = object.hasOwnProperty;\n\n  function factory$m(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor ObjectNode\n     * @extends {Node}\n     * Holds an object with keys/values\n     * @param {Object.<string, Node>} [properties]   object with key/value pairs\n     */\n\n    function ObjectNode(properties) {\n      if (!(this instanceof ObjectNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.properties = properties || {}; // validate input\n\n      if (properties) {\n        if (!(_typeof$8(properties) === 'object') || !Object.keys(properties).every(function (key) {\n          return type.isNode(properties[key]);\n        })) {\n          throw new TypeError('Object containing Nodes expected');\n        }\n      }\n    }\n\n    ObjectNode.prototype = new Node$1();\n    ObjectNode.prototype.type = 'ObjectNode';\n    ObjectNode.prototype.isObjectNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ObjectNode.prototype._compile = function (math, argNames) {\n      var evalEntries = {};\n\n      for (var key in this.properties) {\n        if (hasOwnProperty$2(this.properties, key)) {\n          // we stringify/parse the key here to resolve unicode characters,\n          // so you cannot create a key like {\"co\\\\u006Estructor\": null}\n          var stringifiedKey = stringify(key);\n          var parsedKey = JSON.parse(stringifiedKey);\n\n          if (!isSafeProperty$1(this.properties, parsedKey)) {\n            throw new Error('No access to property \"' + parsedKey + '\"');\n          }\n\n          evalEntries[parsedKey] = this.properties[key]._compile(math, argNames);\n        }\n      }\n\n      return function evalObjectNode(scope, args, context) {\n        var obj = {};\n\n        for (var _key in evalEntries) {\n          if (hasOwnProperty$2(evalEntries, _key)) {\n            obj[_key] = evalEntries[_key](scope, args, context);\n          }\n        }\n\n        return obj;\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ObjectNode.prototype.forEach = function (callback) {\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          callback(this.properties[key], 'properties[' + stringify(key) + ']', this);\n        }\n      }\n    };\n    /**\n     * Create a new ObjectNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {ObjectNode} Returns a transformed copy of the node\n     */\n\n\n    ObjectNode.prototype.map = function (callback) {\n      var properties = {};\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          properties[key] = this._ifNode(callback(this.properties[key], 'properties[' + stringify(key) + ']', this));\n        }\n      }\n\n      return new ObjectNode(properties);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ObjectNode}\n     */\n\n\n    ObjectNode.prototype.clone = function () {\n      var properties = {};\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          properties[key] = this.properties[key];\n        }\n      }\n\n      return new ObjectNode(properties);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ObjectNode.prototype._toString = function (options) {\n      var entries = [];\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          entries.push(stringify(key) + ': ' + this.properties[key].toString(options));\n        }\n      }\n\n      return '{' + entries.join(', ') + '}';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ObjectNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ObjectNode',\n        properties: this.properties\n      };\n    };\n    /**\n     * Instantiate an OperatorNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"ObjectNode\", \"properties\": {...}}`,\n     *                       where mathjs is optional\n     * @returns {ObjectNode}\n     */\n\n\n    ObjectNode.fromJSON = function (json) {\n      return new ObjectNode(json.properties);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ObjectNode.prototype.toHTML = function (options) {\n      var entries = [];\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          entries.push('<span class=\"math-symbol math-property\">' + escape$2(key) + '</span>' + '<span class=\"math-operator math-assignment-operator math-property-assignment-operator math-binary-operator\">:</span>' + this.properties[key].toHTML(options));\n        }\n      }\n\n      return '<span class=\"math-parenthesis math-curly-parenthesis\">{</span>' + entries.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-curly-parenthesis\">}</span>';\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ObjectNode.prototype._toTex = function (options) {\n      var entries = [];\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          entries.push('\\\\mathbf{' + key + ':} & ' + this.properties[key].toTex(options) + '\\\\\\\\');\n        }\n      }\n\n      return \"\\\\left\\\\{\\\\begin{array}{ll}\".concat(entries.join('\\n'), \"\\\\end{array}\\\\right\\\\}\");\n    };\n\n    return ObjectNode;\n  }\n\n  var name$k = 'ObjectNode';\n  var path$c = 'expression.node';\n  var factory_1$m = factory$m;\n\n  var ObjectNode = {\n  \tname: name$k,\n  \tpath: path$c,\n  \tfactory: factory_1$m\n  };\n\n  var map$3 = array.map;\n\n  var escape$3 = string.escape;\n\n  var isSafeMethod$1 = customs.isSafeMethod;\n\n  var getSafeProperty$5 = customs.getSafeProperty;\n\n\n\n  function factory$n(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor OperatorNode\n     * @extends {Node}\n     * An operator with two arguments, like 2+3\n     *\n     * @param {string} op           Operator name, for example '+'\n     * @param {string} fn           Function name, for example 'add'\n     * @param {Node[]} args         Operator arguments\n     * @param {boolean} [implicit]  Is this an implicit multiplication?\n     */\n\n    function OperatorNode(op, fn, args, implicit) {\n      if (!(this instanceof OperatorNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input\n\n\n      if (typeof op !== 'string') {\n        throw new TypeError('string expected for parameter \"op\"');\n      }\n\n      if (typeof fn !== 'string') {\n        throw new TypeError('string expected for parameter \"fn\"');\n      }\n\n      if (!Array.isArray(args) || !args.every(type.isNode)) {\n        throw new TypeError('Array containing Nodes expected for parameter \"args\"');\n      }\n\n      this.implicit = implicit === true;\n      this.op = op;\n      this.fn = fn;\n      this.args = args || [];\n    }\n\n    OperatorNode.prototype = new Node$1();\n    OperatorNode.prototype.type = 'OperatorNode';\n    OperatorNode.prototype.isOperatorNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    OperatorNode.prototype._compile = function (math, argNames) {\n      // validate fn\n      if (typeof this.fn !== 'string' || !isSafeMethod$1(math, this.fn)) {\n        if (!math[this.fn]) {\n          throw new Error('Function ' + this.fn + ' missing in provided namespace \"math\"');\n        } else {\n          throw new Error('No access to function \"' + this.fn + '\"');\n        }\n      }\n\n      var fn = getSafeProperty$5(math, this.fn);\n      var evalArgs = map$3(this.args, function (arg) {\n        return arg._compile(math, argNames);\n      });\n\n      if (evalArgs.length === 1) {\n        var evalArg0 = evalArgs[0];\n        return function evalOperatorNode(scope, args, context) {\n          return fn(evalArg0(scope, args, context));\n        };\n      } else if (evalArgs.length === 2) {\n        var _evalArg = evalArgs[0];\n        var evalArg1 = evalArgs[1];\n        return function evalOperatorNode(scope, args, context) {\n          return fn(_evalArg(scope, args, context), evalArg1(scope, args, context));\n        };\n      } else {\n        return function evalOperatorNode(scope, args, context) {\n          return fn.apply(null, map$3(evalArgs, function (evalArg) {\n            return evalArg(scope, args, context);\n          }));\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    OperatorNode.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.args.length; i++) {\n        callback(this.args[i], 'args[' + i + ']', this);\n      }\n    };\n    /**\n     * Create a new OperatorNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {OperatorNode} Returns a transformed copy of the node\n     */\n\n\n    OperatorNode.prototype.map = function (callback) {\n      var args = [];\n\n      for (var i = 0; i < this.args.length; i++) {\n        args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));\n      }\n\n      return new OperatorNode(this.op, this.fn, args, this.implicit);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {OperatorNode}\n     */\n\n\n    OperatorNode.prototype.clone = function () {\n      return new OperatorNode(this.op, this.fn, this.args.slice(0), this.implicit);\n    };\n    /**\n     * Check whether this is an unary OperatorNode:\n     * has exactly one argument, like `-a`.\n     * @return {boolean} Returns true when an unary operator node, false otherwise.\n     */\n\n\n    OperatorNode.prototype.isUnary = function () {\n      return this.args.length === 1;\n    };\n    /**\n     * Check whether this is a binary OperatorNode:\n     * has exactly two arguments, like `a + b`.\n     * @return {boolean} Returns true when a binary operator node, false otherwise.\n     */\n\n\n    OperatorNode.prototype.isBinary = function () {\n      return this.args.length === 2;\n    };\n    /**\n     * Calculate which parentheses are necessary. Gets an OperatorNode\n     * (which is the root of the tree) and an Array of Nodes\n     * (this.args) and returns an array where 'true' means that an argument\n     * has to be enclosed in parentheses whereas 'false' means the opposite.\n     *\n     * @param {OperatorNode} root\n     * @param {string} parenthesis\n     * @param {Node[]} args\n     * @param {boolean} latex\n     * @return {boolean[]}\n     * @private\n     */\n\n\n    function calculateNecessaryParentheses(root, parenthesis, implicit, args, latex) {\n      // precedence of the root OperatorNode\n      var precedence = operators.getPrecedence(root, parenthesis);\n      var associativity = operators.getAssociativity(root, parenthesis);\n\n      if (parenthesis === 'all' || args.length > 2 && root.getIdentifier() !== 'OperatorNode:add' && root.getIdentifier() !== 'OperatorNode:multiply') {\n        var parens = args.map(function (arg) {\n          switch (arg.getContent().type) {\n            // Nodes that don't need extra parentheses\n            case 'ArrayNode':\n            case 'ConstantNode':\n            case 'SymbolNode':\n            case 'ParenthesisNode':\n              return false;\n\n            default:\n              return true;\n          }\n        });\n        return parens;\n      }\n\n      var result;\n\n      switch (args.length) {\n        case 0:\n          result = [];\n          break;\n\n        case 1:\n          // unary operators\n          // precedence of the operand\n          var operandPrecedence = operators.getPrecedence(args[0], parenthesis); // handle special cases for LaTeX, where some of the parentheses aren't needed\n\n          if (latex && operandPrecedence !== null) {\n            var operandIdentifier;\n            var rootIdentifier;\n\n            if (parenthesis === 'keep') {\n              operandIdentifier = args[0].getIdentifier();\n              rootIdentifier = root.getIdentifier();\n            } else {\n              // Ignore Parenthesis Nodes when not in 'keep' mode\n              operandIdentifier = args[0].getContent().getIdentifier();\n              rootIdentifier = root.getContent().getIdentifier();\n            }\n\n            if (operators.properties[precedence][rootIdentifier].latexLeftParens === false) {\n              result = [false];\n              break;\n            }\n\n            if (operators.properties[operandPrecedence][operandIdentifier].latexParens === false) {\n              result = [false];\n              break;\n            }\n          }\n\n          if (operandPrecedence === null) {\n            // if the operand has no defined precedence, no parens are needed\n            result = [false];\n            break;\n          }\n\n          if (operandPrecedence <= precedence) {\n            // if the operands precedence is lower, parens are needed\n            result = [true];\n            break;\n          } // otherwise, no parens needed\n\n\n          result = [false];\n          break;\n\n        case 2:\n          // binary operators\n          var lhsParens; // left hand side needs parenthesis?\n          // precedence of the left hand side\n\n          var lhsPrecedence = operators.getPrecedence(args[0], parenthesis); // is the root node associative with the left hand side\n\n          var assocWithLhs = operators.isAssociativeWith(root, args[0], parenthesis);\n\n          if (lhsPrecedence === null) {\n            // if the left hand side has no defined precedence, no parens are needed\n            // FunctionNode for example\n            lhsParens = false;\n          } else if (lhsPrecedence === precedence && associativity === 'right' && !assocWithLhs) {\n            // In case of equal precedence, if the root node is left associative\n            // parens are **never** necessary for the left hand side.\n            // If it is right associative however, parens are necessary\n            // if the root node isn't associative with the left hand side\n            lhsParens = true;\n          } else if (lhsPrecedence < precedence) {\n            lhsParens = true;\n          } else {\n            lhsParens = false;\n          }\n\n          var rhsParens; // right hand side needs parenthesis?\n          // precedence of the right hand side\n\n          var rhsPrecedence = operators.getPrecedence(args[1], parenthesis); // is the root node associative with the right hand side?\n\n          var assocWithRhs = operators.isAssociativeWith(root, args[1], parenthesis);\n\n          if (rhsPrecedence === null) {\n            // if the right hand side has no defined precedence, no parens are needed\n            // FunctionNode for example\n            rhsParens = false;\n          } else if (rhsPrecedence === precedence && associativity === 'left' && !assocWithRhs) {\n            // In case of equal precedence, if the root node is right associative\n            // parens are **never** necessary for the right hand side.\n            // If it is left associative however, parens are necessary\n            // if the root node isn't associative with the right hand side\n            rhsParens = true;\n          } else if (rhsPrecedence < precedence) {\n            rhsParens = true;\n          } else {\n            rhsParens = false;\n          } // handle special cases for LaTeX, where some of the parentheses aren't needed\n\n\n          if (latex) {\n            var _rootIdentifier;\n\n            var lhsIdentifier;\n            var rhsIdentifier;\n\n            if (parenthesis === 'keep') {\n              _rootIdentifier = root.getIdentifier();\n              lhsIdentifier = root.args[0].getIdentifier();\n              rhsIdentifier = root.args[1].getIdentifier();\n            } else {\n              // Ignore ParenthesisNodes when not in 'keep' mode\n              _rootIdentifier = root.getContent().getIdentifier();\n              lhsIdentifier = root.args[0].getContent().getIdentifier();\n              rhsIdentifier = root.args[1].getContent().getIdentifier();\n            }\n\n            if (lhsPrecedence !== null) {\n              if (operators.properties[precedence][_rootIdentifier].latexLeftParens === false) {\n                lhsParens = false;\n              }\n\n              if (operators.properties[lhsPrecedence][lhsIdentifier].latexParens === false) {\n                lhsParens = false;\n              }\n            }\n\n            if (rhsPrecedence !== null) {\n              if (operators.properties[precedence][_rootIdentifier].latexRightParens === false) {\n                rhsParens = false;\n              }\n\n              if (operators.properties[rhsPrecedence][rhsIdentifier].latexParens === false) {\n                rhsParens = false;\n              }\n            }\n          }\n\n          result = [lhsParens, rhsParens];\n          break;\n\n        default:\n          if (root.getIdentifier() === 'OperatorNode:add' || root.getIdentifier() === 'OperatorNode:multiply') {\n            result = args.map(function (arg) {\n              var argPrecedence = operators.getPrecedence(arg, parenthesis);\n              var assocWithArg = operators.isAssociativeWith(root, arg, parenthesis);\n              var argAssociativity = operators.getAssociativity(arg, parenthesis);\n\n              if (argPrecedence === null) {\n                // if the argument has no defined precedence, no parens are needed\n                return false;\n              } else if (precedence === argPrecedence && associativity === argAssociativity && !assocWithArg) {\n                return true;\n              } else if (argPrecedence < precedence) {\n                return true;\n              }\n\n              return false;\n            });\n          }\n\n          break;\n      } // handles an edge case of 'auto' parentheses with implicit multiplication of ConstantNode\n      // In that case print parentheses for ParenthesisNodes even though they normally wouldn't be\n      // printed.\n\n\n      if (args.length >= 2 && root.getIdentifier() === 'OperatorNode:multiply' && root.implicit && parenthesis === 'auto' && implicit === 'hide') {\n        result = args.map(function (arg, index) {\n          var isParenthesisNode = arg.getIdentifier() === 'ParenthesisNode';\n\n          if (result[index] || isParenthesisNode) {\n            // put in parenthesis?\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      return result;\n    }\n    /**\n     * Get string representation.\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    OperatorNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var implicit = options && options.implicit ? options.implicit : 'hide';\n      var args = this.args;\n      var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);\n\n      if (args.length === 1) {\n        // unary operators\n        var assoc = operators.getAssociativity(this, parenthesis);\n        var operand = args[0].toString(options);\n\n        if (parens[0]) {\n          operand = '(' + operand + ')';\n        } // for example for \"not\", we want a space between operand and argument\n\n\n        var opIsNamed = /[a-zA-Z]+/.test(this.op);\n\n        if (assoc === 'right') {\n          // prefix operator\n          return this.op + (opIsNamed ? ' ' : '') + operand;\n        } else if (assoc === 'left') {\n          // postfix\n          return operand + (opIsNamed ? ' ' : '') + this.op;\n        } // fall back to postfix\n\n\n        return operand + this.op;\n      } else if (args.length === 2) {\n        var lhs = args[0].toString(options); // left hand side\n\n        var rhs = args[1].toString(options); // right hand side\n\n        if (parens[0]) {\n          // left hand side in parenthesis?\n          lhs = '(' + lhs + ')';\n        }\n\n        if (parens[1]) {\n          // right hand side in parenthesis?\n          rhs = '(' + rhs + ')';\n        }\n\n        if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n          return lhs + ' ' + rhs;\n        }\n\n        return lhs + ' ' + this.op + ' ' + rhs;\n      } else if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {\n        var stringifiedArgs = args.map(function (arg, index) {\n          arg = arg.toString(options);\n\n          if (parens[index]) {\n            // put in parenthesis?\n            arg = '(' + arg + ')';\n          }\n\n          return arg;\n        });\n\n        if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n          return stringifiedArgs.join(' ');\n        }\n\n        return stringifiedArgs.join(' ' + this.op + ' ');\n      } else {\n        // fallback to formatting as a function call\n        return this.fn + '(' + this.args.join(', ') + ')';\n      }\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    OperatorNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'OperatorNode',\n        op: this.op,\n        fn: this.fn,\n        args: this.args,\n        implicit: this.implicit\n      };\n    };\n    /**\n     * Instantiate an OperatorNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"OperatorNode\", \"op\": \"+\", \"fn\": \"add\", \"args\": [...], \"implicit\": false}`,\n     *                       where mathjs is optional\n     * @returns {OperatorNode}\n     */\n\n\n    OperatorNode.fromJSON = function (json) {\n      return new OperatorNode(json.op, json.fn, json.args, json.implicit);\n    };\n    /**\n     * Get HTML representation.\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    OperatorNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var implicit = options && options.implicit ? options.implicit : 'hide';\n      var args = this.args;\n      var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);\n\n      if (args.length === 1) {\n        // unary operators\n        var assoc = operators.getAssociativity(this, parenthesis);\n        var operand = args[0].toHTML(options);\n\n        if (parens[0]) {\n          operand = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + operand + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n        }\n\n        if (assoc === 'right') {\n          // prefix operator\n          return '<span class=\"math-operator math-unary-operator math-lefthand-unary-operator\">' + escape$3(this.op) + '</span>' + operand;\n        } else {\n          // postfix when assoc === 'left' or undefined\n          return operand + '<span class=\"math-operator math-unary-operator math-righthand-unary-operator\">' + escape$3(this.op) + '</span>';\n        }\n      } else if (args.length === 2) {\n        // binary operatoes\n        var lhs = args[0].toHTML(options); // left hand side\n\n        var rhs = args[1].toHTML(options); // right hand side\n\n        if (parens[0]) {\n          // left hand side in parenthesis?\n          lhs = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + lhs + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n        }\n\n        if (parens[1]) {\n          // right hand side in parenthesis?\n          rhs = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + rhs + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n        }\n\n        if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n          return lhs + '<span class=\"math-operator math-binary-operator math-implicit-binary-operator\"></span>' + rhs;\n        }\n\n        return lhs + '<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">' + escape$3(this.op) + '</span>' + rhs;\n      } else {\n        var stringifiedArgs = args.map(function (arg, index) {\n          arg = arg.toHTML(options);\n\n          if (parens[index]) {\n            // put in parenthesis?\n            arg = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + arg + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n          }\n\n          return arg;\n        });\n\n        if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {\n          if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n            return stringifiedArgs.join('<span class=\"math-operator math-binary-operator math-implicit-binary-operator\"></span>');\n          }\n\n          return stringifiedArgs.join('<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">' + escape$3(this.op) + '</span>');\n        } else {\n          // fallback to formatting as a function call\n          return '<span class=\"math-function\">' + escape$3(this.fn) + '</span><span class=\"math-paranthesis math-round-parenthesis\">(</span>' + stringifiedArgs.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-paranthesis math-round-parenthesis\">)</span>';\n        }\n      }\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    OperatorNode.prototype._toTex = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var implicit = options && options.implicit ? options.implicit : 'hide';\n      var args = this.args;\n      var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, true);\n      var op = latex.operators[this.fn];\n      op = typeof op === 'undefined' ? this.op : op; // fall back to using this.op\n\n      if (args.length === 1) {\n        // unary operators\n        var assoc = operators.getAssociativity(this, parenthesis);\n        var operand = args[0].toTex(options);\n\n        if (parens[0]) {\n          operand = \"\\\\left(\".concat(operand, \"\\\\right)\");\n        }\n\n        if (assoc === 'right') {\n          // prefix operator\n          return op + operand;\n        } else if (assoc === 'left') {\n          // postfix operator\n          return operand + op;\n        } // fall back to postfix\n\n\n        return operand + op;\n      } else if (args.length === 2) {\n        // binary operators\n        var lhs = args[0]; // left hand side\n\n        var lhsTex = lhs.toTex(options);\n\n        if (parens[0]) {\n          lhsTex = \"\\\\left(\".concat(lhsTex, \"\\\\right)\");\n        }\n\n        var rhs = args[1]; // right hand side\n\n        var rhsTex = rhs.toTex(options);\n\n        if (parens[1]) {\n          rhsTex = \"\\\\left(\".concat(rhsTex, \"\\\\right)\");\n        } // handle some exceptions (due to the way LaTeX works)\n\n\n        var lhsIdentifier;\n\n        if (parenthesis === 'keep') {\n          lhsIdentifier = lhs.getIdentifier();\n        } else {\n          // Ignore ParenthesisNodes if in 'keep' mode\n          lhsIdentifier = lhs.getContent().getIdentifier();\n        }\n\n        switch (this.getIdentifier()) {\n          case 'OperatorNode:divide':\n            // op contains '\\\\frac' at this point\n            return op + '{' + lhsTex + '}' + '{' + rhsTex + '}';\n\n          case 'OperatorNode:pow':\n            lhsTex = '{' + lhsTex + '}';\n            rhsTex = '{' + rhsTex + '}';\n\n            switch (lhsIdentifier) {\n              case 'ConditionalNode': //\n\n              case 'OperatorNode:divide':\n                lhsTex = \"\\\\left(\".concat(lhsTex, \"\\\\right)\");\n            }\n\n            break;\n\n          case 'OperatorNode:multiply':\n            if (this.implicit && implicit === 'hide') {\n              return lhsTex + '~' + rhsTex;\n            }\n\n        }\n\n        return lhsTex + op + rhsTex;\n      } else if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {\n        var texifiedArgs = args.map(function (arg, index) {\n          arg = arg.toTex(options);\n\n          if (parens[index]) {\n            arg = \"\\\\left(\".concat(arg, \"\\\\right)\");\n          }\n\n          return arg;\n        });\n\n        if (this.getIdentifier() === 'OperatorNode:multiply' && this.implicit) {\n          return texifiedArgs.join('~');\n        }\n\n        return texifiedArgs.join(op);\n      } else {\n        // fall back to formatting as a function call\n        // as this is a fallback, it doesn't use\n        // fancy function names\n        return '\\\\mathrm{' + this.fn + '}\\\\left(' + args.map(function (arg) {\n          return arg.toTex(options);\n        }).join(',') + '\\\\right)';\n      }\n    };\n    /**\n     * Get identifier.\n     * @return {string}\n     */\n\n\n    OperatorNode.prototype.getIdentifier = function () {\n      return this.type + ':' + this.fn;\n    };\n\n    return OperatorNode;\n  }\n\n  var name$l = 'OperatorNode';\n  var path$d = 'expression.node';\n  var factory_1$n = factory$n;\n\n  var OperatorNode = {\n  \tname: name$l,\n  \tpath: path$d,\n  \tfactory: factory_1$n\n  };\n\n  function factory$o(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor ParenthesisNode\n     * @extends {Node}\n     * A parenthesis node describes manual parenthesis from the user input\n     * @param {Node} content\n     * @extends {Node}\n     */\n\n    function ParenthesisNode(content) {\n      if (!(this instanceof ParenthesisNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input\n\n\n      if (!type.isNode(content)) {\n        throw new TypeError('Node expected for parameter \"content\"');\n      }\n\n      this.content = content;\n    }\n\n    ParenthesisNode.prototype = new Node$1();\n    ParenthesisNode.prototype.type = 'ParenthesisNode';\n    ParenthesisNode.prototype.isParenthesisNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ParenthesisNode.prototype._compile = function (math, argNames) {\n      return this.content._compile(math, argNames);\n    };\n    /**\n     * Get the content of the current Node.\n     * @return {Node} content\n     * @override\n     **/\n\n\n    ParenthesisNode.prototype.getContent = function () {\n      return this.content.getContent();\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ParenthesisNode.prototype.forEach = function (callback) {\n      callback(this.content, 'content', this);\n    };\n    /**\n     * Create a new ParenthesisNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node) : Node} callback\n     * @returns {ParenthesisNode} Returns a clone of the node\n     */\n\n\n    ParenthesisNode.prototype.map = function (callback) {\n      var content = callback(this.content, 'content', this);\n      return new ParenthesisNode(content);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ParenthesisNode}\n     */\n\n\n    ParenthesisNode.prototype.clone = function () {\n      return new ParenthesisNode(this.content);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ParenthesisNode.prototype._toString = function (options) {\n      if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {\n        return '(' + this.content.toString(options) + ')';\n      }\n\n      return this.content.toString(options);\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ParenthesisNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ParenthesisNode',\n        content: this.content\n      };\n    };\n    /**\n     * Instantiate an ParenthesisNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"ParenthesisNode\", \"content\": ...}`,\n     *                       where mathjs is optional\n     * @returns {ParenthesisNode}\n     */\n\n\n    ParenthesisNode.fromJSON = function (json) {\n      return new ParenthesisNode(json.content);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ParenthesisNode.prototype.toHTML = function (options) {\n      if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {\n        return '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + this.content.toHTML(options) + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      return this.content.toHTML(options);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ParenthesisNode.prototype._toTex = function (options) {\n      if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {\n        return \"\\\\left(\".concat(this.content.toTex(options), \"\\\\right)\");\n      }\n\n      return this.content.toTex(options);\n    };\n\n    return ParenthesisNode;\n  }\n\n  var name$m = 'ParenthesisNode';\n  var path$e = 'expression.node';\n  var factory_1$o = factory$o;\n\n  var ParenthesisNode = {\n  \tname: name$m,\n  \tpath: path$e,\n  \tfactory: factory_1$o\n  };\n\n  var escape$4 = string.escape;\n\n  var hasOwnProperty$3 = object.hasOwnProperty;\n\n  var getSafeProperty$6 = customs.getSafeProperty;\n\n  function factory$p(type, config, load, typed, math) {\n    var Node$1 = load(Node);\n    /**\n     * Check whether some name is a valueless unit like \"inch\".\n     * @param {string} name\n     * @return {boolean}\n     */\n\n    function isValuelessUnit(name) {\n      return type.Unit ? type.Unit.isValuelessUnit(name) : false;\n    }\n    /**\n     * @constructor SymbolNode\n     * @extends {Node}\n     * A symbol node can hold and resolve a symbol\n     * @param {string} name\n     * @extends {Node}\n     */\n\n\n    function SymbolNode(name) {\n      if (!(this instanceof SymbolNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input\n\n\n      if (typeof name !== 'string') throw new TypeError('String expected for parameter \"name\"');\n      this.name = name;\n    }\n\n    SymbolNode.prototype = new Node$1();\n    SymbolNode.prototype.type = 'SymbolNode';\n    SymbolNode.prototype.isSymbolNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    SymbolNode.prototype._compile = function (math, argNames) {\n      var name = this.name;\n\n      if (hasOwnProperty$3(argNames, name)) {\n        // this is a FunctionAssignment argument\n        // (like an x when inside the expression of a function assignment `f(x) = ...`)\n        return function (scope, args, context) {\n          return args[name];\n        };\n      } else if (name in math) {\n        return function (scope, args, context) {\n          return name in scope ? getSafeProperty$6(scope, name) : getSafeProperty$6(math, name);\n        };\n      } else {\n        var isUnit = isValuelessUnit(name);\n        return function (scope, args, context) {\n          return name in scope ? getSafeProperty$6(scope, name) : isUnit ? new type.Unit(null, name) : undef(name);\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    SymbolNode.prototype.forEach = function (callback) {} // nothing to do, we don't have childs\n\n    /**\n     * Create a new SymbolNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node) : Node} callback\n     * @returns {SymbolNode} Returns a clone of the node\n     */\n    ;\n\n    SymbolNode.prototype.map = function (callback) {\n      return this.clone();\n    };\n    /**\n     * Throws an error 'Undefined symbol {name}'\n     * @param {string} name\n     */\n\n\n    function undef(name) {\n      throw new Error('Undefined symbol ' + name);\n    }\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {SymbolNode}\n     */\n\n\n    SymbolNode.prototype.clone = function () {\n      return new SymbolNode(this.name);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    SymbolNode.prototype._toString = function (options) {\n      return this.name;\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    SymbolNode.prototype.toHTML = function (options) {\n      var name = escape$4(this.name);\n\n      if (name === 'true' || name === 'false') {\n        return '<span class=\"math-symbol math-boolean\">' + name + '</span>';\n      } else if (name === 'i') {\n        return '<span class=\"math-symbol math-imaginary-symbol\">' + name + '</span>';\n      } else if (name === 'Infinity') {\n        return '<span class=\"math-symbol math-infinity-symbol\">' + name + '</span>';\n      } else if (name === 'NaN') {\n        return '<span class=\"math-symbol math-nan-symbol\">' + name + '</span>';\n      } else if (name === 'null') {\n        return '<span class=\"math-symbol math-null-symbol\">' + name + '</span>';\n      } else if (name === 'undefined') {\n        return '<span class=\"math-symbol math-undefined-symbol\">' + name + '</span>';\n      }\n\n      return '<span class=\"math-symbol\">' + name + '</span>';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    SymbolNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'SymbolNode',\n        name: this.name\n      };\n    };\n    /**\n     * Instantiate a SymbolNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"SymbolNode\", name: \"x\"}`,\n     *                       where mathjs is optional\n     * @returns {SymbolNode}\n     */\n\n\n    SymbolNode.fromJSON = function (json) {\n      return new SymbolNode(json.name);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    SymbolNode.prototype._toTex = function (options) {\n      var isUnit = false;\n\n      if (typeof math[this.name] === 'undefined' && isValuelessUnit(this.name)) {\n        isUnit = true;\n      }\n\n      var symbol = latex.toSymbol(this.name, isUnit);\n\n      if (symbol[0] === '\\\\') {\n        // no space needed if the symbol starts with '\\'\n        return symbol;\n      } // the space prevents symbols from breaking stuff like '\\cdot' if it's written right before the symbol\n\n\n      return ' ' + symbol;\n    };\n\n    return SymbolNode;\n  }\n\n  var name$n = 'SymbolNode';\n  var path$f = 'expression.node';\n  var math$3 = true; // request access to the math namespace as 5th argument of the factory function\n\n  var factory_1$p = factory$p;\n\n  var SymbolNode = {\n  \tname: name$n,\n  \tpath: path$f,\n  \tmath: math$3,\n  \tfactory: factory_1$p\n  };\n\n  function _typeof$9(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$9 = function _typeof(obj) { return typeof obj; }; } else { _typeof$9 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$9(obj); }\n\n  function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }\n\n  var latex$1 = latex;\n\n  var escape$5 = string.escape;\n\n  var hasOwnProperty$4 = object.hasOwnProperty;\n\n  var map$4 = array.map;\n\n  var validateSafeMethod$1 = customs.validateSafeMethod;\n\n  var getSafeProperty$7 = customs.getSafeProperty;\n\n  function factory$q(type, config, load, typed, math) {\n    var Node$1 = load(Node);\n    var SymbolNode$1 = load(SymbolNode);\n    /**\n     * @constructor FunctionNode\n     * @extends {./Node}\n     * invoke a list with arguments on a node\n     * @param {./Node | string} fn Node resolving with a function on which to invoke\n     *                             the arguments, typically a SymboNode or AccessorNode\n     * @param {./Node[]} args\n     */\n\n    function FunctionNode(fn, args) {\n      if (!(this instanceof FunctionNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (typeof fn === 'string') {\n        fn = new SymbolNode$1(fn);\n      } // validate input\n\n\n      if (!type.isNode(fn)) throw new TypeError('Node expected as parameter \"fn\"');\n\n      if (!Array.isArray(args) || !args.every(type.isNode)) {\n        throw new TypeError('Array containing Nodes expected for parameter \"args\"');\n      }\n\n      this.fn = fn;\n      this.args = args || []; // readonly property name\n\n      Object.defineProperty(this, 'name', {\n        get: function () {\n          return this.fn.name || '';\n        }.bind(this),\n        set: function set() {\n          throw new Error('Cannot assign a new name, name is read-only');\n        }\n      }); // TODO: deprecated since v3, remove some day\n\n      var deprecated = function deprecated() {\n        throw new Error('Property `FunctionNode.object` is deprecated, use `FunctionNode.fn` instead');\n      };\n\n      Object.defineProperty(this, 'object', {\n        get: deprecated,\n        set: deprecated\n      });\n    }\n\n    FunctionNode.prototype = new Node$1();\n    FunctionNode.prototype.type = 'FunctionNode';\n    FunctionNode.prototype.isFunctionNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    FunctionNode.prototype._compile = function (math, argNames) {\n      if (!(this instanceof FunctionNode)) {\n        throw new TypeError('No valid FunctionNode');\n      } // compile arguments\n\n\n      var evalArgs = map$4(this.args, function (arg) {\n        return arg._compile(math, argNames);\n      });\n\n      if (type.isSymbolNode(this.fn)) {\n        // we can statically determine whether the function has an rawArgs property\n        var name = this.fn.name;\n        var fn = name in math ? getSafeProperty$7(math, name) : undefined;\n        var isRaw = typeof fn === 'function' && fn.rawArgs === true;\n\n        if (isRaw) {\n          // pass unevaluated parameters (nodes) to the function\n          // \"raw\" evaluation\n          var rawArgs = this.args;\n          return function evalFunctionNode(scope, args, context) {\n            return (name in scope ? getSafeProperty$7(scope, name) : fn)(rawArgs, math, _extends$1({}, scope, args));\n          };\n        } else {\n          // \"regular\" evaluation\n          if (evalArgs.length === 1) {\n            var evalArg0 = evalArgs[0];\n            return function evalFunctionNode(scope, args, context) {\n              return (name in scope ? getSafeProperty$7(scope, name) : fn)(evalArg0(scope, args, context));\n            };\n          } else if (evalArgs.length === 2) {\n            var _evalArg = evalArgs[0];\n            var evalArg1 = evalArgs[1];\n            return function evalFunctionNode(scope, args, context) {\n              return (name in scope ? getSafeProperty$7(scope, name) : fn)(_evalArg(scope, args, context), evalArg1(scope, args, context));\n            };\n          } else {\n            return function evalFunctionNode(scope, args, context) {\n              return (name in scope ? getSafeProperty$7(scope, name) : fn).apply(null, map$4(evalArgs, function (evalArg) {\n                return evalArg(scope, args, context);\n              }));\n            };\n          }\n        }\n      } else if (type.isAccessorNode(this.fn) && type.isIndexNode(this.fn.index) && this.fn.index.isObjectProperty()) {\n        // execute the function with the right context: the object of the AccessorNode\n        var evalObject = this.fn.object._compile(math, argNames);\n\n        var prop = this.fn.index.getObjectProperty();\n        var _rawArgs = this.args;\n        return function evalFunctionNode(scope, args, context) {\n          var object = evalObject(scope, args, context);\n          validateSafeMethod$1(object, prop);\n          var isRaw = object[prop] && object[prop].rawArgs;\n          return isRaw ? object[prop](_rawArgs, math, _extends$1({}, scope, args)) // \"raw\" evaluation\n          : object[prop].apply(object, map$4(evalArgs, function (evalArg) {\n            // \"regular\" evaluation\n            return evalArg(scope, args, context);\n          }));\n        };\n      } else {\n        // node.fn.isAccessorNode && !node.fn.index.isObjectProperty()\n        // we have to dynamically determine whether the function has a rawArgs property\n        var evalFn = this.fn._compile(math, argNames);\n\n        var _rawArgs2 = this.args;\n        return function evalFunctionNode(scope, args, context) {\n          var fn = evalFn(scope, args, context);\n          var isRaw = fn && fn.rawArgs;\n          return isRaw ? fn(_rawArgs2, math, _extends$1({}, scope, args)) // \"raw\" evaluation\n          : fn.apply(fn, map$4(evalArgs, function (evalArg) {\n            // \"regular\" evaluation\n            return evalArg(scope, args, context);\n          }));\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    FunctionNode.prototype.forEach = function (callback) {\n      callback(this.fn, 'fn', this);\n\n      for (var i = 0; i < this.args.length; i++) {\n        callback(this.args[i], 'args[' + i + ']', this);\n      }\n    };\n    /**\n     * Create a new FunctionNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {FunctionNode} Returns a transformed copy of the node\n     */\n\n\n    FunctionNode.prototype.map = function (callback) {\n      var fn = this._ifNode(callback(this.fn, 'fn', this));\n\n      var args = [];\n\n      for (var i = 0; i < this.args.length; i++) {\n        args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));\n      }\n\n      return new FunctionNode(fn, args);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {FunctionNode}\n     */\n\n\n    FunctionNode.prototype.clone = function () {\n      return new FunctionNode(this.fn, this.args.slice(0));\n    }; // backup Node's toString function\n    // @private\n\n\n    var nodeToString = FunctionNode.prototype.toString;\n    /**\n     * Get string representation. (wrapper function)\n     * This overrides parts of Node's toString function.\n     * If callback is an object containing callbacks, it\n     * calls the correct callback for the current node,\n     * otherwise it falls back to calling Node's toString\n     * function.\n     *\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n    FunctionNode.prototype.toString = function (options) {\n      var customString;\n      var name = this.fn.toString(options);\n\n      if (options && _typeof$9(options.handler) === 'object' && hasOwnProperty$4(options.handler, name)) {\n        // callback is a map of callback functions\n        customString = options.handler[name](this, options);\n      }\n\n      if (typeof customString !== 'undefined') {\n        return customString;\n      } // fall back to Node's toString\n\n\n      return nodeToString.call(this, options);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionNode.prototype._toString = function (options) {\n      var args = this.args.map(function (arg) {\n        return arg.toString(options);\n      });\n      var fn = type.isFunctionAssignmentNode(this.fn) ? '(' + this.fn.toString(options) + ')' : this.fn.toString(options); // format the arguments like \"add(2, 4.2)\"\n\n      return fn + '(' + args.join(', ') + ')';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    FunctionNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'FunctionNode',\n        fn: this.fn,\n        args: this.args\n      };\n    };\n    /**\n     * Instantiate an AssignmentNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"FunctionNode\", fn: ..., args: ...}`,\n     *                       where mathjs is optional\n     * @returns {FunctionNode}\n     */\n\n\n    FunctionNode.fromJSON = function (json) {\n      return new FunctionNode(json.fn, json.args);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionNode.prototype.toHTML = function (options) {\n      var args = this.args.map(function (arg) {\n        return arg.toHTML(options);\n      }); // format the arguments like \"add(2, 4.2)\"\n\n      return '<span class=\"math-function\">' + escape$5(this.fn) + '</span><span class=\"math-paranthesis math-round-parenthesis\">(</span>' + args.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-paranthesis math-round-parenthesis\">)</span>';\n    };\n    /*\n     * Expand a LaTeX template\n     *\n     * @param {string} template\n     * @param {Node} node\n     * @param {Object} options\n     * @private\n     **/\n\n\n    function expandTemplate(template, node, options) {\n      var latex = ''; // Match everything of the form ${identifier} or ${identifier[2]} or $$\n      // while submatching identifier and 2 (in the second case)\n\n      var regex = new RegExp('\\\\$(?:\\\\{([a-z_][a-z_0-9]*)(?:\\\\[([0-9]+)\\\\])?\\\\}|\\\\$)', 'ig');\n      var inputPos = 0; // position in the input string\n\n      var match;\n\n      while ((match = regex.exec(template)) !== null) {\n        // go through all matches\n        // add everything in front of the match to the LaTeX string\n        latex += template.substring(inputPos, match.index);\n        inputPos = match.index;\n\n        if (match[0] === '$$') {\n          // escaped dollar sign\n          latex += '$';\n          inputPos++;\n        } else {\n          // template parameter\n          inputPos += match[0].length;\n          var property = node[match[1]];\n\n          if (!property) {\n            throw new ReferenceError('Template: Property ' + match[1] + ' does not exist.');\n          }\n\n          if (match[2] === undefined) {\n            // no square brackets\n            switch (_typeof$9(property)) {\n              case 'string':\n                latex += property;\n                break;\n\n              case 'object':\n                if (type.isNode(property)) {\n                  latex += property.toTex(options);\n                } else if (Array.isArray(property)) {\n                  // make array of Nodes into comma separated list\n                  latex += property.map(function (arg, index) {\n                    if (type.isNode(arg)) {\n                      return arg.toTex(options);\n                    }\n\n                    throw new TypeError('Template: ' + match[1] + '[' + index + '] is not a Node.');\n                  }).join(',');\n                } else {\n                  throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');\n                }\n\n                break;\n\n              default:\n                throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');\n            }\n          } else {\n            // with square brackets\n            if (type.isNode(property[match[2]] && property[match[2]])) {\n              latex += property[match[2]].toTex(options);\n            } else {\n              throw new TypeError('Template: ' + match[1] + '[' + match[2] + '] is not a Node.');\n            }\n          }\n        }\n      }\n\n      latex += template.slice(inputPos); // append rest of the template\n\n      return latex;\n    } // backup Node's toTex function\n    // @private\n\n\n    var nodeToTex = FunctionNode.prototype.toTex;\n    /**\n     * Get LaTeX representation. (wrapper function)\n     * This overrides parts of Node's toTex function.\n     * If callback is an object containing callbacks, it\n     * calls the correct callback for the current node,\n     * otherwise it falls back to calling Node's toTex\n     * function.\n     *\n     * @param {Object} options\n     * @return {string}\n     */\n\n    FunctionNode.prototype.toTex = function (options) {\n      var customTex;\n\n      if (options && _typeof$9(options.handler) === 'object' && hasOwnProperty$4(options.handler, this.name)) {\n        // callback is a map of callback functions\n        customTex = options.handler[this.name](this, options);\n      }\n\n      if (typeof customTex !== 'undefined') {\n        return customTex;\n      } // fall back to Node's toTex\n\n\n      return nodeToTex.call(this, options);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionNode.prototype._toTex = function (options) {\n      var args = this.args.map(function (arg) {\n        // get LaTeX of the arguments\n        return arg.toTex(options);\n      });\n      var latexConverter;\n\n      if (math[this.name] && (typeof math[this.name].toTex === 'function' || _typeof$9(math[this.name].toTex) === 'object' || typeof math[this.name].toTex === 'string')) {\n        // .toTex is a callback function\n        latexConverter = math[this.name].toTex;\n      }\n\n      var customToTex;\n\n      switch (_typeof$9(latexConverter)) {\n        case 'function':\n          // a callback function\n          customToTex = latexConverter(this, options);\n          break;\n\n        case 'string':\n          // a template string\n          customToTex = expandTemplate(latexConverter, this, options);\n          break;\n\n        case 'object':\n          // an object with different \"converters\" for different numbers of arguments\n          switch (_typeof$9(latexConverter[args.length])) {\n            case 'function':\n              customToTex = latexConverter[args.length](this, options);\n              break;\n\n            case 'string':\n              customToTex = expandTemplate(latexConverter[args.length], this, options);\n              break;\n          }\n\n      }\n\n      if (typeof customToTex !== 'undefined') {\n        return customToTex;\n      }\n\n      return expandTemplate(latex$1.defaultTemplate, this, options);\n    };\n    /**\n     * Get identifier.\n     * @return {string}\n     */\n\n\n    FunctionNode.prototype.getIdentifier = function () {\n      return this.type + ':' + this.name;\n    };\n\n    return FunctionNode;\n  }\n\n  var name$o = 'FunctionNode';\n  var path$g = 'expression.node';\n  var math$4 = true; // request access to the math namespace as 5th argument of the factory function\n\n  var factory_1$q = factory$q;\n\n  var FunctionNode = {\n  \tname: name$o,\n  \tpath: path$g,\n  \tmath: math$4,\n  \tfactory: factory_1$q\n  };\n\n  function factory$r(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor RangeNode\n     * @extends {Node}\n     * create a range\n     * @param {Node} start  included lower-bound\n     * @param {Node} end    included upper-bound\n     * @param {Node} [step] optional step\n     */\n\n    function RangeNode(start, end, step) {\n      if (!(this instanceof RangeNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate inputs\n\n\n      if (!type.isNode(start)) throw new TypeError('Node expected');\n      if (!type.isNode(end)) throw new TypeError('Node expected');\n      if (step && !type.isNode(step)) throw new TypeError('Node expected');\n      if (arguments.length > 3) throw new Error('Too many arguments');\n      this.start = start; // included lower-bound\n\n      this.end = end; // included upper-bound\n\n      this.step = step || null; // optional step\n    }\n\n    RangeNode.prototype = new Node$1();\n    RangeNode.prototype.type = 'RangeNode';\n    RangeNode.prototype.isRangeNode = true;\n    /**\n     * Check whether the RangeNode needs the `end` symbol to be defined.\n     * This end is the size of the Matrix in current dimension.\n     * @return {boolean}\n     */\n\n    RangeNode.prototype.needsEnd = function () {\n      // find all `end` symbols in this RangeNode\n      var endSymbols = this.filter(function (node) {\n        return type.isSymbolNode(node) && node.name === 'end';\n      });\n      return endSymbols.length > 0;\n    };\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n\n    RangeNode.prototype._compile = function (math, argNames) {\n      var range = math.range;\n\n      var evalStart = this.start._compile(math, argNames);\n\n      var evalEnd = this.end._compile(math, argNames);\n\n      if (this.step) {\n        var evalStep = this.step._compile(math, argNames);\n\n        return function evalRangeNode(scope, args, context) {\n          return range(evalStart(scope, args, context), evalEnd(scope, args, context), evalStep(scope, args, context));\n        };\n      } else {\n        return function evalRangeNode(scope, args, context) {\n          return range(evalStart(scope, args, context), evalEnd(scope, args, context));\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    RangeNode.prototype.forEach = function (callback) {\n      callback(this.start, 'start', this);\n      callback(this.end, 'end', this);\n\n      if (this.step) {\n        callback(this.step, 'step', this);\n      }\n    };\n    /**\n     * Create a new RangeNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {RangeNode} Returns a transformed copy of the node\n     */\n\n\n    RangeNode.prototype.map = function (callback) {\n      return new RangeNode(this._ifNode(callback(this.start, 'start', this)), this._ifNode(callback(this.end, 'end', this)), this.step && this._ifNode(callback(this.step, 'step', this)));\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {RangeNode}\n     */\n\n\n    RangeNode.prototype.clone = function () {\n      return new RangeNode(this.start, this.end, this.step && this.step);\n    };\n    /**\n     * Calculate the necessary parentheses\n     * @param {Node} node\n     * @param {string} parenthesis\n     * @return {Object} parentheses\n     * @private\n     */\n\n\n    function calculateNecessaryParentheses(node, parenthesis) {\n      var precedence = operators.getPrecedence(node, parenthesis);\n      var parens = {};\n      var startPrecedence = operators.getPrecedence(node.start, parenthesis);\n      parens.start = startPrecedence !== null && startPrecedence <= precedence || parenthesis === 'all';\n\n      if (node.step) {\n        var stepPrecedence = operators.getPrecedence(node.step, parenthesis);\n        parens.step = stepPrecedence !== null && stepPrecedence <= precedence || parenthesis === 'all';\n      }\n\n      var endPrecedence = operators.getPrecedence(node.end, parenthesis);\n      parens.end = endPrecedence !== null && endPrecedence <= precedence || parenthesis === 'all';\n      return parens;\n    }\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RangeNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var parens = calculateNecessaryParentheses(this, parenthesis); // format string as start:step:stop\n\n      var str;\n      var start = this.start.toString(options);\n\n      if (parens.start) {\n        start = '(' + start + ')';\n      }\n\n      str = start;\n\n      if (this.step) {\n        var step = this.step.toString(options);\n\n        if (parens.step) {\n          step = '(' + step + ')';\n        }\n\n        str += ':' + step;\n      }\n\n      var end = this.end.toString(options);\n\n      if (parens.end) {\n        end = '(' + end + ')';\n      }\n\n      str += ':' + end;\n      return str;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    RangeNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'RangeNode',\n        start: this.start,\n        end: this.end,\n        step: this.step\n      };\n    };\n    /**\n     * Instantiate an RangeNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"RangeNode\", \"start\": ..., \"end\": ..., \"step\": ...}`,\n     *                       where mathjs is optional\n     * @returns {RangeNode}\n     */\n\n\n    RangeNode.fromJSON = function (json) {\n      return new RangeNode(json.start, json.end, json.step);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RangeNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var parens = calculateNecessaryParentheses(this, parenthesis); // format string as start:step:stop\n\n      var str;\n      var start = this.start.toHTML(options);\n\n      if (parens.start) {\n        start = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + start + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      str = start;\n\n      if (this.step) {\n        var step = this.step.toHTML(options);\n\n        if (parens.step) {\n          step = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + step + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n        }\n\n        str += '<span class=\"math-operator math-range-operator\">:</span>' + step;\n      }\n\n      var end = this.end.toHTML(options);\n\n      if (parens.end) {\n        end = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + end + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      str += '<span class=\"math-operator math-range-operator\">:</span>' + end;\n      return str;\n    };\n    /**\n     * Get LaTeX representation\n     * @params {Object} options\n     * @return {string} str\n     */\n\n\n    RangeNode.prototype._toTex = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var parens = calculateNecessaryParentheses(this, parenthesis);\n      var str = this.start.toTex(options);\n\n      if (parens.start) {\n        str = \"\\\\left(\".concat(str, \"\\\\right)\");\n      }\n\n      if (this.step) {\n        var step = this.step.toTex(options);\n\n        if (parens.step) {\n          step = \"\\\\left(\".concat(step, \"\\\\right)\");\n        }\n\n        str += ':' + step;\n      }\n\n      var end = this.end.toTex(options);\n\n      if (parens.end) {\n        end = \"\\\\left(\".concat(end, \"\\\\right)\");\n      }\n\n      str += ':' + end;\n      return str;\n    };\n\n    return RangeNode;\n  }\n\n  var name$p = 'RangeNode';\n  var path$h = 'expression.node';\n  var factory_1$r = factory$r;\n\n  var RangeNode = {\n  \tname: name$p,\n  \tpath: path$h,\n  \tfactory: factory_1$r\n  };\n\n  var escape$6 = string.escape;\n\n  function factory$s(type, config, load, typed) {\n    var Node$1 = load(Node);\n\n    var getSafeProperty = customs.getSafeProperty;\n    /**\n     * A node representing a chained conditional expression, such as 'x > y > z'\n     *\n     * @param {String[]} conditionals   An array of conditional operators used to compare the parameters\n     * @param {Node[]} params   The parameters that will be compared\n     *\n     * @constructor RelationalNode\n     * @extends {Node}\n     */\n\n\n    function RelationalNode(conditionals, params) {\n      if (!(this instanceof RelationalNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (!Array.isArray(conditionals)) throw new TypeError('Parameter conditionals must be an array');\n      if (!Array.isArray(params)) throw new TypeError('Parameter params must be an array');\n      if (conditionals.length !== params.length - 1) throw new TypeError('Parameter params must contain exactly one more element than parameter conditionals');\n      this.conditionals = conditionals;\n      this.params = params;\n    }\n\n    RelationalNode.prototype = new Node$1();\n    RelationalNode.prototype.type = 'RelationalNode';\n    RelationalNode.prototype.isRelationalNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    RelationalNode.prototype._compile = function (math, argNames) {\n      var self = this;\n      var compiled = this.params.map(function (p) {\n        return p._compile(math, argNames);\n      });\n      return function evalRelationalNode(scope, args, context) {\n        var evalLhs;\n        var evalRhs = compiled[0](scope, args, context);\n\n        for (var i = 0; i < self.conditionals.length; i++) {\n          evalLhs = evalRhs;\n          evalRhs = compiled[i + 1](scope, args, context);\n          var condFn = getSafeProperty(math, self.conditionals[i]);\n\n          if (!condFn(evalLhs, evalRhs)) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    RelationalNode.prototype.forEach = function (callback) {\n      var _this = this;\n\n      this.params.forEach(function (n, i) {\n        return callback(n, 'params[' + i + ']', _this);\n      }, this);\n    };\n    /**\n     * Create a new RelationalNode having its childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {RelationalNode} Returns a transformed copy of the node\n     */\n\n\n    RelationalNode.prototype.map = function (callback) {\n      var _this2 = this;\n\n      return new RelationalNode(this.conditionals.slice(), this.params.map(function (n, i) {\n        return _this2._ifNode(callback(n, 'params[' + i + ']', _this2));\n      }, this));\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {RelationalNode}\n     */\n\n\n    RelationalNode.prototype.clone = function () {\n      return new RelationalNode(this.conditionals, this.params);\n    };\n    /**\n     * Get string representation.\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RelationalNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis);\n      var paramStrings = this.params.map(function (p, index) {\n        var paramPrecedence = operators.getPrecedence(p, parenthesis);\n        return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '(' + p.toString(options) + ')' : p.toString(options);\n      });\n      var operatorMap = {\n        'equal': '==',\n        'unequal': '!=',\n        'smaller': '<',\n        'larger': '>',\n        'smallerEq': '<=',\n        'largerEq': '>='\n      };\n      var ret = paramStrings[0];\n\n      for (var i = 0; i < this.conditionals.length; i++) {\n        ret += ' ' + operatorMap[this.conditionals[i]] + ' ' + paramStrings[i + 1];\n      }\n\n      return ret;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    RelationalNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'RelationalNode',\n        conditionals: this.conditionals,\n        params: this.params\n      };\n    };\n    /**\n     * Instantiate a RelationalNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"RelationalNode\", \"condition\": ..., \"trueExpr\": ..., \"falseExpr\": ...}`,\n     *                       where mathjs is optional\n     * @returns {RelationalNode}\n     */\n\n\n    RelationalNode.fromJSON = function (json) {\n      return new RelationalNode(json.conditionals, json.params);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RelationalNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis);\n      var paramStrings = this.params.map(function (p, index) {\n        var paramPrecedence = operators.getPrecedence(p, parenthesis);\n        return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + p.toHTML(options) + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>' : p.toHTML(options);\n      });\n      var operatorMap = {\n        'equal': '==',\n        'unequal': '!=',\n        'smaller': '<',\n        'larger': '>',\n        'smallerEq': '<=',\n        'largerEq': '>='\n      };\n      var ret = paramStrings[0];\n\n      for (var i = 0; i < this.conditionals.length; i++) {\n        ret += '<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">' + escape$6(operatorMap[this.conditionals[i]]) + '</span>' + paramStrings[i + 1];\n      }\n\n      return ret;\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RelationalNode.prototype._toTex = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis);\n      var paramStrings = this.params.map(function (p, index) {\n        var paramPrecedence = operators.getPrecedence(p, parenthesis);\n        return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '\\\\left(' + p.toTex(options) + '\\right)' : p.toTex(options);\n      });\n      var ret = paramStrings[0];\n\n      for (var i = 0; i < this.conditionals.length; i++) {\n        ret += latex.operators[this.conditionals[i]] + paramStrings[i + 1];\n      }\n\n      return ret;\n    };\n\n    return RelationalNode;\n  }\n\n  var name$q = 'RelationalNode';\n  var path$i = 'expression.node';\n  var factory_1$s = factory$s;\n\n  var RelationalNode = {\n  \tname: name$q,\n  \tpath: path$i,\n  \tfactory: factory_1$s\n  };\n\n  function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }\n\n\n\n\n\n  function factory$t(type, config, load, typed) {\n    var numeric$1 = load(numeric);\n    var AccessorNode$1 = load(AccessorNode);\n    var ArrayNode$1 = load(ArrayNode);\n    var AssignmentNode$1 = load(AssignmentNode);\n    var BlockNode$1 = load(BlockNode);\n    var ConditionalNode$1 = load(ConditionalNode);\n    var ConstantNode$1 = load(ConstantNode);\n    var FunctionAssignmentNode$1 = load(FunctionAssignmentNode);\n    var IndexNode$1 = load(IndexNode);\n    var ObjectNode$1 = load(ObjectNode);\n    var OperatorNode$1 = load(OperatorNode);\n    var ParenthesisNode$1 = load(ParenthesisNode);\n    var FunctionNode$1 = load(FunctionNode);\n    var RangeNode$1 = load(RangeNode);\n    var RelationalNode$1 = load(RelationalNode);\n    var SymbolNode$1 = load(SymbolNode);\n    /**\n     * Parse an expression. Returns a node tree, which can be evaluated by\n     * invoking node.eval().\n     *\n     * Syntax:\n     *\n     *     parse(expr)\n     *     parse(expr, options)\n     *     parse([expr1, expr2, expr3, ...])\n     *     parse([expr1, expr2, expr3, ...], options)\n     *\n     * Example:\n     *\n     *     const node = parse('sqrt(3^2 + 4^2)')\n     *     node.compile(math).eval() // 5\n     *\n     *     let scope = {a:3, b:4}\n     *     const node = parse('a * b') // 12\n     *     const code = node.compile(math)\n     *     code.eval(scope) // 12\n     *     scope.a = 5\n     *     code.eval(scope) // 20\n     *\n     *     const nodes = math.parse(['a = 3', 'b = 4', 'a * b'])\n     *     nodes[2].compile(math).eval() // 12\n     *\n     * @param {string | string[] | Matrix} expr\n     * @param {{nodes: Object<string, Node>}} [options]  Available options:\n     *                                                   - `nodes` a set of custom nodes\n     * @return {Node | Node[]} node\n     * @throws {Error}\n     */\n\n    function parse(expr, options) {\n      if (arguments.length !== 1 && arguments.length !== 2) {\n        throw new ArgumentsError_1('parse', arguments.length, 1, 2);\n      } // pass extra nodes\n\n\n      var extraNodes = options && options.nodes ? options.nodes : {};\n\n      if (typeof expr === 'string') {\n        // parse a single expression\n        return parseStart(expr, extraNodes);\n      } else if (Array.isArray(expr) || expr instanceof type.Matrix) {\n        // parse an array or matrix with expressions\n        return deepMap(expr, function (elem) {\n          if (typeof elem !== 'string') throw new TypeError('String expected');\n          return parseStart(elem, extraNodes);\n        });\n      } else {\n        // oops\n        throw new TypeError('String or matrix expected');\n      }\n    } // token types enumeration\n\n\n    var TOKENTYPE = {\n      NULL: 0,\n      DELIMITER: 1,\n      NUMBER: 2,\n      SYMBOL: 3,\n      UNKNOWN: 4 // map with all delimiters\n\n    };\n    var DELIMITERS = {\n      ',': true,\n      '(': true,\n      ')': true,\n      '[': true,\n      ']': true,\n      '{': true,\n      '}': true,\n      '\"': true,\n      '\\'': true,\n      ';': true,\n      '+': true,\n      '-': true,\n      '*': true,\n      '.*': true,\n      '/': true,\n      './': true,\n      '%': true,\n      '^': true,\n      '.^': true,\n      '~': true,\n      '!': true,\n      '&': true,\n      '|': true,\n      '^|': true,\n      '=': true,\n      ':': true,\n      '?': true,\n      '==': true,\n      '!=': true,\n      '<': true,\n      '>': true,\n      '<=': true,\n      '>=': true,\n      '<<': true,\n      '>>': true,\n      '>>>': true // map with all named delimiters\n\n    };\n    var NAMED_DELIMITERS = {\n      'mod': true,\n      'to': true,\n      'in': true,\n      'and': true,\n      'xor': true,\n      'or': true,\n      'not': true\n    };\n    var CONSTANTS = {\n      'true': true,\n      'false': false,\n      'null': null,\n      'undefined': undefined\n    };\n    var NUMERIC_CONSTANTS = ['NaN', 'Infinity'];\n\n    function initialState() {\n      return {\n        extraNodes: {},\n        // current extra nodes, must be careful not to mutate\n        expression: '',\n        // current expression\n        comment: '',\n        // last parsed comment\n        index: 0,\n        // current index in expr\n        token: '',\n        // current token\n        tokenType: TOKENTYPE.NULL,\n        // type of the token\n        nestingLevel: 0,\n        // level of nesting inside parameters, used to ignore newline characters\n        conditionalLevel: null // when a conditional is being parsed, the level of the conditional is stored here\n\n      };\n    }\n    /**\n     * View upto `length` characters of the expression starting at the current character.\n     *\n     * @param {State} state\n     * @param {number} [length=1] Number of characters to view\n     * @returns {string}\n     * @private\n     */\n\n\n    function currentString(state, length) {\n      return state.expression.substr(state.index, length);\n    }\n    /**\n     * View the current character. Returns '' if end of expression is reached.\n     *\n     * @param {State} state\n     * @returns {string}\n     * @private\n     */\n\n\n    function currentCharacter(state) {\n      return currentString(state, 1);\n    }\n    /**\n     * Get the next character from the expression.\n     * The character is stored into the char c. If the end of the expression is\n     * reached, the function puts an empty string in c.\n     * @private\n     */\n\n\n    function next(state) {\n      state.index++;\n    }\n    /**\n     * Preview the previous character from the expression.\n     * @return {string} cNext\n     * @private\n     */\n\n\n    function prevCharacter(state) {\n      return state.expression.charAt(state.index - 1);\n    }\n    /**\n     * Preview the next character from the expression.\n     * @return {string} cNext\n     * @private\n     */\n\n\n    function nextCharacter(state) {\n      return state.expression.charAt(state.index + 1);\n    }\n    /**\n     * Get next token in the current string expr.\n     * The token and token type are available as token and tokenType\n     * @private\n     */\n\n\n    function getToken(state) {\n      state.tokenType = TOKENTYPE.NULL;\n      state.token = '';\n      state.comment = ''; // skip over whitespaces\n      // space, tab, and newline when inside parameters\n\n      while (parse.isWhitespace(currentCharacter(state), state.nestingLevel)) {\n        next(state);\n      } // skip comment\n\n\n      if (currentCharacter(state) === '#') {\n        while (currentCharacter(state) !== '\\n' && currentCharacter(state) !== '') {\n          state.comment += currentCharacter(state);\n          next(state);\n        }\n      } // check for end of expression\n\n\n      if (currentCharacter(state) === '') {\n        // token is still empty\n        state.tokenType = TOKENTYPE.DELIMITER;\n        return;\n      } // check for new line character\n\n\n      if (currentCharacter(state) === '\\n' && !state.nestingLevel) {\n        state.tokenType = TOKENTYPE.DELIMITER;\n        state.token = currentCharacter(state);\n        next(state);\n        return;\n      }\n\n      var c1 = currentCharacter(state);\n      var c2 = currentString(state, 2);\n      var c3 = currentString(state, 3);\n\n      if (c3.length === 3 && DELIMITERS[c3]) {\n        state.tokenType = TOKENTYPE.DELIMITER;\n        state.token = c3;\n        next(state);\n        next(state);\n        next(state);\n        return;\n      } // check for delimiters consisting of 2 characters\n\n\n      if (c2.length === 2 && DELIMITERS[c2]) {\n        state.tokenType = TOKENTYPE.DELIMITER;\n        state.token = c2;\n        next(state);\n        next(state);\n        return;\n      } // check for delimiters consisting of 1 character\n\n\n      if (DELIMITERS[c1]) {\n        state.tokenType = TOKENTYPE.DELIMITER;\n        state.token = c1;\n        next(state);\n        return;\n      } // check for a number\n\n\n      if (parse.isDigitDot(c1)) {\n        state.tokenType = TOKENTYPE.NUMBER; // get number, can have a single dot\n\n        if (currentCharacter(state) === '.') {\n          state.token += currentCharacter(state);\n          next(state);\n\n          if (!parse.isDigit(currentCharacter(state))) {\n            // this is no number, it is just a dot (can be dot notation)\n            state.tokenType = TOKENTYPE.DELIMITER;\n          }\n        } else {\n          while (parse.isDigit(currentCharacter(state))) {\n            state.token += currentCharacter(state);\n            next(state);\n          }\n\n          if (parse.isDecimalMark(currentCharacter(state), nextCharacter(state))) {\n            state.token += currentCharacter(state);\n            next(state);\n          }\n        }\n\n        while (parse.isDigit(currentCharacter(state))) {\n          state.token += currentCharacter(state);\n          next(state);\n        } // check for exponential notation like \"2.3e-4\", \"1.23e50\" or \"2e+4\"\n\n\n        if (currentCharacter(state) === 'E' || currentCharacter(state) === 'e') {\n          if (parse.isDigit(nextCharacter(state)) || nextCharacter(state) === '-' || nextCharacter(state) === '+') {\n            state.token += currentCharacter(state);\n            next(state);\n\n            if (currentCharacter(state) === '+' || currentCharacter(state) === '-') {\n              state.token += currentCharacter(state);\n              next(state);\n            } // Scientific notation MUST be followed by an exponent\n\n\n            if (!parse.isDigit(currentCharacter(state))) {\n              throw createSyntaxError(state, 'Digit expected, got \"' + currentCharacter(state) + '\"');\n            }\n\n            while (parse.isDigit(currentCharacter(state))) {\n              state.token += currentCharacter(state);\n              next(state);\n            }\n\n            if (parse.isDecimalMark(currentCharacter(state), nextCharacter(state))) {\n              throw createSyntaxError(state, 'Digit expected, got \"' + currentCharacter(state) + '\"');\n            }\n          } else if (nextCharacter(state) === '.') {\n            next(state);\n            throw createSyntaxError(state, 'Digit expected, got \"' + currentCharacter(state) + '\"');\n          }\n        }\n\n        return;\n      } // check for variables, functions, named operators\n\n\n      if (parse.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state))) {\n        while (parse.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state)) || parse.isDigit(currentCharacter(state))) {\n          state.token += currentCharacter(state);\n          next(state);\n        }\n\n        if (NAMED_DELIMITERS.hasOwnProperty(state.token)) {\n          state.tokenType = TOKENTYPE.DELIMITER;\n        } else {\n          state.tokenType = TOKENTYPE.SYMBOL;\n        }\n\n        return;\n      } // something unknown is found, wrong characters -> a syntax error\n\n\n      state.tokenType = TOKENTYPE.UNKNOWN;\n\n      while (currentCharacter(state) !== '') {\n        state.token += currentCharacter(state);\n        next(state);\n      }\n\n      throw createSyntaxError(state, 'Syntax error in part \"' + state.token + '\"');\n    }\n    /**\n     * Get next token and skip newline tokens\n     */\n\n\n    function getTokenSkipNewline(state) {\n      do {\n        getToken(state);\n      } while (state.token === '\\n'); // eslint-disable-line no-unmodified-loop-condition\n\n    }\n    /**\n     * Open parameters.\n     * New line characters will be ignored until closeParams(state) is called\n     */\n\n\n    function openParams(state) {\n      state.nestingLevel++;\n    }\n    /**\n     * Close parameters.\n     * New line characters will no longer be ignored\n     */\n\n\n    function closeParams(state) {\n      state.nestingLevel--;\n    }\n    /**\n     * Checks whether the current character `c` is a valid alpha character:\n     *\n     * - A latin letter (upper or lower case) Ascii: a-z, A-Z\n     * - An underscore                        Ascii: _\n     * - A dollar sign                        Ascii: $\n     * - A latin letter with accents          Unicode: \\u00C0 - \\u02AF\n     * - A greek letter                       Unicode: \\u0370 - \\u03FF\n     * - A mathematical alphanumeric symbol   Unicode: \\u{1D400} - \\u{1D7FF} excluding invalid code points\n     *\n     * The previous and next characters are needed to determine whether\n     * this character is part of a unicode surrogate pair.\n     *\n     * @param {string} c      Current character in the expression\n     * @param {string} cPrev  Previous character\n     * @param {string} cNext  Next character\n     * @return {boolean}\n     */\n\n\n    parse.isAlpha = function isAlpha(c, cPrev, cNext) {\n      return parse.isValidLatinOrGreek(c) || parse.isValidMathSymbol(c, cNext) || parse.isValidMathSymbol(cPrev, c);\n    };\n    /**\n     * Test whether a character is a valid latin, greek, or letter-like character\n     * @param {string} c\n     * @return {boolean}\n     */\n\n\n    parse.isValidLatinOrGreek = function isValidLatinOrGreek(c) {\n      return /^[a-zA-Z_$\\u00C0-\\u02AF\\u0370-\\u03FF\\u2100-\\u214F]$/.test(c);\n    };\n    /**\n     * Test whether two given 16 bit characters form a surrogate pair of a\n     * unicode math symbol.\n     *\n     * https://unicode-table.com/en/\n     * https://www.wikiwand.com/en/Mathematical_operators_and_symbols_in_Unicode\n     *\n     * Note: In ES6 will be unicode aware:\n     * https://stackoverflow.com/questions/280712/javascript-unicode-regexes\n     * https://mathiasbynens.be/notes/es6-unicode-regex\n     *\n     * @param {string} high\n     * @param {string} low\n     * @return {boolean}\n     */\n\n\n    parse.isValidMathSymbol = function isValidMathSymbol(high, low) {\n      return /^[\\uD835]$/.test(high) && /^[\\uDC00-\\uDFFF]$/.test(low) && /^[^\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]$/.test(low);\n    };\n    /**\n     * Check whether given character c is a white space character: space, tab, or enter\n     * @param {string} c\n     * @param {number} nestingLevel\n     * @return {boolean}\n     */\n\n\n    parse.isWhitespace = function isWhitespace(c, nestingLevel) {\n      // TODO: also take '\\r' carriage return as newline? Or does that give problems on mac?\n      return c === ' ' || c === '\\t' || c === '\\n' && nestingLevel > 0;\n    };\n    /**\n     * Test whether the character c is a decimal mark (dot).\n     * This is the case when it's not the start of a delimiter '.*', './', or '.^'\n     * @param {string} c\n     * @param {string} cNext\n     * @return {boolean}\n     */\n\n\n    parse.isDecimalMark = function isDecimalMark(c, cNext) {\n      return c === '.' && cNext !== '/' && cNext !== '*' && cNext !== '^';\n    };\n    /**\n     * checks if the given char c is a digit or dot\n     * @param {string} c   a string with one character\n     * @return {boolean}\n     */\n\n\n    parse.isDigitDot = function isDigitDot(c) {\n      return c >= '0' && c <= '9' || c === '.';\n    };\n    /**\n     * checks if the given char c is a digit\n     * @param {string} c   a string with one character\n     * @return {boolean}\n     */\n\n\n    parse.isDigit = function isDigit(c) {\n      return c >= '0' && c <= '9';\n    };\n    /**\n     * Start of the parse levels below, in order of precedence\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseStart(expression, extraNodes) {\n      var state = initialState();\n\n      _extends$2(state, {\n        expression: expression,\n        extraNodes: extraNodes\n      });\n\n      getToken(state);\n      var node = parseBlock(state); // check for garbage at the end of the expression\n      // an expression ends with a empty character '' and tokenType DELIMITER\n\n      if (state.token !== '') {\n        if (state.tokenType === TOKENTYPE.DELIMITER) {\n          // user entered a not existing operator like \"//\"\n          // TODO: give hints for aliases, for example with \"<>\" give as hint \" did you mean !== ?\"\n          throw createError(state, 'Unexpected operator ' + state.token);\n        } else {\n          throw createSyntaxError(state, 'Unexpected part \"' + state.token + '\"');\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Parse a block with expressions. Expressions can be separated by a newline\n     * character '\\n', or by a semicolon ';'. In case of a semicolon, no output\n     * of the preceding line is returned.\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseBlock(state) {\n      var node;\n      var blocks = [];\n      var visible;\n\n      if (state.token !== '' && state.token !== '\\n' && state.token !== ';') {\n        node = parseAssignment(state);\n        node.comment = state.comment;\n      } // TODO: simplify this loop\n\n\n      while (state.token === '\\n' || state.token === ';') {\n        // eslint-disable-line no-unmodified-loop-condition\n        if (blocks.length === 0 && node) {\n          visible = state.token !== ';';\n          blocks.push({\n            node: node,\n            visible: visible\n          });\n        }\n\n        getToken(state);\n\n        if (state.token !== '\\n' && state.token !== ';' && state.token !== '') {\n          node = parseAssignment(state);\n          node.comment = state.comment;\n          visible = state.token !== ';';\n          blocks.push({\n            node: node,\n            visible: visible\n          });\n        }\n      }\n\n      if (blocks.length > 0) {\n        return new BlockNode$1(blocks);\n      } else {\n        if (!node) {\n          node = new ConstantNode$1(undefined);\n          node.comment = state.comment;\n        }\n\n        return node;\n      }\n    }\n    /**\n     * Assignment of a function or variable,\n     * - can be a variable like 'a=2.3'\n     * - or a updating an existing variable like 'matrix(2,3:5)=[6,7,8]'\n     * - defining a function like 'f(x) = x^2'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseAssignment(state) {\n      var name, args, value, valid;\n      var node = parseConditional(state);\n\n      if (state.token === '=') {\n        if (type.isSymbolNode(node)) {\n          // parse a variable assignment like 'a = 2/3'\n          name = node.name;\n          getTokenSkipNewline(state);\n          value = parseAssignment(state);\n          return new AssignmentNode$1(new SymbolNode$1(name), value);\n        } else if (type.isAccessorNode(node)) {\n          // parse a matrix subset assignment like 'A[1,2] = 4'\n          getTokenSkipNewline(state);\n          value = parseAssignment(state);\n          return new AssignmentNode$1(node.object, node.index, value);\n        } else if (type.isFunctionNode(node) && type.isSymbolNode(node.fn)) {\n          // parse function assignment like 'f(x) = x^2'\n          valid = true;\n          args = [];\n          name = node.name;\n          node.args.forEach(function (arg, index) {\n            if (type.isSymbolNode(arg)) {\n              args[index] = arg.name;\n            } else {\n              valid = false;\n            }\n          });\n\n          if (valid) {\n            getTokenSkipNewline(state);\n            value = parseAssignment(state);\n            return new FunctionAssignmentNode$1(name, args, value);\n          }\n        }\n\n        throw createSyntaxError(state, 'Invalid left hand side of assignment operator =');\n      }\n\n      return node;\n    }\n    /**\n     * conditional operation\n     *\n     *     condition ? truePart : falsePart\n     *\n     * Note: conditional operator is right-associative\n     *\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseConditional(state) {\n      var node = parseLogicalOr(state);\n\n      while (state.token === '?') {\n        // eslint-disable-line no-unmodified-loop-condition\n        // set a conditional level, the range operator will be ignored as long\n        // as conditionalLevel === state.nestingLevel.\n        var prev = state.conditionalLevel;\n        state.conditionalLevel = state.nestingLevel;\n        getTokenSkipNewline(state);\n        var condition = node;\n        var trueExpr = parseAssignment(state);\n        if (state.token !== ':') throw createSyntaxError(state, 'False part of conditional expression expected');\n        state.conditionalLevel = null;\n        getTokenSkipNewline(state);\n        var falseExpr = parseAssignment(state); // Note: check for conditional operator again, right associativity\n\n        node = new ConditionalNode$1(condition, trueExpr, falseExpr); // restore the previous conditional level\n\n        state.conditionalLevel = prev;\n      }\n\n      return node;\n    }\n    /**\n     * logical or, 'x or y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseLogicalOr(state) {\n      var node = parseLogicalXor(state);\n\n      while (state.token === 'or') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('or', 'or', [node, parseLogicalXor(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * logical exclusive or, 'x xor y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseLogicalXor(state) {\n      var node = parseLogicalAnd(state);\n\n      while (state.token === 'xor') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('xor', 'xor', [node, parseLogicalAnd(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * logical and, 'x and y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseLogicalAnd(state) {\n      var node = parseBitwiseOr(state);\n\n      while (state.token === 'and') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('and', 'and', [node, parseBitwiseOr(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * bitwise or, 'x | y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseBitwiseOr(state) {\n      var node = parseBitwiseXor(state);\n\n      while (state.token === '|') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('|', 'bitOr', [node, parseBitwiseXor(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * bitwise exclusive or (xor), 'x ^| y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseBitwiseXor(state) {\n      var node = parseBitwiseAnd(state);\n\n      while (state.token === '^|') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('^|', 'bitXor', [node, parseBitwiseAnd(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * bitwise and, 'x & y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseBitwiseAnd(state) {\n      var node = parseRelational(state);\n\n      while (state.token === '&') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('&', 'bitAnd', [node, parseRelational(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * Parse a chained conditional, like 'a > b >= c'\n     * @return {Node} node\n     */\n\n\n    function parseRelational(state) {\n      var params = [parseShift(state)];\n      var conditionals = [];\n      var operators = {\n        '==': 'equal',\n        '!=': 'unequal',\n        '<': 'smaller',\n        '>': 'larger',\n        '<=': 'smallerEq',\n        '>=': 'largerEq'\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        // eslint-disable-line no-unmodified-loop-condition\n        var cond = {\n          name: state.token,\n          fn: operators[state.token]\n        };\n        conditionals.push(cond);\n        getTokenSkipNewline(state);\n        params.push(parseShift(state));\n      }\n\n      if (params.length === 1) {\n        return params[0];\n      } else if (params.length === 2) {\n        return new OperatorNode$1(conditionals[0].name, conditionals[0].fn, params);\n      } else {\n        return new RelationalNode$1(conditionals.map(function (c) {\n          return c.fn;\n        }), params);\n      }\n    }\n    /**\n     * Bitwise left shift, bitwise right arithmetic shift, bitwise right logical shift\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseShift(state) {\n      var node, operators, name, fn, params;\n      node = parseConversion(state);\n      operators = {\n        '<<': 'leftShift',\n        '>>': 'rightArithShift',\n        '>>>': 'rightLogShift'\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        name = state.token;\n        fn = operators[name];\n        getTokenSkipNewline(state);\n        params = [node, parseConversion(state)];\n        node = new OperatorNode$1(name, fn, params);\n      }\n\n      return node;\n    }\n    /**\n     * conversion operators 'to' and 'in'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseConversion(state) {\n      var node, operators, name, fn, params;\n      node = parseRange(state);\n      operators = {\n        'to': 'to',\n        'in': 'to' // alias of 'to'\n\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        name = state.token;\n        fn = operators[name];\n        getTokenSkipNewline(state);\n\n        if (name === 'in' && state.token === '') {\n          // end of expression -> this is the unit 'in' ('inch')\n          node = new OperatorNode$1('*', 'multiply', [node, new SymbolNode$1('in')], true);\n        } else {\n          // operator 'a to b' or 'a in b'\n          params = [node, parseRange(state)];\n          node = new OperatorNode$1(name, fn, params);\n        }\n      }\n\n      return node;\n    }\n    /**\n     * parse range, \"start:end\", \"start:step:end\", \":\", \"start:\", \":end\", etc\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseRange(state) {\n      var node;\n      var params = [];\n\n      if (state.token === ':') {\n        // implicit start=1 (one-based)\n        node = new ConstantNode$1(1);\n      } else {\n        // explicit start\n        node = parseAddSubtract(state);\n      }\n\n      if (state.token === ':' && state.conditionalLevel !== state.nestingLevel) {\n        // we ignore the range operator when a conditional operator is being processed on the same level\n        params.push(node); // parse step and end\n\n        while (state.token === ':' && params.length < 3) {\n          // eslint-disable-line no-unmodified-loop-condition\n          getTokenSkipNewline(state);\n\n          if (state.token === ')' || state.token === ']' || state.token === ',' || state.token === '') {\n            // implicit end\n            params.push(new SymbolNode$1('end'));\n          } else {\n            // explicit end\n            params.push(parseAddSubtract(state));\n          }\n        }\n\n        if (params.length === 3) {\n          // params = [start, step, end]\n          node = new RangeNode$1(params[0], params[2], params[1]); // start, end, step\n        } else {\n          // length === 2\n          // params = [start, end]\n          node = new RangeNode$1(params[0], params[1]); // start, end\n        }\n      }\n\n      return node;\n    }\n    /**\n     * add or subtract\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseAddSubtract(state) {\n      var node, operators, name, fn, params;\n      node = parseMultiplyDivide(state);\n      operators = {\n        '+': 'add',\n        '-': 'subtract'\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        name = state.token;\n        fn = operators[name];\n        getTokenSkipNewline(state);\n        params = [node, parseMultiplyDivide(state)];\n        node = new OperatorNode$1(name, fn, params);\n      }\n\n      return node;\n    }\n    /**\n     * multiply, divide, modulus\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseMultiplyDivide(state) {\n      var node, last, operators, name, fn;\n      node = parseImplicitMultiplication(state);\n      last = node;\n      operators = {\n        '*': 'multiply',\n        '.*': 'dotMultiply',\n        '/': 'divide',\n        './': 'dotDivide',\n        '%': 'mod',\n        'mod': 'mod'\n      };\n\n      while (true) {\n        if (operators.hasOwnProperty(state.token)) {\n          // explicit operators\n          name = state.token;\n          fn = operators[name];\n          getTokenSkipNewline(state);\n          last = parseImplicitMultiplication(state);\n          node = new OperatorNode$1(name, fn, [node, last]);\n        } else {\n          break;\n        }\n      }\n\n      return node;\n    }\n    /**\n     * implicit multiplication\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseImplicitMultiplication(state) {\n      var node, last;\n      node = parseRule2(state);\n      last = node;\n\n      while (true) {\n        if (state.tokenType === TOKENTYPE.SYMBOL || state.token === 'in' && type.isConstantNode(node) || state.tokenType === TOKENTYPE.NUMBER && !type.isConstantNode(last) && (!type.isOperatorNode(last) || last.op === '!') || state.token === '(') {\n          // parse implicit multiplication\n          //\n          // symbol:      implicit multiplication like '2a', '(2+3)a', 'a b'\n          // number:      implicit multiplication like '(2+3)2'\n          // parenthesis: implicit multiplication like '2(3+4)', '(3+4)(1+2)'\n          last = parseRule2(state);\n          node = new OperatorNode$1('*', 'multiply', [node, last], true\n          /* implicit */\n          );\n        } else {\n          break;\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Infamous \"rule 2\" as described in https://github.com/josdejong/mathjs/issues/792#issuecomment-361065370\n     * Explicit division gets higher precedence than implicit multiplication\n     * when the division matches this pattern: [number] / [number] [symbol]\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseRule2(state) {\n      var node = parseUnary(state);\n      var last = node;\n      var tokenStates = [];\n\n      while (true) {\n        // Match the \"number /\" part of the pattern \"number / number symbol\"\n        if (state.token === '/' && type.isConstantNode(last)) {\n          // Look ahead to see if the next token is a number\n          tokenStates.push(_extends$2({}, state));\n          getTokenSkipNewline(state); // Match the \"number / number\" part of the pattern\n\n          if (state.tokenType === TOKENTYPE.NUMBER) {\n            // Look ahead again\n            tokenStates.push(_extends$2({}, state));\n            getTokenSkipNewline(state); // Match the \"symbol\" part of the pattern, or a left parenthesis\n\n            if (state.tokenType === TOKENTYPE.SYMBOL || state.token === '(') {\n              // We've matched the pattern \"number / number symbol\".\n              // Rewind once and build the \"number / number\" node; the symbol will be consumed later\n              _extends$2(state, tokenStates.pop());\n\n              tokenStates.pop();\n              last = parseUnary(state);\n              node = new OperatorNode$1('/', 'divide', [node, last]);\n            } else {\n              // Not a match, so rewind\n              tokenStates.pop();\n\n              _extends$2(state, tokenStates.pop());\n\n              break;\n            }\n          } else {\n            // Not a match, so rewind\n            _extends$2(state, tokenStates.pop());\n\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Unary plus and minus, and logical and bitwise not\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseUnary(state) {\n      var name, params, fn;\n      var operators = {\n        '-': 'unaryMinus',\n        '+': 'unaryPlus',\n        '~': 'bitNot',\n        'not': 'not'\n      };\n\n      if (operators.hasOwnProperty(state.token)) {\n        fn = operators[state.token];\n        name = state.token;\n        getTokenSkipNewline(state);\n        params = [parseUnary(state)];\n        return new OperatorNode$1(name, fn, params);\n      }\n\n      return parsePow(state);\n    }\n    /**\n     * power\n     * Note: power operator is right associative\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parsePow(state) {\n      var node, name, fn, params;\n      node = parseLeftHandOperators(state);\n\n      if (state.token === '^' || state.token === '.^') {\n        name = state.token;\n        fn = name === '^' ? 'pow' : 'dotPow';\n        getTokenSkipNewline(state);\n        params = [node, parseUnary(state)]; // Go back to unary, we can have '2^-3'\n\n        node = new OperatorNode$1(name, fn, params);\n      }\n\n      return node;\n    }\n    /**\n     * Left hand operators: factorial x!, ctranspose x'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseLeftHandOperators(state) {\n      var node, operators, name, fn, params;\n      node = parseCustomNodes(state);\n      operators = {\n        '!': 'factorial',\n        '\\'': 'ctranspose'\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        name = state.token;\n        fn = operators[name];\n        getToken(state);\n        params = [node];\n        node = new OperatorNode$1(name, fn, params);\n        node = parseAccessors(state, node);\n      }\n\n      return node;\n    }\n    /**\n     * Parse a custom node handler. A node handler can be used to process\n     * nodes in a custom way, for example for handling a plot.\n     *\n     * A handler must be passed as second argument of the parse function.\n     * - must extend math.expression.node.Node\n     * - must contain a function _compile(defs: Object) : string\n     * - must contain a function find(filter: Object) : Node[]\n     * - must contain a function toString() : string\n     * - the constructor is called with a single argument containing all parameters\n     *\n     * For example:\n     *\n     *     nodes = {\n     *       'plot': PlotHandler\n     *     }\n     *\n     * The constructor of the handler is called as:\n     *\n     *     node = new PlotHandler(params)\n     *\n     * The handler will be invoked when evaluating an expression like:\n     *\n     *     node = math.parse('plot(sin(x), x)', nodes)\n     *\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseCustomNodes(state) {\n      var params = [];\n\n      if (state.tokenType === TOKENTYPE.SYMBOL && state.extraNodes.hasOwnProperty(state.token)) {\n        var CustomNode = state.extraNodes[state.token];\n        getToken(state); // parse parameters\n\n        if (state.token === '(') {\n          params = [];\n          openParams(state);\n          getToken(state);\n\n          if (state.token !== ')') {\n            params.push(parseAssignment(state)); // parse a list with parameters\n\n            while (state.token === ',') {\n              // eslint-disable-line no-unmodified-loop-condition\n              getToken(state);\n              params.push(parseAssignment(state));\n            }\n          }\n\n          if (state.token !== ')') {\n            throw createSyntaxError(state, 'Parenthesis ) expected');\n          }\n\n          closeParams(state);\n          getToken(state);\n        } // create a new custom node\n        // noinspection JSValidateTypes\n\n\n        return new CustomNode(params);\n      }\n\n      return parseSymbol(state);\n    }\n    /**\n     * parse symbols: functions, variables, constants, units\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseSymbol(state) {\n      var node, name;\n\n      if (state.tokenType === TOKENTYPE.SYMBOL || state.tokenType === TOKENTYPE.DELIMITER && state.token in NAMED_DELIMITERS) {\n        name = state.token;\n        getToken(state);\n\n        if (CONSTANTS.hasOwnProperty(name)) {\n          // true, false, null, ...\n          node = new ConstantNode$1(CONSTANTS[name]);\n        } else if (NUMERIC_CONSTANTS.indexOf(name) !== -1) {\n          // NaN, Infinity\n          node = new ConstantNode$1(numeric$1(name, 'number'));\n        } else {\n          node = new SymbolNode$1(name);\n        } // parse function parameters and matrix index\n\n\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseDoubleQuotesString(state);\n    }\n    /**\n     * parse accessors:\n     * - function invocation in round brackets (...), for example sqrt(2)\n     * - index enclosed in square brackets [...], for example A[2,3]\n     * - dot notation for properties, like foo.bar\n     * @param {Node} node    Node on which to apply the parameters. If there\n     *                       are no parameters in the expression, the node\n     *                       itself is returned\n     * @param {string[]} [types]  Filter the types of notations\n     *                            can be ['(', '[', '.']\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseAccessors(state, node, types) {\n      var params;\n\n      while ((state.token === '(' || state.token === '[' || state.token === '.') && (!types || types.indexOf(state.token) !== -1)) {\n        // eslint-disable-line no-unmodified-loop-condition\n        params = [];\n\n        if (state.token === '(') {\n          if (type.isSymbolNode(node) || type.isAccessorNode(node)) {\n            // function invocation like fn(2, 3) or obj.fn(2, 3)\n            openParams(state);\n            getToken(state);\n\n            if (state.token !== ')') {\n              params.push(parseAssignment(state)); // parse a list with parameters\n\n              while (state.token === ',') {\n                // eslint-disable-line no-unmodified-loop-condition\n                getToken(state);\n                params.push(parseAssignment(state));\n              }\n            }\n\n            if (state.token !== ')') {\n              throw createSyntaxError(state, 'Parenthesis ) expected');\n            }\n\n            closeParams(state);\n            getToken(state);\n            node = new FunctionNode$1(node, params);\n          } else {\n            // implicit multiplication like (2+3)(4+5) or sqrt(2)(1+2)\n            // don't parse it here but let it be handled by parseImplicitMultiplication\n            // with correct precedence\n            return node;\n          }\n        } else if (state.token === '[') {\n          // index notation like variable[2, 3]\n          openParams(state);\n          getToken(state);\n\n          if (state.token !== ']') {\n            params.push(parseAssignment(state)); // parse a list with parameters\n\n            while (state.token === ',') {\n              // eslint-disable-line no-unmodified-loop-condition\n              getToken(state);\n              params.push(parseAssignment(state));\n            }\n          }\n\n          if (state.token !== ']') {\n            throw createSyntaxError(state, 'Parenthesis ] expected');\n          }\n\n          closeParams(state);\n          getToken(state);\n          node = new AccessorNode$1(node, new IndexNode$1(params));\n        } else {\n          // dot notation like variable.prop\n          getToken(state);\n\n          if (state.tokenType !== TOKENTYPE.SYMBOL) {\n            throw createSyntaxError(state, 'Property name expected after dot');\n          }\n\n          params.push(new ConstantNode$1(state.token));\n          getToken(state);\n          var dotNotation = true;\n          node = new AccessorNode$1(node, new IndexNode$1(params, dotNotation));\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Parse a double quotes string.\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseDoubleQuotesString(state) {\n      var node, str;\n\n      if (state.token === '\"') {\n        str = parseDoubleQuotesStringToken(state); // create constant\n\n        node = new ConstantNode$1(str); // parse index parameters\n\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseSingleQuotesString(state);\n    }\n    /**\n     * Parse a string surrounded by double quotes \"...\"\n     * @return {string}\n     */\n\n\n    function parseDoubleQuotesStringToken(state) {\n      var str = '';\n\n      while (currentCharacter(state) !== '' && currentCharacter(state) !== '\"') {\n        if (currentCharacter(state) === '\\\\') {\n          // escape character, immediately process the next\n          // character to prevent stopping at a next '\\\"'\n          str += currentCharacter(state);\n          next(state);\n        }\n\n        str += currentCharacter(state);\n        next(state);\n      }\n\n      getToken(state);\n\n      if (state.token !== '\"') {\n        throw createSyntaxError(state, 'End of string \" expected');\n      }\n\n      getToken(state);\n      return JSON.parse('\"' + str + '\"'); // unescape escaped characters\n    }\n    /**\n     * Parse a single quotes string.\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseSingleQuotesString(state) {\n      var node, str;\n\n      if (state.token === '\\'') {\n        str = parseSingleQuotesStringToken(state); // create constant\n\n        node = new ConstantNode$1(str); // parse index parameters\n\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseMatrix(state);\n    }\n    /**\n     * Parse a string surrounded by single quotes '...'\n     * @return {string}\n     */\n\n\n    function parseSingleQuotesStringToken(state) {\n      var str = '';\n\n      while (currentCharacter(state) !== '' && currentCharacter(state) !== '\\'') {\n        if (currentCharacter(state) === '\\\\') {\n          // escape character, immediately process the next\n          // character to prevent stopping at a next '\\''\n          str += currentCharacter(state);\n          next(state);\n        }\n\n        str += currentCharacter(state);\n        next(state);\n      }\n\n      getToken(state);\n\n      if (state.token !== '\\'') {\n        throw createSyntaxError(state, 'End of string \\' expected');\n      }\n\n      getToken(state);\n      return JSON.parse('\"' + str + '\"'); // unescape escaped characters\n    }\n    /**\n     * parse the matrix\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseMatrix(state) {\n      var array, params, rows, cols;\n\n      if (state.token === '[') {\n        // matrix [...]\n        openParams(state);\n        getToken(state);\n\n        if (state.token !== ']') {\n          // this is a non-empty matrix\n          var row = parseRow(state);\n\n          if (state.token === ';') {\n            // 2 dimensional array\n            rows = 1;\n            params = [row]; // the rows of the matrix are separated by dot-comma's\n\n            while (state.token === ';') {\n              // eslint-disable-line no-unmodified-loop-condition\n              getToken(state);\n              params[rows] = parseRow(state);\n              rows++;\n            }\n\n            if (state.token !== ']') {\n              throw createSyntaxError(state, 'End of matrix ] expected');\n            }\n\n            closeParams(state);\n            getToken(state); // check if the number of columns matches in all rows\n\n            cols = params[0].items.length;\n\n            for (var r = 1; r < rows; r++) {\n              if (params[r].items.length !== cols) {\n                throw createError(state, 'Column dimensions mismatch ' + '(' + params[r].items.length + ' !== ' + cols + ')');\n              }\n            }\n\n            array = new ArrayNode$1(params);\n          } else {\n            // 1 dimensional vector\n            if (state.token !== ']') {\n              throw createSyntaxError(state, 'End of matrix ] expected');\n            }\n\n            closeParams(state);\n            getToken(state);\n            array = row;\n          }\n        } else {\n          // this is an empty matrix \"[ ]\"\n          closeParams(state);\n          getToken(state);\n          array = new ArrayNode$1([]);\n        }\n\n        return parseAccessors(state, array);\n      }\n\n      return parseObject(state);\n    }\n    /**\n     * Parse a single comma-separated row from a matrix, like 'a, b, c'\n     * @return {ArrayNode} node\n     */\n\n\n    function parseRow(state) {\n      var params = [parseAssignment(state)];\n      var len = 1;\n\n      while (state.token === ',') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getToken(state); // parse expression\n\n        params[len] = parseAssignment(state);\n        len++;\n      }\n\n      return new ArrayNode$1(params);\n    }\n    /**\n     * parse an object, enclosed in angle brackets{...}, for example {value: 2}\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseObject(state) {\n      if (state.token === '{') {\n        openParams(state);\n        var key;\n        var properties = {};\n\n        do {\n          getToken(state);\n\n          if (state.token !== '}') {\n            // parse key\n            if (state.token === '\"') {\n              key = parseDoubleQuotesStringToken(state);\n            } else if (state.token === '\\'') {\n              key = parseSingleQuotesStringToken(state);\n            } else if (state.tokenType === TOKENTYPE.SYMBOL) {\n              key = state.token;\n              getToken(state);\n            } else {\n              throw createSyntaxError(state, 'Symbol or string expected as object key');\n            } // parse key/value separator\n\n\n            if (state.token !== ':') {\n              throw createSyntaxError(state, 'Colon : expected after object key');\n            }\n\n            getToken(state); // parse key\n\n            properties[key] = parseAssignment(state);\n          }\n        } while (state.token === ','); // eslint-disable-line no-unmodified-loop-condition\n\n\n        if (state.token !== '}') {\n          throw createSyntaxError(state, 'Comma , or bracket } expected after object value');\n        }\n\n        closeParams(state);\n        getToken(state);\n        var node = new ObjectNode$1(properties); // parse index parameters\n\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseNumber(state);\n    }\n    /**\n     * parse a number\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseNumber(state) {\n      var numberStr;\n\n      if (state.tokenType === TOKENTYPE.NUMBER) {\n        // this is a number\n        numberStr = state.token;\n        getToken(state);\n        return new ConstantNode$1(numeric$1(numberStr, config.number));\n      }\n\n      return parseParentheses(state);\n    }\n    /**\n     * parentheses\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseParentheses(state) {\n      var node; // check if it is a parenthesized expression\n\n      if (state.token === '(') {\n        // parentheses (...)\n        openParams(state);\n        getToken(state);\n        node = parseAssignment(state); // start again\n\n        if (state.token !== ')') {\n          throw createSyntaxError(state, 'Parenthesis ) expected');\n        }\n\n        closeParams(state);\n        getToken(state);\n        node = new ParenthesisNode$1(node);\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseEnd(state);\n    }\n    /**\n     * Evaluated when the expression is not yet ended but expected to end\n     * @return {Node} res\n     * @private\n     */\n\n\n    function parseEnd(state) {\n      if (state.token === '') {\n        // syntax error or unexpected end of expression\n        throw createSyntaxError(state, 'Unexpected end of expression');\n      } else {\n        throw createSyntaxError(state, 'Value expected');\n      }\n    }\n    /**\n     * Shortcut for getting the current row value (one based)\n     * Returns the line of the currently handled expression\n     * @private\n     */\n\n    /* TODO: implement keeping track on the row number\n    function row () {\n      return null\n    }\n    */\n\n    /**\n     * Shortcut for getting the current col value (one based)\n     * Returns the column (position) where the last state.token starts\n     * @private\n     */\n\n\n    function col(state) {\n      return state.index - state.token.length + 1;\n    }\n    /**\n     * Create an error\n     * @param {string} message\n     * @return {SyntaxError} instantiated error\n     * @private\n     */\n\n\n    function createSyntaxError(state, message) {\n      var c = col(state);\n      var error = new SyntaxError(message + ' (char ' + c + ')');\n      error['char'] = c;\n      return error;\n    }\n    /**\n     * Create an error\n     * @param {string} message\n     * @return {Error} instantiated error\n     * @private\n     */\n\n\n    function createError(state, message) {\n      var c = col(state);\n      var error = new SyntaxError(message + ' (char ' + c + ')');\n      error['char'] = c;\n      return error;\n    }\n\n    return parse;\n  }\n\n  var name$r = 'parse';\n  var path$j = 'expression';\n  var factory_1$t = factory$t;\n\n  var parse = {\n  \tname: name$r,\n  \tpath: path$j,\n  \tfactory: factory_1$t\n  };\n\n  function factory$u(type, config, load, typed) {\n    var parse$1 = load(parse);\n    /**\n     * Parse an expression. Returns a node tree, which can be evaluated by\n     * invoking node.eval().\n     *\n     * Note the evaluating arbitrary expressions may involve security risks,\n     * see [https://mathjs.org/docs/expressions/security.html](https://mathjs.org/docs/expressions/security.html) for more information.\n     *\n     * Syntax:\n     *\n     *     math.parse(expr)\n     *     math.parse(expr, options)\n     *     math.parse([expr1, expr2, expr3, ...])\n     *     math.parse([expr1, expr2, expr3, ...], options)\n     *\n     * Example:\n     *\n     *     const node1 = math.parse('sqrt(3^2 + 4^2)')\n     *     node1.compile().eval() // 5\n     *\n     *     let scope = {a:3, b:4}\n     *     const node2 = math.parse('a * b') // 12\n     *     const code2 = node2.compile()\n     *     code2.eval(scope) // 12\n     *     scope.a = 5\n     *     code2.eval(scope) // 20\n     *\n     *     const nodes = math.parse(['a = 3', 'b = 4', 'a * b'])\n     *     nodes[2].compile().eval() // 12\n     *\n     * See also:\n     *\n     *     eval, compile\n     *\n     * @param {string | string[] | Matrix} expr          Expression to be parsed\n     * @param {{nodes: Object<string, Node>}} [options]  Available options:\n     *                                                   - `nodes` a set of custom nodes\n     * @return {Node | Node[]} node\n     * @throws {Error}\n     */\n\n    return typed('parse', {\n      'string | Array | Matrix': parse$1,\n      'string | Array | Matrix, Object': parse$1\n    });\n  }\n\n  var name$s = 'parse';\n  var factory_1$u = factory$u;\n\n  var parse$1 = {\n  \tname: name$s,\n  \tfactory: factory_1$u\n  };\n\n  function factory$v(type, config, load, typed) {\n    var parse$1 = load(parse);\n    /**\n     * Parse and compile an expression.\n     * Returns a an object with a function `eval([scope])` to evaluate the\n     * compiled expression.\n     *\n     * Syntax:\n     *\n     *     math.compile(expr)                       // returns one node\n     *     math.compile([expr1, expr2, expr3, ...]) // returns an array with nodes\n     *\n     * Examples:\n     *\n     *     const code1 = math.compile('sqrt(3^2 + 4^2)')\n     *     code1.eval() // 5\n     *\n     *     let scope = {a: 3, b: 4}\n     *     const code2 = math.compile('a * b') // 12\n     *     code2.eval(scope) // 12\n     *     scope.a = 5\n     *     code2.eval(scope) // 20\n     *\n     *     const nodes = math.compile(['a = 3', 'b = 4', 'a * b'])\n     *     nodes[2].eval() // 12\n     *\n     * See also:\n     *\n     *    parse, eval\n     *\n     * @param {string | string[] | Array | Matrix} expr\n     *            The expression to be compiled\n     * @return {{eval: Function} | Array.<{eval: Function}>} code\n     *            An object with the compiled expression\n     * @throws {Error}\n     */\n\n    return typed('compile', {\n      'string': function string(expr) {\n        return parse$1(expr).compile();\n      },\n      'Array | Matrix': function ArrayMatrix(expr) {\n        return deepMap(expr, function (entry) {\n          return parse$1(entry).compile();\n        });\n      }\n    });\n  }\n\n  var name$t = 'compile';\n  var factory_1$v = factory$v;\n\n  var compile = {\n  \tname: name$t,\n  \tfactory: factory_1$v\n  };\n\n  function factory$w(type, config, load, typed) {\n    var parse$1 = load(parse);\n    /**\n     * Evaluate an expression.\n     *\n     * Note the evaluating arbitrary expressions may involve security risks,\n     * see [https://mathjs.org/docs/expressions/security.html](https://mathjs.org/docs/expressions/security.html) for more information.\n     *\n     * Syntax:\n     *\n     *     math.eval(expr)\n     *     math.eval(expr, scope)\n     *     math.eval([expr1, expr2, expr3, ...])\n     *     math.eval([expr1, expr2, expr3, ...], scope)\n     *\n     * Example:\n     *\n     *     math.eval('(2+3)/4')                // 1.25\n     *     math.eval('sqrt(3^2 + 4^2)')        // 5\n     *     math.eval('sqrt(-4)')               // 2i\n     *     math.eval(['a=3', 'b=4', 'a*b'])    // [3, 4, 12]\n     *\n     *     let scope = {a:3, b:4}\n     *     math.eval('a * b', scope)           // 12\n     *\n     * See also:\n     *\n     *    parse, compile\n     *\n     * @param {string | string[] | Matrix} expr   The expression to be evaluated\n     * @param {Object} [scope]                    Scope to read/write variables\n     * @return {*} The result of the expression\n     * @throws {Error}\n     */\n\n    return typed('compile', {\n      'string': function string(expr) {\n        var scope = {};\n        return parse$1(expr).compile().eval(scope);\n      },\n      'string, Object': function stringObject(expr, scope) {\n        return parse$1(expr).compile().eval(scope);\n      },\n      'Array | Matrix': function ArrayMatrix(expr) {\n        var scope = {};\n        return deepMap(expr, function (entry) {\n          return parse$1(entry).compile().eval(scope);\n        });\n      },\n      'Array | Matrix, Object': function ArrayMatrixObject(expr, scope) {\n        return deepMap(expr, function (entry) {\n          return parse$1(entry).compile().eval(scope);\n        });\n      }\n    });\n  }\n\n  var name$u = 'eval';\n  var factory_1$w = factory$w;\n\n  var _eval = {\n  \tname: name$u,\n  \tfactory: factory_1$w\n  };\n\n  function factory$x(type, config, load, typed) {\n    /**\n     * Format a value of any type into a string.\n     *\n     * Syntax:\n     *\n     *    math.format(value)\n     *    math.format(value, options)\n     *    math.format(value, precision)\n     *    math.format(value, callback)\n     *\n     * Where:\n     *\n     *  - `value: *`\n     *    The value to be formatted\n     *  - `options: Object`\n     *    An object with formatting options. Available options:\n     *    - `notation: string`\n     *      Number notation. Choose from:\n     *      - 'fixed'\n     *        Always use regular number notation.\n     *        For example '123.40' and '14000000'\n     *      - 'exponential'\n     *        Always use exponential notation.\n     *        For example '1.234e+2' and '1.4e+7'\n     *      - 'engineering'\n     *        Always use engineering notation.\n     *        For example '123.4e+0' and '14.0e+6'\n     *      - 'auto' (default)\n     *        Regular number notation for numbers having an absolute value between\n     *        `lower` and `upper` bounds, and uses exponential notation elsewhere.\n     *        Lower bound is included, upper bound is excluded.\n     *        For example '123.4' and '1.4e7'.\n     *    - `precision: number`\n     *      A number between 0 and 16 to round the digits of the number. In case\n     *      of notations 'exponential', 'engineering', and 'auto', `precision`\n     *      defines the total number of significant digits returned.\n     *      In case of notation 'fixed', `precision` defines the number of\n     *      significant digits after the decimal point.\n     *      `precision` is undefined by default.\n     *    - `lowerExp: number`\n     *      Exponent determining the lower boundary for formatting a value with\n     *      an exponent when `notation='auto`. Default value is `-3`.\n     *    - `upperExp: number`\n     *      Exponent determining the upper boundary for formatting a value with\n     *      an exponent when `notation='auto`. Default value is `5`.\n     *    - `fraction: string`. Available values: 'ratio' (default) or 'decimal'.\n     *      For example `format(fraction(1, 3))` will output '1/3' when 'ratio' is\n     *      configured, and will output `0.(3)` when 'decimal' is configured.\n     * - `callback: function`\n     *   A custom formatting function, invoked for all numeric elements in `value`,\n     *   for example all elements of a matrix, or the real and imaginary\n     *   parts of a complex number. This callback can be used to override the\n     *   built-in numeric notation with any type of formatting. Function `callback`\n     *   is called with `value` as parameter and must return a string.\n     *\n     * When `value` is an Object:\n     *\n     * - When the object contains a property `format` being a function, this function\n     *   is invoked as `value.format(options)` and the result is returned.\n     * - When the object has its own `toString` method, this method is invoked\n     *   and the result is returned.\n     * - In other cases the function will loop over all object properties and\n     *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n     *\n     * When value is a function:\n     *\n     * - When the function has a property `syntax`, it returns this\n     *   syntax description.\n     * - In other cases, a string `'function'` is returned.\n     *\n     * Examples:\n     *\n     *    math.format(6.4)                                        // returns '6.4'\n     *    math.format(1240000)                                    // returns '1.24e6'\n     *    math.format(1/3)                                        // returns '0.3333333333333333'\n     *    math.format(1/3, 3)                                     // returns '0.333'\n     *    math.format(21385, 2)                                   // returns '21000'\n     *    math.format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n     *    math.format(2.3,  {notation: 'fixed', precision: 4})    // returns '2.3000'\n     *    math.format(52.8, {notation: 'exponential'})            // returns '5.28e+1'\n     *    math.format(12400,{notation: 'engineering'})            // returns '12.400e+3'\n     *    math.format(2000, {lowerExp: -2, upperExp: 2})          // returns '2e+3'\n     *\n     *    function formatCurrency(value) {\n     *      // return currency notation with two digits:\n     *      return '$' + value.toFixed(2)\n     *\n     *      // you could also use math.format inside the callback:\n     *      // return '$' + math.format(value, {notation: 'fixed', precision: 2})\n     *    }\n     *    math.format([2.1, 3, 0.016], formatCurrency}            // returns '[$2.10, $3.00, $0.02]'\n     *\n     * See also:\n     *\n     *    print\n     *\n     * @param {*} value                               Value to be stringified\n     * @param {Object | Function | number} [options]  Formatting options\n     * @return {string} The formatted value\n     */\n    var format = typed('format', {\n      'any': string.format,\n      'any, Object | function | number': string.format\n    });\n    format.toTex = undefined; // use default template\n\n    return format;\n  }\n\n  var name$v = 'format';\n  var factory_1$x = factory$x;\n\n  var format$1 = {\n  \tname: name$v,\n  \tfactory: factory_1$x\n  };\n\n  // Load the math.js core\n\n\n  // Create a new, empty math.js instance\n  // It will only contain methods `import` and `config`\n  var math$5 = core$1.create();\n\n  math$5.import(parse$1);\n  math$5.import(compile);\n  math$5.import(_eval);\n\n  math$5.import(format$1);\n\n  // create simple functions for all operators\n  math$5.import({\n    // arithmetic\n    add:        function (a, b) { return a + b },\n    subtract:   function (a, b) { return a - b },\n    multiply:   function (a, b) { return a * b },\n    divide:     function (a, b) { return a / b },\n    mod:        function (a, b) { return a % b },\n    unaryPlus:  function (a) { return  a },\n    unaryMinus: function (a) { return -a },\n\n    // bitwise\n    bitOr:           function (a, b) { return a | b },\n    bitXor:          function (a, b) { return a ^ b },\n    bitAnd:          function (a, b) { return a & b },\n    bitNot:          function (a) { return ~a },\n    leftShift:       function (a, b) { return a << b },\n    rightArithShift: function (a, b) { return a >> b },\n    rightLogShift:   function (a, b) { return a >>> b },\n\n    // logical\n    or:  function (a, b) { return !!(a || b) },\n    xor: function (a, b) { return !!a !== !!b },\n    and: function (a, b) { return !!(a && b) },\n    not: function (a) { return !a },\n\n    // relational\n    equal:     function (a, b) { return a == b },\n    unequal:   function (a, b) { return a != b },\n    smaller:   function (a, b) { return a < b },\n    larger:    function (a, b) { return a > b },\n    smallerEq: function (a, b) { return a <= b },\n    largerEq:  function (a, b) { return a >= b },\n\n    // matrix\n    // matrix: function (a) { return a },\n    matrix: function () { \n      throw new Error('Matrices not supported')\n    },\n    index: function () {\n      // TODO: create a simple index function\n      throw new Error('Matrix indexes not supported')\n    },\n\n    // add pi and e as lowercase\n    pi: Math.PI,\n    e: Math.E,\n    'true': true,\n    'false': false,\n    'null': null\n  });\n\n  // import everything from Math (like trigonometric functions)\n  var allFromMath = {};\n  Object.getOwnPropertyNames(Math).forEach(function (name) {\n    // filter out stuff like Firefox's \"toSource\" method.\n    if (!Object.prototype.hasOwnProperty(name)) {\n      allFromMath[name] = Math[name];\n    }\n  });\n  math$5.import(allFromMath);\n\n  var mathjsExpressionParser = math$5;\n\n  /**\n   * A DiceParser object, which takes a notation\n   * and parses it in to dice and modifiers\n   *\n   * @type {Parser}\n   */\n\n  var Parser = function () {\n    /**\n     * (Hopefully) temporary method for converting parsed notation\n     * into proper class objects.\n     * Currently the PEG parser returns generic objects, but we need\n     * our class objects like `StandardDice`.\n     * Once we have the PEG parser able to return class objects, this\n     * method can be removed.\n     *\n     * @param {*} expression\n     * @returns {*}\n     */\n    var parseExpression = function parseExpression(expression) {\n      if (Array.isArray(expression)) {\n        // loop through each array item and parse it\n        return expression.map(function (item) {\n          return parseExpression(item);\n        });\n      } else if (expression instanceof Object) {\n        if (expression.type === 'dice') {\n          // @todo calculation of sides and qty should be done in grammar as they should only be simple equations\n          var sides = parseExpression(expression.sides);\n          sides = Array.isArray(sides) ? sides.join('') : sides;\n          var qty = parseExpression(expression.qty);\n          qty = mathjsExpressionParser.eval(Array.isArray(qty) ? qty.join('') : qty); // parse the modifiers to proper objects\n\n          expression.modifiers = Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(expression.modifiers).map(function (k) {\n            return _defineProperty({}, k, parseExpression(expression.modifiers[k]));\n          }))));\n\n          switch (expression.subType) {\n            case 'standard':\n              return new StandardDice(expression.notation, mathjsExpressionParser.eval(sides), qty, expression.modifiers);\n\n            case 'percentile':\n              return new PercentileDice(expression.notation, qty, expression.modifiers);\n\n            case 'fudge':\n              return new FudgeDice(expression.notation, mathjsExpressionParser.eval(sides), qty, expression.modifiers);\n\n            default:\n              throw Error(\"Parser: Dice type was not recognised\");\n          }\n        } else if (expression.type === 'group') {\n          expression.expressions = parseExpression(expression.expressions); // parse the modifiers to proper objects\n\n          expression.modifiers = Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(expression.modifiers).map(function (k) {\n            return _defineProperty({}, k, parseExpression(expression.modifiers[k]));\n          }))));\n          return new RollGroup(expression.notation, expression.expressions, expression.modifiers);\n        } else if (expression.type === 'modifier') {\n          switch (expression.subType) {\n            case 'drop':\n              return new DropModifier(expression.notation, expression.end, expression.qty);\n\n            case 'explode':\n              expression.comparePoint = parseExpression(expression.comparePoint);\n              return new ExplodeModifier(expression.notation, expression.comparePoint, expression.compound, expression.penetrate);\n\n            case 'keep':\n              return new KeepModifier(expression.notation, expression.end, expression.qty);\n\n            case 'target':\n              expression.successCP = parseExpression(expression.successCP);\n              expression.failureCP = expression.failureCP ? parseExpression(expression.failureCP) : null;\n              return new TargetModifier(expression.notation, expression.successCP, expression.failureCP);\n\n            case 're-roll':\n              expression.comparePoint = parseExpression(expression.comparePoint);\n              return new ReRollModifier(expression.notation, expression.once, expression.comparePoint);\n\n            case 'critical-success':\n              expression.comparePoint = parseExpression(expression.comparePoint);\n              return new CriticalSuccessModifier(expression.notation, expression.comparePoint);\n\n            case 'critical-failure':\n              expression.comparePoint = parseExpression(expression.comparePoint);\n              return new CriticalFailureModifier(expression.notation, expression.comparePoint);\n\n            case 'sort':\n              return new SortingModifier(expression.notation, expression.direction);\n          }\n        } else if (expression.type === 'compare-point') {\n          return new ComparePoint(expression.operator, expression.value);\n        }\n      }\n\n      return expression;\n    };\n    /**\n     * A DiceParser object, which takes a notation\n     * and parses it in to rolls\n     *\n     * @param {string|Object} notation  The dice notation or object\n     */\n\n\n    var Parser =\n    /*#__PURE__*/\n    function () {\n      function Parser() {\n        _classCallCheck(this, Parser);\n      }\n\n      _createClass(Parser, null, [{\n        key: \"parse\",\n\n        /** Public methods **/\n\n        /**\n         * Parses the given dice notation\n         * and returns a list of dice and modifiers found\n         *\n         * @link https://en.m.wikipedia.org/wiki/Dice_notation\n         * @param {string} notation\n         * @returns {Array}\n         */\n        value: function parse(notation) {\n          if (!notation) {\n            throw Error('Notation is required');\n          } else if (typeof notation !== 'string') {\n            throw Error('Notation must be a string');\n          } // parse the notation\n\n\n          var parsed = grammar_1(notation); // (Hopefully) temporary solution to parse the generic objects into class instances\n\n          return parseExpression(parsed);\n        }\n      }]);\n\n      return Parser;\n    }();\n\n    return Parser;\n  }();\n\n  var DiceRoll = function () {\n    /**\n     * @type {symbol}\n     *\n     * @private\n     */\n    var _calculateTotal = Symbol('calculateTotals');\n    /**\n     * The notation\n     *\n     * @type {symbol}\n     *\n     * @private\n     */\n\n\n    var _notation = Symbol('notation');\n    /**\n     * List of dice definition objects\n     *\n     * @type {symbol}\n     *\n     * @private\n     */\n\n\n    var _parsedNotation = Symbol('parsed-notation');\n    /**\n     * List of rolls\n     *\n     * @type {symbol}\n     *\n     * @private\n     */\n\n\n    var _rolls = Symbol('rolls');\n    /**\n     * The roll total\n     *\n     * @type {symbol}\n     *\n     * @private\n     */\n\n\n    var _total = Symbol('totals');\n\n    var DiceRoll =\n    /*#__PURE__*/\n    function () {\n      /**\n       * Parses the notation and rolls the dice\n       *\n       * @param notation\n       */\n      function DiceRoll(notation) {\n        _classCallCheck(this, DiceRoll);\n\n        if (!notation) {\n          throw new Error('Notation is required');\n        } // initialise the parsed dice array\n\n\n        this[_parsedNotation] = [];\n\n        if (notation instanceof Object && !Array.isArray(notation)) {\n          // validate object\n          // @todo see if we can assert that the notation is valid\n          if (!notation.notation) {\n            // object doesn't contain a notation property\n            throw new Error('Notation is required');\n          } else if (typeof notation.notation !== 'string') {\n            throw new Error(\"Notation is not valid: \".concat(notation.notation));\n          } else if (notation.rolls) {\n            // we have rolls - validate them\n            if (!Array.isArray(notation.rolls)) {\n              // rolls is not an array\n              throw new Error(\"Rolls must be an Array: \".concat(notation.rolls));\n            } else {\n              // if roll is a RollResults, return it, otherwise try to convert to a RollResults object\n              this[_rolls] = notation.rolls.map(function (roll) {\n                if (roll instanceof RollResults) {\n                  // already a RollResults object\n                  return roll;\n                } else if (Array.isArray(roll)) {\n                  // array of values\n                  return new RollResults(roll);\n                } else if (roll instanceof Object && Array.isArray(roll.rolls)) {\n                  // object with list of rolls\n                  return new RollResults(roll.rolls);\n                }\n              });\n            }\n          } // store the notation\n\n\n          this[_notation] = notation.notation; // parse the notation\n\n          this[_parsedNotation] = Parser.parse(this.notation);\n\n          if (!this[_rolls] || !this[_rolls].length) {\n            // ensure rolls is an empty array\n            this[_rolls] = []; // roll the dice\n\n            this.roll();\n          }\n        } else if (typeof notation === 'string') {\n          // @todo see if we can assert that the notation is valid\n          // store the notation\n          this[_notation] = notation; // empty the current rolls\n\n          this[_rolls] = []; // parse the notation\n\n          this[_parsedNotation] = Parser.parse(this.notation); // roll the dice\n\n          this.roll();\n        } else {\n          throw new Error(\"Notation is not valid: \".concat(notation));\n        }\n      }\n      /*************************\n       * Static Methods\n       *************************/\n\n      /**\n       * Imports the given dice roll data and builds an object from it.\n       *\n       * Throws Error on failure\n       *\n       * @param {{}|string|DiceRoll} data The data to import\n       *\n       * @throws Error\n       *\n       * @returns {DiceRoll}\n       */\n\n\n      _createClass(DiceRoll, [{\n        key: \"export\",\n\n        /*************************\n         * Public methods\n         *************************/\n\n        /**\n         * Exports the DiceRoll in the given format.\n         * If no format is specified, JSON is returned.\n         *\n         * @throws Error\n         * @param {exportFormats=} format The format to export the data as (ie. JSON, base64)\n         * @returns {string|null}\n         */\n        value: function _export() {\n          var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exportFormats.JSON;\n\n          switch (format) {\n            case exportFormats.BASE_64:\n              // JSON encode, then base64, otherwise it exports the string representation of the roll output\n              return btoa(this.export(exportFormats.JSON));\n\n            case exportFormats.JSON:\n              return JSON.stringify(this);\n\n            case exportFormats.OBJECT:\n              return JSON.parse(this.export(exportFormats.JSON));\n\n            default:\n              throw new Error(\"Unrecognised export format: \".concat(format));\n          }\n        }\n        /**\n         * Returns whether the object has rolled dice or not\n         *\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"hasRolls\",\n        value: function hasRolls() {\n          return !!(this[_parsedNotation] && Array.isArray(this.rolls) && this.rolls.length);\n        }\n        /**\n         * Rolls the dice for the existing notation.\n         * This is useful if you want to re-roll the dice,\n         * for some reason, but it's usually better to\n         * create a new DiceRoll instance instead.\n         *\n         * @returns {Array}\n         */\n\n      }, {\n        key: \"roll\",\n        value: function roll() {\n          // clear the roll log\n          this[_rolls] = []; // reset the cached total\n\n          this[_total] = 0; // saved the rolls to the log\n\n          this[_rolls] = this[_parsedNotation].map(function (item) {\n            if (item instanceof StandardDice || item instanceof RollGroup) {\n              // roll the object and return the value\n              return item.roll();\n            }\n          }).filter(Boolean); // return the rolls;\n\n          return this[_rolls];\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var notation = this.notation,\n              output = this.output,\n              rolls = this.rolls,\n              total = this.total;\n          return {\n            notation: notation,\n            output: output,\n            rolls: rolls,\n            total: total,\n            type: 'dice-roll'\n          };\n        }\n        /**\n         * Returns the String representation\n         * of the object as the roll notation\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.output;\n        }\n        /*************************\n         * Private Methods\n         *************************/\n\n        /**\n         * Calculates the total roll value and returns it\n         *\n         * @returns {Number}\n         */\n\n      }, {\n        key: _calculateTotal,\n        value: function value() {\n          var _this = this;\n\n          var formula = '';\n          var rollIndex = 0;\n\n          if (this.hasRolls()) {\n            // loop through each roll and calculate the totals\n            this[_parsedNotation].forEach(function (item) {\n              // @todo need to handle roll groups\n              if (item instanceof StandardDice) {\n                // @todo should roll results be stored on their relevant parsed object?\n                // item is a die - total the rolls for it\n                formula += _this.rolls[rollIndex] ? _this.rolls[rollIndex].value : 0; // increment the roll index and store the previous rolls / parsed die\n\n                rollIndex++;\n              } else {\n                formula += item;\n              }\n            });\n          } // if a total formula has been produced, evaluate it and round it to max 2 decimal places\n\n\n          return formula ? diceUtils.toFixed(mathjsExpressionParser.eval(formula), 2) : 0;\n        }\n      }, {\n        key: \"notation\",\n\n        /*************************\n         * Public Properties\n         *************************/\n\n        /**\n         * The dice notation\n         *\n         * @returns {string}\n         */\n        get: function get() {\n          return this[_notation] || '';\n        }\n        /**\n         * Returns the roll notation and rolls in the format of:\n         * 2d20+1d6: [20,2]+[2] = 24\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"output\",\n        get: function get() {\n          var _this2 = this;\n\n          var rollIndex = 0;\n          var output = \"\".concat(this.notation, \": \");\n\n          if (this.hasRolls()) {\n            output += this[_parsedNotation].map(function (item) {\n              if (item instanceof StandardDice) {\n                var rollResults = _this2.rolls[rollIndex] || null; // increment the roll index\n\n                rollIndex++;\n                return rollResults;\n              }\n\n              return item;\n            }) // remove any empty values\n            .filter(Boolean) // join into a single string\n            .join(''); // add the total\n\n            output += \" = \".concat(this.total);\n          } else {\n            output += 'No dice rolled';\n          }\n\n          return output;\n        }\n        /**\n         * The dice rolled for the notation\n         *\n         * @returns {RollResults[]}\n         */\n\n      }, {\n        key: \"rolls\",\n        get: function get() {\n          return this[_rolls] || [];\n        }\n        /**\n         * Returns the roll total\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"total\",\n        get: function get() {\n          // only calculate the total if it has not already been done\n          if (!this[_total] && this.hasRolls()) {\n            this[_total] = this[_calculateTotal]();\n          } // return the total\n\n\n          return this[_total] || 0;\n        }\n      }], [{\n        key: \"import\",\n        value: function _import(data) {\n          if (!data) {\n            throw new Error('No data to import');\n          } else if (diceUtils.isJson(data)) {\n            // data is JSON format - parse and import\n            return DiceRoll.import(JSON.parse(data));\n          } else if (diceUtils.isBase64(data)) {\n            // data is base64 encoded - decode and import\n            return DiceRoll.import(atob(data));\n          } else if (_typeof(data) === 'object') {\n            // if data is a `DiceRoll` return it, otherwise build it\n            return data instanceof DiceRoll ? data : new DiceRoll(data);\n          } else {\n            throw new Error(\"Unrecognised import format for data: \".concat(data));\n          }\n        }\n      }]);\n\n      return DiceRoll;\n    }();\n\n    return DiceRoll;\n  }();\n\n  /**\n   * A DiceRoller handles dice rolling functionality,\n   * keeps track of rolls and can output logs etc.\n   *\n   * @type {DiceRoller}\n   */\n\n  var DiceRoller = function () {\n    /**\n     * history of log rolls\n     *\n     * @type {symbol}\n     */\n    var _log = Symbol('log');\n    /**\n     * A DiceRoller handles dice rolling functionality,\n     * keeps track of rolls and can output logs etc.\n     *\n     * @param {{}=} data\n     */\n\n\n    var DiceRoller =\n    /*#__PURE__*/\n    function () {\n      /**\n       * Initialises the object\n       *\n       * @constructor\n       * @param data\n       */\n      function DiceRoller(data) {\n        var _this = this;\n\n        _classCallCheck(this, DiceRoller);\n\n        this[_log] = [];\n\n        if (data) {\n          if (Array.isArray(data.log)) {\n            // loop through each log entry and import it\n            data.log.forEach(function (roll) {\n              _this[_log].push(DiceRoll.import(roll));\n            });\n          } else if (data.log) {\n            throw new Error('DiceRoller: Roll log must be an Array');\n          }\n        }\n      }\n      /**\n       * Returns the current roll log\n       *\n       * @returns {DiceRoll[]}\n       */\n\n\n      _createClass(DiceRoller, [{\n        key: \"clearLog\",\n\n        /**\n         * Clears the roll history log\n         */\n        value: function clearLog() {\n          this[_log].length = 0;\n        }\n        /**\n         * Exports the roll log in the given format.\n         * If no format is specified, JSON is returned.\n         *\n         * @throws Error\n         * @param {exportFormats=} format The format to export the data as (ie. JSON, base64)\n         * @returns {string|null}\n         */\n\n      }, {\n        key: \"export\",\n        value: function _export(format) {\n          switch (format || exportFormats.JSON) {\n            case exportFormats.BASE_64:\n              // JSON encode, then base64\n              return btoa(this.export(exportFormats.JSON));\n\n            case exportFormats.JSON:\n              return JSON.stringify(this);\n\n            case exportFormats.OBJECT:\n              return JSON.parse(this.export(exportFormats.JSON));\n\n            default:\n              throw new Error('Unrecognised export format: ' + format);\n          }\n        }\n        /**\n         * Takes the given roll data and imports it into\n         * the existing DiceRoller, appending the rolls\n         * to the current roll log.\n         * Returns the roll log.\n         *\n         * @param {*} data\n         *\n         * @throws Error\n         *\n         * @returns {DiceRoll[]}\n         */\n\n      }, {\n        key: \"import\",\n        value: function _import(data) {\n          var _this2 = this;\n\n          if (!data) {\n            throw new Error('No data to import');\n          } else if (diceUtils.isJson(data)) {\n            // data is JSON - parse and import\n            return this.import(JSON.parse(data));\n          } else if (diceUtils.isBase64(data)) {\n            // data is base64 encoded - decode an import\n            return this.import(atob(data));\n          } else if (_typeof(data) === 'object') {\n            // if `log` is not defined, but data is an array, use it as the list of logs\n            if (!data.log && Array.isArray(data) && data.length) {\n              data = {\n                log: data\n              };\n            }\n\n            if (data.log && Array.isArray(data.log)) {\n              // loop through each log entry and import it\n              data.log.forEach(function (roll) {\n                _this2[_log].push(DiceRoll.import(roll));\n              });\n            } else if (data.log) {\n              throw new Error('Roll log must be an Array');\n            }\n\n            return this.log;\n          } else {\n            throw new Error('Unrecognised import format for data: ' + data);\n          }\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var log = this.log,\n              output = this.output,\n              total = this.total;\n          return {\n            log: log,\n            output: output,\n            total: total,\n            type: 'dice-roller'\n          };\n        }\n        /**\n         * Returns the String representation\n         * of the object as the roll notations\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.output;\n        }\n        /**\n         * Rolls the given dice notation(s) and returns them.\n         *\n         * You can roll multiple, separate notations at once by\n         * passing them as separate arguments like:\n         * ```\n         * roll('2d6', '4d10', 'd8');\n         * ```\n         *\n         * If only a single notation is passed, a single DiceRoll\n         * object will be returned, if multiple are provided then\n         * it will return an array of DiceRoll objects.\n         *\n         * @param {string[]} notations\n         *\n         * @returns {DiceRoll|DiceRoll[]}\n         */\n\n      }, {\n        key: \"roll\",\n        value: function roll() {\n          var _this3 = this;\n\n          for (var _len = arguments.length, notations = new Array(_len), _key = 0; _key < _len; _key++) {\n            notations[_key] = arguments[_key];\n          }\n\n          if (!notations || !notations.length) {\n            throw new Error('No notations specified');\n          } // remove any empty/falsey notations\n\n\n          var filteredNotations = notations.filter(Boolean); // ensure we still have notations\n\n          if (!filteredNotations.length) {\n            throw new Error('No notations specified');\n          }\n\n          var rolls = filteredNotations.map(function (notation) {\n            var diceRoll = new DiceRoll(notation); // add the roll log to our global log\n\n            _this3[_log].push(diceRoll); // return the current DiceRoll\n\n\n            return diceRoll;\n          });\n          return rolls.length > 1 ? rolls : rolls[0];\n        }\n      }, {\n        key: \"log\",\n        get: function get() {\n          return this[_log] || [];\n        }\n        /**\n         * Returns the roll notation and rolls in the format of:\n         * 2d20+1d6: [20,2]+[2] = 24; 1d8: [6] = 6\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"output\",\n        get: function get() {\n          // return the log as a joined string\n          return this.log.join('; ');\n        }\n        /**\n         * Returns the total for all the rolls\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"total\",\n        get: function get() {\n          return this.log.reduce(function (prev, current) {\n            return prev + current.total;\n          }, 0);\n        }\n        /**\n         * Takes the given data, imports it into a new DiceRoller instance\n         * and returns the DiceRoller\n         *\n         * @throws Error\n         * @param data\n         * @returns {DiceRoller}\n         */\n\n      }], [{\n        key: \"import\",\n        value: function _import(data) {\n          // create a new DiceRoller object\n          var diceRoller = new DiceRoller(); // import the data\n\n          diceRoller.import(data); // return the DiceRoller\n\n          return diceRoller;\n        }\n      }]);\n\n      return DiceRoller;\n    }();\n\n    return DiceRoller;\n  }();\n\n  exports.Dice = Dice;\n  exports.DiceRoll = DiceRoll;\n  exports.DiceRoller = DiceRoller;\n  exports.Modifiers = Modifiers;\n  exports.Parser = Parser;\n  exports.diceUtils = diceUtils;\n  exports.exportFormats = exportFormats;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","<script>\n  import RPG from \"rpg-dice-roller\";\n  import { client } from \"../lib/speechly\";\n\n  let textContent = \"\";\n\n  const appendMessage = message => {\n    textContent.innerHTML = textContent.innerHTML += `${message}\\n`;\n    textContent.scrollTop = textContent.scrollHeight;\n  };\n  const clear = () => (textContent.innerHTML = \"\");\n\n  export let recording = boolean;\n\n  $: {\n    if (recording) {\n      client.startContext(err => {\n        if (err !== undefined) {\n          console.error(err);\n          appendMessage(\"Error: Failed to start recording!\");\n        } else {\n          appendMessage(\"Listening...\");\n        }\n      });\n    } else {\n      client.stopContext();\n    }\n  }\n\n  // React to the phrases received from the API\n  client.onSegmentChange(segment => {\n    console.log(segment);\n    if (segment.isFinal) {\n      appendMessage(\n        `Heard: \"${segment.words\n          .map(({ value }) => value.toLowerCase())\n          .join(\" \")}\"`\n      );\n\n      // roll dice\n      const roller = new RPG.DiceRoller();\n      let quantity = 1;\n      for (const { type, value } of segment.entities) {\n        switch (type) {\n          case \"quantity\":\n            quantity = isNaN(value) ? 1 : value;\n            break;\n          case \"dice\":\n            if (!isNaN(value)) {\n              roller.roll(`${Number(quantity)}d${Number(value)}`);\n              quantity = 1; // reset\n            }\n            break;\n        }\n      }\n      if (roller.total) {\n        appendMessage(\n          roller\n            .toString()\n            .split(\";\")\n            .map(r => r.trim())\n            .join(\"\\n\")\n        );\n        appendMessage(`Total: ${roller.total}`);\n      } else {\n        appendMessage(\"Sorry, didn't hear any rolls this time.\");\n      }\n    }\n  });\n</script>\n\n<style>\n  pre {\n    resize: vertical;\n    height: 340px;\n    max-height: 135vh;\n    border-radius: 0.25em;\n  }\n</style>\n\n<div>\n  <pre\n    class=\"pre-scrollable bg-white small border p-3\"\n    bind:this={textContent} />\n  <button class=\"btn btn-lg btn-primary btn-block\" on:click={clear}>\n    Clear\n  </button>\n</div>\n","<script>\n  import { client } from \"./lib/speechly\";\n  import DiceThrowsListener from \"./components/DiceRollListener.svelte\";\n  import MicrophoneIcon from \"./components/MicrophoneIcon.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  // Initialize the client - this will ask the user for microphone permissions and establish the connection to Speechly API.\n  // Make sure you call `initlialize` from a user action handler (e.g. from a button press handler).\n  let initialized = false;\n  client.initialize(err => {\n    if (err !== undefined) {\n      console.error(\"Failed to initialize Speechly client:\", err);\n      return;\n    }\n    initialized = true;\n  });\n\n  let recording = false;\n\n  let timeout;\n  const toggleRecord = () => {\n    recording = !recording;\n    dispatch(\"record\", { recording });\n    if (recording) {\n      timeout = setTimeout(() => {\n        recording = false;\n        dispatch(\"record\", { recording });\n      }, 8000); // automatically stop after 8 seconds\n    } else {\n      clearTimeout(timeout);\n    }\n  };\n</script>\n\n<style>\n\n</style>\n\n<div class=\"container\">\n  <div class=\"py-5 text-center\">\n    <h1>DnD Voice Dice Roller</h1>\n    <p>\n      Try saying something like:\n      <i>\"Roll 2d8 + 2d4\"</i>\n    </p>\n\n    {#if initialized}\n      <button\n        class=\"btn btn-{recording ? 'danger' : 'primary'}\"\n        on:click={toggleRecord}>\n        {#if !recording}\n          <MicrophoneIcon />\n          Click to Speak\n        {:else}Stop Recording{/if}\n      </button>\n    {:else}\n      <button class=\"btn btn-primary\" disabled>Initializing...</button>\n    {/if}\n  </div>\n  <DiceThrowsListener {recording} />\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","defineProperty","exports","ClientState","state","_a","states","get","unknown","types_1","Failed","NoBrowserSupport","NoAudioConsent","Disconnecting","Disconnected","Connecting","Connected","Starting","Stopping","Recording","LANGUAGES_LIST","aa","nativeName","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu","ISO6391","codes","code","getName","getNativeName","validate","values","keys","find","language","toLowerCase","hasOwnProperty","LANGUAGES_ZH_NAMES","ISO6391ZH","super","getLanguages","assign","zhName","getZhName","_hasDontEnumBug","_dontEnums","obj","prop","prototype","exec","key","thisObj","toString","checkDontEnum","ctor","constructor","isProto","hasOwn","forIn","val","sort","arr","start","end","len","Math","max","min","result","args","argsArr","arguments","apply","concat","rest_methodNames","functions","bind","_rKind","_toString","UNDEF","kind","kindOf","isArray","isKind","containsMatch","array","pattern","deepMatches","patternLength","matchArray","forOwn","matchObject","src","identity","makeIterator","needle","some","deepFillIn","defaults","n","newValue","curValue","isPlainObject","deepMixIn","objects","copyProp","existing","x","y","checkProperties","isObject","every","makeCompare","var_defaults","base","output","level","flattenTo","prefix","nestedPrefix","parts","split","last","shift","iterator","temp","compare","Infinity","vals","source","mixIn","flags","multiline","global","ignoreCase","RegExp","Date","deepClone","instanceClone","out","cloneObject","cloneArray","clone","merge","path","item","fromIndex","propName","count","memo","initial","size","list","namespace","bindAll","require$$0","contains","require$$1","require$$2","require$$3","require$$4","equals","require$$5","require$$6","fillIn","require$$7","require$$8","require$$9","flatten","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$18","matches","require$$19","compareFn","arrMax","require$$21","arrMin","require$$23","require$$24","omit","var_keys","property","pick","pluck","require$$27","reduce","require$$28","reject","require$$29","undefined","isFunction","set","require$$31","require$$32","require$$33","unset","require$$34","require$$35","Iso31661a2","mout","singleton","getCountry","countries","getCode","country","idx","getCountries","getCodes","getData","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BQ","BA","BW","BV","BR","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CW","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SX","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW","module","REG","LocaleCode","match","languageCode","getLanguageCode","LanguageCode","getLanguageName","getLanguageNativeName","getLanguageZhName","countryCode","getCountryCode","CountryCode","validateLanguageCode","validateCountryCode","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rng","_nodeId","_clockseq","byteToHex","substr","bytesToUuid","buf","offset","bth","join","_lastMSecs","_lastNSecs","version","hashfunc","generateUUID","off","str","unescape","encodeURIComponent","bytes","charCodeAt","stringToBytes","uuid","replace","hex","parseInt","uuidToBytes","TypeError","err","DNS","URL","safeAdd","lsw","md5cmn","q","s","t","num","cnt","md5ff","md5gg","md5hh","md5ii","v3","v35","msg","input","length32","charAt","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","bytesToWords","f","z","ROTL","v5","K","H","N","ceil","M","j","pow","floor","W","T","clockseq","seedBytes","random","msecs","getTime","nsecs","dt","tmh","rnds","sinc","piX","PI","sin","sourceSampleRate","targetSampleRate","resampleRatio","sum","generateFilter","buffer","Float32Array","inputBuffer","outputLength","outputBuffer","round","remainingOffset","Int16Array","sampleRate","onAudioCb","cb","audioTrack","const_1","ErrAlreadyInitialized","window","navigator","mediaDevices","ErrDeviceNotSupported","getUserMedia","audio","video","mediaStream","getAudioTracks","enabled","AudioContext","audioContext","webkitAudioContext","downsampler","downsampler_1","generateDownsampler","audioProcessor","createScriptProcessor","createMediaStreamSource","connect","destination","onaudioprocess","audioProcessingEvent","downsampled","float32ToInt16","getChannelData","catch","ErrNoAudioConsent","ErrNotInitialized","mute","getTracks","stop","disconnect","close","__export","WebsocketResponseType","baseUrl","appId","startCbs","stopCbs","onResponseCb","onCloseCb","onWebsocketMessage","response","JSON","parse","console","error","Started","audio_context","Stopped","onWebsocketClose","reason","onWebsocketError","deviceId","websocket","url","protocol","ws","WebSocket","errhandler","openhandler","initializeWebsocket","params","URLSearchParams","generateWsUrl","closeCode","closeReason","isOpen","send","StartEventJSON","StopEventJSON","readyState","OPEN","stringify","ctxId","sId","isFinalized","words","entities","intent","isFinal","contextId","v","w","startPosition","endPosition","entityMapKey","word","start_timestamp","end_timestamp","startTimestamp","endTimestamp","entity","start_position","end_position","storage","localStorage","getItem","ErrKeyNotFound","setItem","__importDefault","mod","__esModule","default","locale_code_1","_b","_c","_d","_e","_f","activeContexts","reconnectAttemptCount","nextReconnectDelay","stateChangeCb","segmentChangeCb","tentativeTranscriptCb","tentativeEntitiesCb","tentativeIntentCb","transcriptCb","entityCb","intentCb","handleWebsocketResponse","debug","log","segment_id","segmentState","websocket_1","TentativeTranscript","parsers_1","parseTentativeTranscript","transcript","updateTranscript","Transcript","parseTranscript","TentativeEntities","parseTentativeEntities","updateEntities","Entity","parseEntity","TentativeIntent","tentativeIntent","parseIntent","updateIntent","Intent","SegmentEnd","finalize","toSegment","segment_1","SegmentState","warn","handleWebsocketClosure","reconnectWebsocket","handleMicrophoneAudio","storage_1","LocalStorage","microphone","microphone_1","BrowserMicrophone","DefaultSampleRate","Websocket","onAudio","onResponse","onClose","setState","initialize","uuid_1","v4","errs","message","wsErr","unmute","setTimeout","newState","state_1","stateToString","client_1","Client","client","_typeof","Symbol","_classCallCheck","Constructor","_defineProperties","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_defineProperty","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_superPropBase","object","_get","receiver","Reflect","desc","getOwnPropertyDescriptor","_set","isStrict","_slicedToArray","_arrayWithHoles","_arr","_n","_s","_i","next","done","_iterableToArrayLimit","_nonIterableRest","_toConsumableArray","arr2","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","peg$SyntaxError","expected","found","location","captureStackTrace","child","parent","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","classEscape","inverted","any","other","description","toUpperCase","descriptions","describeExpected","describeFound","grammar_1","peg$result","peg$FAILED","peg$startRuleFunctions","Main","peg$parseMain","peg$startRuleFunction","peg$c1","peg$literalExpectation","peg$c3","peg$c5","peg$c10","peg$c13","peg$c16","peg$c18","peg$c19","peg$c20","peg$classExpectation","peg$c24","peg$c26","peg$c29","peg$c30","peg$c33","peg$c36","peg$c38","peg$c41","peg$c44","peg$c47","peg$c49","peg$c52","peg$c56","peg$c58","peg$c60","peg$c62","peg$c64","peg$c66","peg$c68","peg$c70","peg$c71","expr","peg$c74","peg$c76","peg$c78","peg$c80","peg$c82","peg$c84","peg$c86","peg$c88","peg$c90","peg$c92","peg$c94","peg$c97","peg$c100","peg$c101","peg$c102","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c110","peg$c113","peg$c115","peg$c117","peg$c119","peg$c120","peg$c121","peg$c122","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computePosDetails","pos","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","peg$fail","peg$parseExpression","peg$parseDiceGroup","s0","s1","s3","s4","s5","s6","s7","s8","s9","exprs","modifiers","peg$parse_","peg$parseModifier","notation","expressions","subType","peg$parseDice","s2","die","peg$parseIntegerOrExpression","qty","sides","peg$parseStandardDie","peg$parsePercentileDie","test","peg$parseFudgeDie","peg$parseDie","modifier","peg$parseComparePoint","penetrate","compound","comparePoint","peg$parseExplodeModifier","peg$parseFailComparePoint","successCP","failureCP","peg$parseTargetModifier","peg$parseIntegerNumber","peg$parseDropModifier","peg$parseKeepModifier","once","peg$parseRerollModifier","peg$parseCriticalSuccessModifier","peg$parseCriticalFailModifier","direction","peg$parseSortingModifier","peg$parseCompareOperator","peg$parseFloatNumber","operator","head","tail","peg$parseFactor","peg$parseOperator","_ref3","_ref4","flat","s10","func","expr1","expr2","peg$c98","peg$parseMathFunction","peg$parseNumber","parseFloat","depth","flattened","flatMap","_failureCP","_direction","_modifiers","_notation","_qty","_sides","_once","_rolls","_compound","_penetrate","_comparePoint","_operator","_value","diceUtils","freeze","isNumeric","Number","isNaN","isFinite","isBase64","btoa","atob","isJson","parsed","generateNumber","sumArray","_this","numbers","prev","current","compareNumbers","toFixed","decPlaces","exportFormats","BASE_64","OBJECT","Modifier","order","results","dice","ComparePoint","isValidOperator","ComparisonModifier","_Modifier","isMatch","RollResult","_calculationValue","_initialValue","_useInTotal","useInTotal","initialVal","initialValue","calculationValue","modifierFlags","acc","flag","ExplodeModifier","_ComparisonModifier","_this2","rolls","roll","subRolls","compareValue","isComparePoint","prevRoll","rollResult","rollOnce","RollResults","addRoll","ReRollModifier","hasReRolled","StandardDice","entries","entry","FudgeDice","_StandardDice","nonBlanks","total","PercentileDice","Dice","CriticalFailureModifier","CriticalSuccessModifier","KeepModifier","_end","_map$sort$map","rollIndex","_rangeToDrop","DropModifier","_KeepModifier","SortingModifier","TargetModifier","failureComparePoint","isSuccess","isFailure","getStateValue","successComparePoint","Modifiers","RollGroup","_expressions","createCommonjsModule","globalThis","isBigNumber","valueOf","extend","deepExtend","deepEqual","canDefineProperty","lazy","_uninitialized","traverse","names","isFactory","factory","typedFunction","ok","notOk","undef","_types","anyType","_ignore","_conversions","typed","types","conversions","ignore","findTypeByName","typeName","findInArray","hint","findTypeIndex","findTypeName","stringifyParams","param","typeNames","getTypeName","restParam","parseParam","trim","notEmpty","notIgnore","matchingConversions","conversion","filterConversions","exactTypes","typeIndex","conversionIndex","convertibleTypes","hasRestParam","hasConversions","compileTest","test0","test1","tests","compileTests","varIndex","lastTest","testRestParam","getParamAtIndex","signature","getExpectedTypeNames","excludeConversions","isExactType","mergeExpectedParams","signatures","uniq","createError","_name","matchingSignatures","nextMatchingDefs","actualType","category","actual","lengths","maxLength","expectedLength","getLowestTypeIndex","getLowestConversionIndex","compareParams","param1","param2","compareSignatures","signature1","signature2","compileArgConversion","conversion0","conversion1","convert","arg","splitParams","ignoreConversionTypes","_splitParams","typeGroups","filteredTypes","typeGroup","createTypedFunction","signaturesMap","SyntaxError","parsedSignatures","parsedParam","isInvalidParam","parseSignature","notNull","parsedSignature","conflictingSignature","hasOverlap","len1","len2","restParam1","restParam2","hasConflictingParams","ok0","ok1","ok2","ok3","ok4","ok5","allOk","test00","test10","test20","test30","test40","test50","test01","test11","test21","test31","test41","test51","fnConvert","compiledConversions","fnPreprocess","compileArgsPreprocessing","fn0","fn1","fn2","fn3","fn4","fn5","len0","len3","len4","len5","iStart","iEnd","generic","arg0","arg1","createSignaturesMap","array1","array2","extractSignatures","validateUnique","_signature","_fn","string, Object","...Function","string, ...Function","addType","beforeObjectTest","addConversion","number","zeros","isNumber","isInteger","sign","format","precision","toExponential","toEngineering","exponential","lower","upper","fixedOptions","lowerExp","LN10","upperExp","toPrecision","digits","splitNumber","String","exponent","dot","coefficients","rounded","roundDigits","newExp","significandsDiff","abs","expDiff","decimalIdx","decimals","decimalVal","splitValue","pp","first","unshift","DBL_EPSILON","EPSILON","nearlyEqual","epsilon","diff","_typeof$1","_createTyped","isComplex","Complex","isFraction","Fraction","isUnit","isString","isMatrix","isDenseMatrix","isSparseMatrix","isRange","isIndex","isBoolean","isResultSet","isHelp","isDate","isRegExp","isNull","isUndefined","isAccessorNode","isNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","BigNumber","toNumber","DenseMatrix","matrix","E","on","listener","_","emit","evtArr","evts","liveEvents","tinyEmitter","TinyEmitter","emitter","ArgumentsError","stack","isArgumentsError","ArgumentsError_1","_typeof$2","_import","math","config","load","wrap","wrapper","transform","isTypedFunction","override","_importTransform","silent","expression","allowedInExpressions","mathWithTransform","_deleteTransform","_importFactory","existingTransform","resolver","factoryAllowedInExpressions","isSupportedType","unsafe","docs","json","chain","mathImport","validateOption","findIndex","MATRIX","NUMBER","_config","curr","changes","isFactory$1","core$1","factories","instances","predictable","randomSeed","deepMap","skipZeros","_typeof2","_typeof$3","toTex","number$1","string","NaN","Unit","null","Unit, string | Unit","unit","valuelessUnit","Array | Matrix","0","1","2","bignumber","div","times","fraction","number, number","numerator","denominator","numeric","getTypeOf","validInputTypes","validOutputTypes","outputType","inputType","_typeof$4","isSafeProperty","safeNativeProperties","Function","isSafeMethod","method","safeNativeMethods","toLocaleString","customs","getSafeProperty","setSafeProperty","validateSafeMethod","keywords","_typeof$5","hasOwnProperty$1","Node","eval","scope","compile","comment","_compile","symbol","_validateScope","argNames","_ifNode","_traverse","_transform","cloneDeep","customString","toJSON","toHTML","customTex","_toTex","getIdentifier","getContent","IndexError","RangeError","isIndexError","IndexError_1","error_transform","formatter","gt","isZero","exp","toSignificantDigits","mul","formatNumber","formatBigNumber","endsWith","search","looksLikeFraction","formatArray","syntax","escaped","escape","DimensionError","relation","isDimensionError","DimensionError_1","_DimensionError","_validate","dim","dimNext","validateIndex","_number","_IndexError","resize","defaultValue","_string","_defaultValue","_resize","elem","oldLen","newLen","minLen","reshape","sizes","newArray","flatArray","product","totalSize","sizeIndex","tmpArray2","tmpArray","_reshape","squeeze","arraySize","dims","_squeeze","unsqueeze","outer","_unsqueeze","filterRegExp","regexp","separator","identify","identifier","generalize","_interopRequireDefault","_create","string, string","datatype","Matrix","Array | Matrix, string","Array | Matrix, string, string","getSafeProperty$1","setSafeProperty$1","_getObjectProperty","dimension","_setObjectProperty","replacement","updated","subset","matrix$1","Array, Index","isScalar","Matrix, Index","Object, Index","string, Index","strLen","range","Array, Index, any","Array, Index, any, any","Matrix, Index, any","Matrix, Index, any, any","string, Index, string","_setSubstring","string, Index, string, string","Object, Index, any","chars","_len","_typeof$6","errorTransform","getSafeProperty$2","access","subset$1","isObjectProperty","getObjectProperty","getSafeProperty$3","AccessorNode","Node$1","access$1","needParenthesis","evalObject","evalIndex","mathjs","fromJSON","ArrayNode","items","deprecated","evalItems","evalItem","childNode","_typeof$7","errorTransform$1","setSafeProperty$2","properties","AssignmentNode","FunctionAssignmentNode","ConditionalNode","latexLeftParens","latexRightParens","latexParens","OperatorNode:or","associativity","associativeWith","OperatorNode:xor","OperatorNode:and","OperatorNode:bitOr","OperatorNode:bitXor","OperatorNode:bitAnd","OperatorNode:equal","OperatorNode:unequal","OperatorNode:smaller","OperatorNode:larger","OperatorNode:smallerEq","OperatorNode:largerEq","RelationalNode","OperatorNode:leftShift","OperatorNode:rightArithShift","OperatorNode:rightLogShift","OperatorNode:to","RangeNode","OperatorNode:add","OperatorNode:subtract","OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:dotDivide","OperatorNode:mod","OperatorNode:unaryPlus","OperatorNode:unaryMinus","OperatorNode:bitNot","OperatorNode:not","OperatorNode:pow","OperatorNode:dotPow","OperatorNode:factorial","OperatorNode:transpose","getPrecedence","_node","parenthesis","operators","getAssociativity","isAssociativeWith","nodeA","nodeB","identifierA","identifierB","getSafeProperty$4","setSafeProperty$3","assign$1","operators$1","precedence","exprPrecedence","evalValue","childObject","evalParentObject","parentProp","evalParentIndex","parentIndex","ResultSet","map$1","BlockNode","ResultSet$1","blocks","visible","evalBlocks","mathTypeOf","condition","trueExpr","falseExpr","evalCondition","evalTrueExpr","evalFalseExpr","re","im","testCondition","conditionPrecedence","truePrecedence","falsePrecedence","_extends","defaultEscapes","{","}","\\","#","$","%","&","^","~","formatEscapes","–","—"," ","\t","\r\n","\n","defaultEscapeMapFn","latex","symbols","Alpha","alpha","Beta","beta","Gamma","gamma","Delta","delta","Epsilon","varepsilon","Zeta","zeta","Eta","eta","Theta","theta","vartheta","Iota","iota","Kappa","kappa","varkappa","Lambda","lambda","Mu","mu","Nu","nu","Xi","xi","Omicron","omicron","Pi","varpi","Rho","rho","varrho","Sigma","sigma","varsigma","Tau","tau","Upsilon","upsilon","Phi","phi","varphi","Chi","chi","Psi","psi","Omega","omega","true","false","inf","Inf","infinity","oo","lim","transpose","ctranspose","factorial","dotPow","unaryPlus","unaryMinus","bitNot","not","multiply","divide","dotMultiply","dotDivide","subtract","leftShift","rightArithShift","rightLogShift","equal","unequal","smaller","larger","smallerEq","largerEq","bitAnd","bitXor","bitOr","and","xor","defaultTemplate","units","deg","_ref","_ref$preserveFormatti","preserveFormatting","_ref$escapeMapFn","escapeMapFn","runningStr","escapes","escapeKeys","_loop","specialCharFound","dist","toSymbol","escapeLatex","ConstantNode","getType","toLatex","forEach$1","setSafeProperty$4","childArgNames","evalExpr","childArgs","Range","step","hasStart","hasEnd","hasStep","nums","toArray","map$2","escape$1","IndexNode","Range$1","dimensions","dotNotation","createRange","evalDimensions","needsEnd","evalStart","evalEnd","evalStep","_evalStart","_evalEnd","_evalStep","_childArgNames","evalRange","_evalRange","evalDimension","_typeof$8","escape$2","isSafeProperty$1","hasOwnProperty$2","ObjectNode","evalEntries","stringifiedKey","parsedKey","_key","map$3","escape$3","isSafeMethod$1","getSafeProperty$5","OperatorNode","op","implicit","calculateNecessaryParentheses","root","operandPrecedence","operandIdentifier","rootIdentifier","lhsParens","rhsParens","lhsPrecedence","assocWithLhs","_rootIdentifier","lhsIdentifier","rhsIdentifier","rhsPrecedence","assocWithRhs","argPrecedence","assocWithArg","argAssociativity","evalArgs","evalArg0","_evalArg","evalArg1","evalArg","isUnary","isBinary","parens","assoc","operand","opIsNamed","lhs","rhs","stringifiedArgs","lhsTex","rhsTex","texifiedArgs","ParenthesisNode","content","escape$4","hasOwnProperty$3","getSafeProperty$6","SymbolNode","isValuelessUnit","_typeof$9","_extends$1","latex$1","escape$5","hasOwnProperty$4","map$4","validateSafeMethod$1","getSafeProperty$7","FunctionNode","SymbolNode$1","rawArgs","_rawArgs","evalFn","_rawArgs2","nodeToString","expandTemplate","template","regex","inputPos","nodeToTex","latexConverter","customToTex","startPrecedence","stepPrecedence","endPrecedence","escape$6","conditionals","isRelationalNode","compiled","evalLhs","evalRhs","condFn","paramStrings","paramPrecedence","operatorMap","_extends$2","numeric$1","AccessorNode$1","ArrayNode$1","AssignmentNode$1","BlockNode$1","ConditionalNode$1","ConstantNode$1","FunctionAssignmentNode$1","IndexNode$1","ObjectNode$1","OperatorNode$1","ParenthesisNode$1","FunctionNode$1","RangeNode$1","RelationalNode$1","extraNodes","parseStart","TOKENTYPE","DELIMITERS",",","(",")","[","]","\"","'",";","+","-","*",".*","/","./",".^","!","|","^|","=",":","?","==","!=","<",">","<=",">=","<<",">>",">>>","NAMED_DELIMITERS","in","CONSTANTS","NUMERIC_CONSTANTS","currentString","currentCharacter","prevCharacter","nextCharacter","getToken","tokenType","token","isWhitespace","nestingLevel","c1","c2","c3","isDigitDot","isDigit","isDecimalMark","createSyntaxError","isAlpha","getTokenSkipNewline","openParams","closeParams","conditionalLevel","parseAssignment","parseBlock","valid","parseLogicalXor","parseLogicalOr","parseConditional","parseLogicalAnd","parseBitwiseOr","parseBitwiseXor","parseBitwiseAnd","parseRelational","parseShift","cond","parseConversion","parseRange","parseAddSubtract","parseMultiplyDivide","parseImplicitMultiplication","parseRule2","parseUnary","tokenStates","CustomNode","parseAccessors","parseDoubleQuotesStringToken","parseSingleQuotesStringToken","rows","cols","row","parseRow","numberStr","parseEnd","parseParentheses","parseNumber","parseObject","parseMatrix","parseSingleQuotesString","parseDoubleQuotesString","parseSymbol","parseCustomNodes","parseLeftHandOperators","parsePow","col","cPrev","cNext","isValidLatinOrGreek","isValidMathSymbol","high","low","parse$1","string | Array | Matrix","string | Array | Matrix, Object","_eval","Array | Matrix, Object","format$1","any, Object | function | number","math$5","import","allFromMath","getOwnPropertyNames","_log","mathjsExpressionParser","Parser","parseExpression","k","DiceRoll","_calculateTotal","_parsedNotation","_total","export","Boolean","formula","hasRolls","rollResults","DiceRoller","_this3","notations","filteredNotations","diceRoll","diceRoller","textContent","appendMessage","innerHTML","scrollTop","scrollHeight","recording","boolean","onSegmentChange","segment","roller","RPG","quantity","startContext","stopContext","dispatch","initialized","timeout","clearTimeout","body"],"mappings":"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,QACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,KACJC,GAAI,SACJC,GAAI,OACJC,GAAI,SACJC,GAAI,QACJC,GAAI,OACJC,GAAI,QACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,QACJC,GAAI,MACJC,GAAI,OACJC,GAAI,QACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,SACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,KACJC,GAAI,MACJC,GAAI,QACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,KACJC,GAAI,OACJC,GAAI,QACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,QACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,SACJC,GAAI,QACJC,GAAI,QACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,SACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,UACJC,GAAI,SACJC,GAAI,OACJC,GAAI,SACJC,GAAI,MACJC,GAAI,UACJC,GAAI,MACJC,GAAI,SACJC,GAAI,OACJC,GAAI,OACJC,GAAI,QACJC,GAAI,QACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,QACJC,GAAI,KACJC,GAAI,OACJC,GAAI,KACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,QACJC,GAAI,SACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,SACJC,GAAI,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"}