{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@speechly/browser-client/speechly/types.js","../../node_modules/@speechly/browser-client/speechly/state.js","../../node_modules/iso-639-1/src/data.js","../../node_modules/iso-639-1/src/index.js","../../node_modules/iso-639-1-zh/src/data.js","../../node_modules/iso-639-1-zh/src/index.js","../../node_modules/mout/object/hasOwn.js","../../node_modules/mout/object/forIn.js","../../node_modules/mout/object/functions.js","../../node_modules/mout/array/slice.js","../../node_modules/mout/function/bind.js","../../node_modules/mout/array/forEach.js","../../node_modules/mout/object/bindAll.js","../../node_modules/mout/object/forOwn.js","../../node_modules/mout/function/identity.js","../../node_modules/mout/function/prop.js","../../node_modules/mout/lang/kindOf.js","../../node_modules/mout/lang/isKind.js","../../node_modules/mout/lang/isArray.js","../../node_modules/mout/object/deepMatches.js","../../node_modules/mout/function/makeIterator_.js","../../node_modules/mout/object/some.js","../../node_modules/mout/object/contains.js","../../node_modules/mout/lang/isPlainObject.js","../../node_modules/mout/object/deepFillIn.js","../../node_modules/mout/object/deepMixIn.js","../../node_modules/mout/object/every.js","../../node_modules/mout/lang/isObject.js","../../node_modules/mout/lang/is.js","../../node_modules/mout/object/equals.js","../../node_modules/mout/object/fillIn.js","../../node_modules/mout/object/filter.js","../../node_modules/mout/object/find.js","../../node_modules/mout/object/flatten.js","../../node_modules/mout/object/get.js","../../node_modules/mout/object/has.js","../../node_modules/mout/object/keys.js","../../node_modules/mout/object/map.js","../../node_modules/mout/object/matches.js","../../node_modules/mout/array/max.js","../../node_modules/mout/object/values.js","../../node_modules/mout/object/mixIn.js","../../node_modules/mout/lang/clone.js","../../node_modules/mout/lang/deepClone.js","../../node_modules/mout/object/merge.js","../../node_modules/mout/array/min.js","../../node_modules/mout/object/namespace.js","../../node_modules/mout/array/indexOf.js","../../node_modules/mout/array/contains.js","../../node_modules/mout/object/pluck.js","../../node_modules/mout/object/size.js","../../node_modules/mout/object/reduce.js","../../node_modules/mout/object/reject.js","../../node_modules/mout/lang/isFunction.js","../../node_modules/mout/object/set.js","../../node_modules/mout/object/unset.js","../../node_modules/mout/object.js","../../node_modules/mout/object/max.js","../../node_modules/mout/object/min.js","../../node_modules/mout/object/omit.js","../../node_modules/mout/object/pick.js","../../node_modules/mout/object/result.js","../../node_modules/iso-3166-1-alpha-2/index.js","../../node_modules/locale-code/src/index.js","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/bytesToUuid.js","../../node_modules/uuid/dist/esm-browser/v1.js","../../node_modules/uuid/dist/esm-browser/v35.js","../../node_modules/uuid/dist/esm-browser/md5.js","../../node_modules/uuid/dist/esm-browser/v3.js","../../node_modules/uuid/dist/esm-browser/sha1.js","../../node_modules/uuid/dist/esm-browser/v5.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/@speechly/browser-client/microphone/types.js","../../node_modules/@speechly/browser-client/microphone/browser_audio_processor.js","../../node_modules/@speechly/browser-client/microphone/downsampler.js","../../node_modules/@speechly/browser-client/microphone/browser_microphone.js","../../node_modules/@speechly/browser-client/microphone/index.js","../../node_modules/@speechly/browser-client/websocket/types.js","../../node_modules/@speechly/browser-client/websocket/websocket_client.js","../../node_modules/@speechly/browser-client/websocket/index.js","../../node_modules/@speechly/browser-client/storage/types.js","../../node_modules/@speechly/browser-client/storage/storage.js","../../node_modules/@speechly/browser-client/storage/index.js","../../node_modules/@speechly/browser-client/speechly/segment.js","../../node_modules/@speechly/browser-client/speechly/parsers.js","../../node_modules/@speechly/browser-client/speechly/client.js","../../node_modules/@speechly/browser-client/speechly/index.js","../../src/lib/speechly.js","../../node_modules/@speechly/browser-client/index.js","../../node_modules/rpg-dice-roller/lib/umd/bundle.js","../../src/components/DiceRollListener.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * All possible states of a Speechly API client. Failed, NoBrowserSupport and NoAudioConsent states are non-recoverable\n * erroneous states, which should be handled by the end user, according to the semantics of an application.\n * Other states can also be utilized for e.g. enabling and disabling recording buttons or showing the status in the app.\n * It is also possible to use arithmetics for state comparison, e.g. `if (state < speechly.ClientState.Disconnected)`,\n * to react to non-recoverable states.\n * @public\n */\nvar ClientState;\n(function (ClientState) {\n    ClientState[ClientState[\"Failed\"] = 0] = \"Failed\";\n    ClientState[ClientState[\"NoBrowserSupport\"] = 1] = \"NoBrowserSupport\";\n    ClientState[ClientState[\"NoAudioConsent\"] = 2] = \"NoAudioConsent\";\n    ClientState[ClientState[\"Disconnected\"] = 3] = \"Disconnected\";\n    ClientState[ClientState[\"Disconnecting\"] = 4] = \"Disconnecting\";\n    ClientState[ClientState[\"Connecting\"] = 5] = \"Connecting\";\n    ClientState[ClientState[\"Connected\"] = 6] = \"Connected\";\n    ClientState[ClientState[\"Starting\"] = 7] = \"Starting\";\n    ClientState[ClientState[\"Stopping\"] = 8] = \"Stopping\";\n    ClientState[ClientState[\"Recording\"] = 9] = \"Recording\";\n})(ClientState = exports.ClientState || (exports.ClientState = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\n/**\n * Converts client state value to a string, which could be useful for debugging or metrics.\n * @param state - the state of the client\n * @public\n */\nfunction stateToString(state) {\n    var _a;\n    return (_a = states.get(state)) !== null && _a !== void 0 ? _a : unknown;\n}\nexports.stateToString = stateToString;\n// TODO: generate this from the enum.\nconst unknown = 'Unknown';\nconst states = new Map([\n    [types_1.ClientState.Failed, 'Failed'],\n    [types_1.ClientState.NoBrowserSupport, 'NoBrowserSupport'],\n    [types_1.ClientState.NoAudioConsent, 'NoAudioConsent'],\n    [types_1.ClientState.Disconnecting, 'Disconnecting'],\n    [types_1.ClientState.Disconnected, 'Disconnected'],\n    [types_1.ClientState.Connecting, 'Connecting'],\n    [types_1.ClientState.Connected, 'Connected'],\n    [types_1.ClientState.Starting, 'Starting'],\n    [types_1.ClientState.Stopping, 'Stopping'],\n    [types_1.ClientState.Recording, 'Recording']\n]);\n//# sourceMappingURL=state.js.map","const LANGUAGES_LIST = {\n  aa: {\n    name: 'Afar',\n    nativeName: 'Afaraf',\n  },\n  ab: {\n    name: 'Abkhaz',\n    nativeName: 'аҧсуа бызшәа',\n  },\n  ae: {\n    name: 'Avestan',\n    nativeName: 'avesta',\n  },\n  af: {\n    name: 'Afrikaans',\n    nativeName: 'Afrikaans',\n  },\n  ak: {\n    name: 'Akan',\n    nativeName: 'Akan',\n  },\n  am: {\n    name: 'Amharic',\n    nativeName: 'አማርኛ',\n  },\n  an: {\n    name: 'Aragonese',\n    nativeName: 'aragonés',\n  },\n  ar: {\n    name: 'Arabic',\n    nativeName: 'اللغة العربية',\n  },\n  as: {\n    name: 'Assamese',\n    nativeName: 'অসমীয়া',\n  },\n  av: {\n    name: 'Avaric',\n    nativeName: 'авар мацӀ',\n  },\n  ay: {\n    name: 'Aymara',\n    nativeName: 'aymar aru',\n  },\n  az: {\n    name: 'Azerbaijani',\n    nativeName: 'azərbaycan dili',\n  },\n  ba: {\n    name: 'Bashkir',\n    nativeName: 'башҡорт теле',\n  },\n  be: {\n    name: 'Belarusian',\n    nativeName: 'беларуская мова',\n  },\n  bg: {\n    name: 'Bulgarian',\n    nativeName: 'български език',\n  },\n  bh: {\n    name: 'Bihari',\n    nativeName: 'भोजपुरी',\n  },\n  bi: {\n    name: 'Bislama',\n    nativeName: 'Bislama',\n  },\n  bm: {\n    name: 'Bambara',\n    nativeName: 'bamanankan',\n  },\n  bn: {\n    name: 'Bengali',\n    nativeName: 'বাংলা',\n  },\n  bo: {\n    name: 'Tibetan Standard',\n    nativeName: 'བོད་ཡིག',\n  },\n  br: {\n    name: 'Breton',\n    nativeName: 'brezhoneg',\n  },\n  bs: {\n    name: 'Bosnian',\n    nativeName: 'bosanski jezik',\n  },\n  ca: {\n    name: 'Catalan',\n    nativeName: 'català',\n  },\n  ce: {\n    name: 'Chechen',\n    nativeName: 'нохчийн мотт',\n  },\n  ch: {\n    name: 'Chamorro',\n    nativeName: 'Chamoru',\n  },\n  co: {\n    name: 'Corsican',\n    nativeName: 'corsu',\n  },\n  cr: {\n    name: 'Cree',\n    nativeName: 'ᓀᐦᐃᔭᐍᐏᐣ',\n  },\n  cs: {\n    name: 'Czech',\n    nativeName: 'čeština',\n  },\n  cu: {\n    name: 'Old Church Slavonic',\n    nativeName: 'ѩзыкъ словѣньскъ',\n  },\n  cv: {\n    name: 'Chuvash',\n    nativeName: 'чӑваш чӗлхи',\n  },\n  cy: {\n    name: 'Welsh',\n    nativeName: 'Cymraeg',\n  },\n  da: {\n    name: 'Danish',\n    nativeName: 'dansk',\n  },\n  de: {\n    name: 'German',\n    nativeName: 'Deutsch',\n  },\n  dv: {\n    name: 'Divehi',\n    nativeName: 'Dhivehi',\n  },\n  dz: {\n    name: 'Dzongkha',\n    nativeName: 'རྫོང་ཁ',\n  },\n  ee: {\n    name: 'Ewe',\n    nativeName: 'Eʋegbe',\n  },\n  el: {\n    name: 'Greek',\n    nativeName: 'Ελληνικά',\n  },\n  en: {\n    name: 'English',\n    nativeName: 'English',\n  },\n  eo: {\n    name: 'Esperanto',\n    nativeName: 'Esperanto',\n  },\n  es: {\n    name: 'Spanish',\n    nativeName: 'Español',\n  },\n  et: {\n    name: 'Estonian',\n    nativeName: 'eesti',\n  },\n  eu: {\n    name: 'Basque',\n    nativeName: 'euskara',\n  },\n  fa: {\n    name: 'Persian',\n    nativeName: 'فارسی',\n  },\n  ff: {\n    name: 'Fula',\n    nativeName: 'Fulfulde',\n  },\n  fi: {\n    name: 'Finnish',\n    nativeName: 'suomi',\n  },\n  fj: {\n    name: 'Fijian',\n    nativeName: 'Vakaviti',\n  },\n  fo: {\n    name: 'Faroese',\n    nativeName: 'føroyskt',\n  },\n  fr: {\n    name: 'French',\n    nativeName: 'Français',\n  },\n  fy: {\n    name: 'Western Frisian',\n    nativeName: 'Frysk',\n  },\n  ga: {\n    name: 'Irish',\n    nativeName: 'Gaeilge',\n  },\n  gd: {\n    name: 'Scottish Gaelic',\n    nativeName: 'Gàidhlig',\n  },\n  gl: {\n    name: 'Galician',\n    nativeName: 'galego',\n  },\n  gn: {\n    name: 'Guaraní',\n    nativeName: \"Avañe'ẽ\",\n  },\n  gu: {\n    name: 'Gujarati',\n    nativeName: 'ગુજરાતી',\n  },\n  gv: {\n    name: 'Manx',\n    nativeName: 'Gaelg',\n  },\n  ha: {\n    name: 'Hausa',\n    nativeName: 'هَوُسَ',\n  },\n  he: {\n    name: 'Hebrew',\n    nativeName: 'עברית',\n  },\n  hi: {\n    name: 'Hindi',\n    nativeName: 'हिन्दी',\n  },\n  ho: {\n    name: 'Hiri Motu',\n    nativeName: 'Hiri Motu',\n  },\n  hr: {\n    name: 'Croatian',\n    nativeName: 'hrvatski jezik',\n  },\n  ht: {\n    name: 'Haitian',\n    nativeName: 'Kreyòl ayisyen',\n  },\n  hu: {\n    name: 'Hungarian',\n    nativeName: 'magyar',\n  },\n  hy: {\n    name: 'Armenian',\n    nativeName: 'Հայերեն',\n  },\n  hz: {\n    name: 'Herero',\n    nativeName: 'Otjiherero',\n  },\n  ia: {\n    name: 'Interlingua',\n    nativeName: 'Interlingua',\n  },\n  id: {\n    name: 'Indonesian',\n    nativeName: 'Bahasa Indonesia',\n  },\n  ie: {\n    name: 'Interlingue',\n    nativeName: 'Interlingue',\n  },\n  ig: {\n    name: 'Igbo',\n    nativeName: 'Asụsụ Igbo',\n  },\n  ii: {\n    name: 'Nuosu',\n    nativeName: 'ꆈꌠ꒿ Nuosuhxop',\n  },\n  ik: {\n    name: 'Inupiaq',\n    nativeName: 'Iñupiaq',\n  },\n  io: {\n    name: 'Ido',\n    nativeName: 'Ido',\n  },\n  is: {\n    name: 'Icelandic',\n    nativeName: 'Íslenska',\n  },\n  it: {\n    name: 'Italian',\n    nativeName: 'Italiano',\n  },\n  iu: {\n    name: 'Inuktitut',\n    nativeName: 'ᐃᓄᒃᑎᑐᑦ',\n  },\n  ja: {\n    name: 'Japanese',\n    nativeName: '日本語',\n  },\n  jv: {\n    name: 'Javanese',\n    nativeName: 'basa Jawa',\n  },\n  ka: {\n    name: 'Georgian',\n    nativeName: 'ქართული',\n  },\n  kg: {\n    name: 'Kongo',\n    nativeName: 'Kikongo',\n  },\n  ki: {\n    name: 'Kikuyu',\n    nativeName: 'Gĩkũyũ',\n  },\n  kj: {\n    name: 'Kwanyama',\n    nativeName: 'Kuanyama',\n  },\n  kk: {\n    name: 'Kazakh',\n    nativeName: 'қазақ тілі',\n  },\n  kl: {\n    name: 'Kalaallisut',\n    nativeName: 'kalaallisut',\n  },\n  km: {\n    name: 'Khmer',\n    nativeName: 'ខេមរភាសា',\n  },\n  kn: {\n    name: 'Kannada',\n    nativeName: 'ಕನ್ನಡ',\n  },\n  ko: {\n    name: 'Korean',\n    nativeName: '한국어',\n  },\n  kr: {\n    name: 'Kanuri',\n    nativeName: 'Kanuri',\n  },\n  ks: {\n    name: 'Kashmiri',\n    nativeName: 'कश्मीरी',\n  },\n  ku: {\n    name: 'Kurdish',\n    nativeName: 'Kurdî',\n  },\n  kv: {\n    name: 'Komi',\n    nativeName: 'коми кыв',\n  },\n  kw: {\n    name: 'Cornish',\n    nativeName: 'Kernewek',\n  },\n  ky: {\n    name: 'Kyrgyz',\n    nativeName: 'Кыргызча',\n  },\n  la: {\n    name: 'Latin',\n    nativeName: 'latine',\n  },\n  lb: {\n    name: 'Luxembourgish',\n    nativeName: 'Lëtzebuergesch',\n  },\n  lg: {\n    name: 'Ganda',\n    nativeName: 'Luganda',\n  },\n  li: {\n    name: 'Limburgish',\n    nativeName: 'Limburgs',\n  },\n  ln: {\n    name: 'Lingala',\n    nativeName: 'Lingála',\n  },\n  lo: {\n    name: 'Lao',\n    nativeName: 'ພາສາ',\n  },\n  lt: {\n    name: 'Lithuanian',\n    nativeName: 'lietuvių kalba',\n  },\n  lu: {\n    name: 'Luba-Katanga',\n    nativeName: 'Tshiluba',\n  },\n  lv: {\n    name: 'Latvian',\n    nativeName: 'latviešu valoda',\n  },\n  mg: {\n    name: 'Malagasy',\n    nativeName: 'fiteny malagasy',\n  },\n  mh: {\n    name: 'Marshallese',\n    nativeName: 'Kajin M̧ajeļ',\n  },\n  mi: {\n    name: 'Māori',\n    nativeName: 'te reo Māori',\n  },\n  mk: {\n    name: 'Macedonian',\n    nativeName: 'македонски јазик',\n  },\n  ml: {\n    name: 'Malayalam',\n    nativeName: 'മലയാളം',\n  },\n  mn: {\n    name: 'Mongolian',\n    nativeName: 'Монгол хэл',\n  },\n  mr: {\n    name: 'Marathi',\n    nativeName: 'मराठी',\n  },\n  ms: {\n    name: 'Malay',\n    nativeName: 'Bahasa Malaysia',\n  },\n  mt: {\n    name: 'Maltese',\n    nativeName: 'Malti',\n  },\n  my: {\n    name: 'Burmese',\n    nativeName: 'ဗမာစာ',\n  },\n  na: {\n    name: 'Nauru',\n    nativeName: 'Ekakairũ Naoero',\n  },\n  nb: {\n    name: 'Norwegian Bokmål',\n    nativeName: 'Norsk bokmål',\n  },\n  nd: {\n    name: 'Northern Ndebele',\n    nativeName: 'isiNdebele',\n  },\n  ne: {\n    name: 'Nepali',\n    nativeName: 'नेपाली',\n  },\n  ng: {\n    name: 'Ndonga',\n    nativeName: 'Owambo',\n  },\n  nl: {\n    name: 'Dutch',\n    nativeName: 'Nederlands',\n  },\n  nn: {\n    name: 'Norwegian Nynorsk',\n    nativeName: 'Norsk nynorsk',\n  },\n  no: {\n    name: 'Norwegian',\n    nativeName: 'Norsk',\n  },\n  nr: {\n    name: 'Southern Ndebele',\n    nativeName: 'isiNdebele',\n  },\n  nv: {\n    name: 'Navajo',\n    nativeName: 'Diné bizaad',\n  },\n  ny: {\n    name: 'Chichewa',\n    nativeName: 'chiCheŵa',\n  },\n  oc: {\n    name: 'Occitan',\n    nativeName: 'occitan',\n  },\n  oj: {\n    name: 'Ojibwe',\n    nativeName: 'ᐊᓂᔑᓈᐯᒧᐎᓐ',\n  },\n  om: {\n    name: 'Oromo',\n    nativeName: 'Afaan Oromoo',\n  },\n  or: {\n    name: 'Oriya',\n    nativeName: 'ଓଡ଼ିଆ',\n  },\n  os: {\n    name: 'Ossetian',\n    nativeName: 'ирон æвзаг',\n  },\n  pa: {\n    name: 'Panjabi',\n    nativeName: 'ਪੰਜਾਬੀ',\n  },\n  pi: {\n    name: 'Pāli',\n    nativeName: 'पाऴि',\n  },\n  pl: {\n    name: 'Polish',\n    nativeName: 'język polski',\n  },\n  ps: {\n    name: 'Pashto',\n    nativeName: 'پښتو',\n  },\n  pt: {\n    name: 'Portuguese',\n    nativeName: 'Português',\n  },\n  qu: {\n    name: 'Quechua',\n    nativeName: 'Runa Simi',\n  },\n  rm: {\n    name: 'Romansh',\n    nativeName: 'rumantsch grischun',\n  },\n  rn: {\n    name: 'Kirundi',\n    nativeName: 'Ikirundi',\n  },\n  ro: {\n    name: 'Romanian',\n    nativeName: 'Română',\n  },\n  ru: {\n    name: 'Russian',\n    nativeName: 'Русский',\n  },\n  rw: {\n    name: 'Kinyarwanda',\n    nativeName: 'Ikinyarwanda',\n  },\n  sa: {\n    name: 'Sanskrit',\n    nativeName: 'संस्कृतम्',\n  },\n  sc: {\n    name: 'Sardinian',\n    nativeName: 'sardu',\n  },\n  sd: {\n    name: 'Sindhi',\n    nativeName: 'सिन्धी',\n  },\n  se: {\n    name: 'Northern Sami',\n    nativeName: 'Davvisámegiella',\n  },\n  sg: {\n    name: 'Sango',\n    nativeName: 'yângâ tî sängö',\n  },\n  si: {\n    name: 'Sinhala',\n    nativeName: 'සිංහල',\n  },\n  sk: {\n    name: 'Slovak',\n    nativeName: 'slovenčina',\n  },\n  sl: {\n    name: 'Slovene',\n    nativeName: 'slovenski jezik',\n  },\n  sm: {\n    name: 'Samoan',\n    nativeName: \"gagana fa'a Samoa\",\n  },\n  sn: {\n    name: 'Shona',\n    nativeName: 'chiShona',\n  },\n  so: {\n    name: 'Somali',\n    nativeName: 'Soomaaliga',\n  },\n  sq: {\n    name: 'Albanian',\n    nativeName: 'Shqip',\n  },\n  sr: {\n    name: 'Serbian',\n    nativeName: 'српски језик',\n  },\n  ss: {\n    name: 'Swati',\n    nativeName: 'SiSwati',\n  },\n  st: {\n    name: 'Southern Sotho',\n    nativeName: 'Sesotho',\n  },\n  su: {\n    name: 'Sundanese',\n    nativeName: 'Basa Sunda',\n  },\n  sv: {\n    name: 'Swedish',\n    nativeName: 'svenska',\n  },\n  sw: {\n    name: 'Swahili',\n    nativeName: 'Kiswahili',\n  },\n  ta: {\n    name: 'Tamil',\n    nativeName: 'தமிழ்',\n  },\n  te: {\n    name: 'Telugu',\n    nativeName: 'తెలుగు',\n  },\n  tg: {\n    name: 'Tajik',\n    nativeName: 'тоҷикӣ',\n  },\n  th: {\n    name: 'Thai',\n    nativeName: 'ไทย',\n  },\n  ti: {\n    name: 'Tigrinya',\n    nativeName: 'ትግርኛ',\n  },\n  tk: {\n    name: 'Turkmen',\n    nativeName: 'Türkmen',\n  },\n  tl: {\n    name: 'Tagalog',\n    nativeName: 'Wikang Tagalog',\n  },\n  tn: {\n    name: 'Tswana',\n    nativeName: 'Setswana',\n  },\n  to: {\n    name: 'Tonga',\n    nativeName: 'faka Tonga',\n  },\n  tr: {\n    name: 'Turkish',\n    nativeName: 'Türkçe',\n  },\n  ts: {\n    name: 'Tsonga',\n    nativeName: 'Xitsonga',\n  },\n  tt: {\n    name: 'Tatar',\n    nativeName: 'татар теле',\n  },\n  tw: {\n    name: 'Twi',\n    nativeName: 'Twi',\n  },\n  ty: {\n    name: 'Tahitian',\n    nativeName: 'Reo Tahiti',\n  },\n  ug: {\n    name: 'Uyghur',\n    nativeName: 'ئۇيغۇرچە‎',\n  },\n  uk: {\n    name: 'Ukrainian',\n    nativeName: 'Українська',\n  },\n  ur: {\n    name: 'Urdu',\n    nativeName: 'اردو',\n  },\n  uz: {\n    name: 'Uzbek',\n    nativeName: 'Ўзбек',\n  },\n  ve: {\n    name: 'Venda',\n    nativeName: 'Tshivenḓa',\n  },\n  vi: {\n    name: 'Vietnamese',\n    nativeName: 'Tiếng Việt',\n  },\n  vo: {\n    name: 'Volapük',\n    nativeName: 'Volapük',\n  },\n  wa: {\n    name: 'Walloon',\n    nativeName: 'walon',\n  },\n  wo: {\n    name: 'Wolof',\n    nativeName: 'Wollof',\n  },\n  xh: {\n    name: 'Xhosa',\n    nativeName: 'isiXhosa',\n  },\n  yi: {\n    name: 'Yiddish',\n    nativeName: 'ייִדיש',\n  },\n  yo: {\n    name: 'Yoruba',\n    nativeName: 'Yorùbá',\n  },\n  za: {\n    name: 'Zhuang',\n    nativeName: 'Saɯ cueŋƅ',\n  },\n  zh: {\n    name: 'Chinese',\n    nativeName: '中文',\n  },\n  zu: {\n    name: 'Zulu',\n    nativeName: 'isiZulu',\n  },\n};\n\nexport default LANGUAGES_LIST;\n","import LANGUAGES_LIST from './data';\n\nexport default class ISO6391 {\n  static getLanguages(codes = []) {\n    return codes.map(code => ({\n      code,\n      name: ISO6391.getName(code),\n      nativeName: ISO6391.getNativeName(code),\n    }));\n  }\n\n  static getName(code) {\n    return ISO6391.validate(code) ? LANGUAGES_LIST[code].name : '';\n  }\n\n  static getAllNames() {\n    return Object.values(LANGUAGES_LIST).map(l => l.name);\n  }\n\n  static getNativeName(code) {\n    return ISO6391.validate(code) ? LANGUAGES_LIST[code].nativeName : '';\n  }\n\n  static getAllNativeNames() {\n    return Object.values(LANGUAGES_LIST).map(l => l.nativeName);\n  }\n\n  static getCode(name) {\n    const code = Object.keys(LANGUAGES_LIST).find(code => {\n      const language = LANGUAGES_LIST[code];\n\n      return (\n        language.name.toLowerCase() === name.toLowerCase() ||\n        language.nativeName.toLowerCase() === name.toLowerCase()\n      );\n    });\n    return code || '';\n  }\n\n  static getAllCodes() {\n    return Object.keys(LANGUAGES_LIST);\n  }\n\n  static validate(code) {\n    return LANGUAGES_LIST.hasOwnProperty(code);\n  }\n}\n","const LANGUAGES_ZH_NAMES = {\n  aa: '阿法尔语',\n  ab: '阿布哈兹语',\n  ae: '阿维斯陀语',\n  af: '南非荷兰语',\n  ak: '阿坎语',\n  am: '阿姆哈拉语',\n  an: '阿拉贡语',\n  ar: '阿拉伯语',\n  as: '阿萨姆语',\n  av: '阿瓦尔语',\n  ay: '艾马拉语',\n  az: '阿塞拜疆语',\n  ba: '巴什基尔语',\n  be: '白俄罗斯语',\n  bg: '保加利亚语',\n  bh: '比哈尔语',\n  bi: '比斯拉马语',\n  bm: '班巴拉语',\n  bn: '孟加拉语',\n  bo: '藏语',\n  br: '布列塔尼语',\n  bs: '波斯尼亚语',\n  ca: '加泰罗尼亚语',\n  ce: '车臣语',\n  ch: '查莫洛语',\n  co: '科西嘉语',\n  cr: '克里语',\n  cs: '捷克语',\n  cu: '古教会斯拉夫语',\n  cv: '楚瓦什语',\n  cy: '威尔士语',\n  da: '丹麦语',\n  de: '德语',\n  dv: '迪维希语',\n  dz: '不丹语',\n  ee: '埃维语',\n  el: '希腊语',\n  en: '英语',\n  eo: '世界语',\n  es: '西班牙语',\n  et: '爱沙尼亚语',\n  eu: '巴斯克语',\n  fa: '波斯语',\n  ff: '富拉语',\n  fi: '芬兰语',\n  fj: '斐济语',\n  fo: '法罗语',\n  fr: '法语',\n  fy: '西弗里西亚语',\n  ga: '爱尔兰语',\n  gd: '苏格兰盖尔语',\n  gl: '加利西亚语',\n  gn: '瓜拉尼语',\n  gu: '古吉拉特语',\n  gv: '马恩岛语',\n  ha: '豪萨语',\n  he: '希伯来语',\n  hi: '印地语',\n  ho: '莫图语',\n  hr: '克罗地亚语',\n  ht: '海地文',\n  hu: '匈牙利语',\n  hy: '亚美尼亚语',\n  hz: '赫勒娄语',\n  ia: '国际语',\n  id: '印尼语',\n  ie: '国际语',\n  ig: '伊博语',\n  ii: '诺苏语',\n  ik: '依奴皮维克文',\n  io: '伊多文',\n  is: '冰岛语',\n  it: '意大利语',\n  iu: '因纽特语',\n  ja: '日语',\n  jv: '爪哇语',\n  ka: '格鲁吉亚语',\n  kg: '刚果语',\n  ki: '基库尤语',\n  kj: '宽亚马语',\n  kk: '哈萨克语',\n  kl: '格陵兰语',\n  km: '高棉语',\n  kn: '卡纳达语',\n  ko: '韩语',\n  kr: '卡努里语',\n  ks: '克什米尔语',\n  ku: '库尔德语',\n  kv: '科米语',\n  kw: '科尼什语',\n  ky: '吉尔吉斯语',\n  la: '拉丁语',\n  lb: '卢森堡语',\n  lg: '甘达语',\n  li: '林堡语',\n  ln: '林加拉语',\n  lo: '老挝语',\n  lt: '立陶宛语',\n  lu: '卢巴加丹加语',\n  lv: '拉脱维亚语',\n  mg: '马尔加什语',\n  mh: '马绍尔语',\n  mi: '毛利语',\n  mk: '马其顿语',\n  ml: '马拉雅拉姆语',\n  mn: '蒙古文',\n  mr: '马拉地语',\n  ms: '马来语',\n  mt: '马耳他语',\n  my: '缅甸语',\n  na: '瑙鲁语',\n  nb: '挪威博克马尔语',\n  nd: '北恩德贝勒语',\n  ne: '尼泊尔语',\n  ng: '尼日尔刚果语',\n  nl: '荷兰语',\n  nn: '挪威尼诺斯克语',\n  no: '挪威语',\n  nr: '南恩德贝勒语',\n  nv: '纳瓦霍语',\n  ny: '齐切瓦语',\n  oc: '奥克西唐语',\n  oj: '欧及布威语',\n  om: '奥罗莫语',\n  or: '奥里亚语',\n  os: '奥塞梯语',\n  pa: '旁遮普语',\n  pi: '巴利语',\n  pl: '波兰语',\n  ps: '普什图语',\n  pt: '葡萄牙语',\n  qu: '克丘亚语',\n  rm: '罗曼斯语',\n  rn: '基隆迪语',\n  ro: '罗马尼亚语',\n  ru: '俄语',\n  rw: '卢旺达语',\n  sa: '梵文',\n  sc: '撒丁岛语',\n  sd: '信德语',\n  se: '北萨米文',\n  sg: '桑戈语',\n  si: '僧伽罗语',\n  sk: '斯洛伐克语',\n  sl: '斯洛文尼亚语',\n  sm: '萨摩亚语',\n  sn: '绍纳语',\n  so: '索马里语',\n  sq: '阿尔巴尼亚语',\n  sr: '塞尔维亚语',\n  ss: '斯瓦蒂语',\n  st: '南索托语',\n  su: '巽他语',\n  sv: '瑞典语',\n  sw: '斯瓦希里语',\n  ta: '泰米尔语',\n  te: '泰卢固语',\n  tg: '塔吉克语',\n  th: '泰语',\n  ti: '提格雷语',\n  tk: '土库曼语',\n  tl: '菲律宾语',\n  tn: '茨瓦纳语',\n  to: '汤加语',\n  tr: '土耳其语',\n  ts: '特松加语',\n  tt: '塔塔尔语',\n  tw: '契维语',\n  ty: '塔希提语',\n  ug: '维吾尔语',\n  uk: '乌克兰语',\n  ur: '乌尔都语',\n  uz: '乌兹别克语',\n  ve: '文达语',\n  vi: '越南语',\n  vo: '沃拉普克语',\n  wa: '华隆语',\n  wo: '沃洛夫语',\n  xh: '科萨语',\n  yi: '意第绪语',\n  yo: '约鲁巴语',\n  za: '壮语',\n  zh: '中文',\n  zu: '祖鲁语',\n};\n\nexport default LANGUAGES_ZH_NAMES;\n","import ISO6391 from 'iso-639-1';\nimport LANGUAGES_ZH_NAMES from './data.js';\n\nexport default class ISO6391ZH extends ISO6391 {\n  static getLanguages(codes) {\n    return super.getLanguages(codes).map(language => {\n      Object.assign(language, {\n        zhName: ISO6391ZH.getZhName(language.code),\n      });\n      return language;\n    });\n  }\n\n  static getZhName(code) {\n    return super.validate(code) ? LANGUAGES_ZH_NAMES[code] : '';\n  }\n\n  static getAllZhNames() {\n    return Object.values(LANGUAGES_ZH_NAMES);\n  }\n}\n","\n\n    /**\n     * Safer Object.hasOwnProperty\n     */\n     function hasOwn(obj, prop){\n         return Object.prototype.hasOwnProperty.call(obj, prop);\n     }\n\n     module.exports = hasOwn;\n\n\n","var hasOwn = require('./hasOwn');\n\n    var _hasDontEnumBug,\n        _dontEnums;\n\n    function checkDontEnum(){\n        _dontEnums = [\n                'toString',\n                'toLocaleString',\n                'valueOf',\n                'hasOwnProperty',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                'constructor'\n            ];\n\n        _hasDontEnumBug = true;\n\n        for (var key in {'toString': null}) {\n            _hasDontEnumBug = false;\n        }\n    }\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forIn(obj, fn, thisObj){\n        var key, i = 0;\n        // no need to check if argument is a real object that way we can use\n        // it for arrays, functions, date, etc.\n\n        //post-pone check till needed\n        if (_hasDontEnumBug == null) checkDontEnum();\n\n        for (key in obj) {\n            if (exec(fn, obj, key, thisObj) === false) {\n                break;\n            }\n        }\n\n\n        if (_hasDontEnumBug) {\n            var ctor = obj.constructor,\n                isProto = !!ctor && obj === ctor.prototype;\n\n            while (key = _dontEnums[i++]) {\n                // For constructor, if it is a prototype object the constructor\n                // is always non-enumerable unless defined otherwise (and\n                // enumerated above).  For non-prototype objects, it will have\n                // to be defined on this object, since it cannot be defined on\n                // any prototype objects.\n                //\n                // For other [[DontEnum]] properties, check if the value is\n                // different than Object prototype value.\n                if (\n                    (key !== 'constructor' ||\n                        (!isProto && hasOwn(obj, key))) &&\n                    obj[key] !== Object.prototype[key]\n                ) {\n                    if (exec(fn, obj, key, thisObj) === false) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function exec(fn, obj, key, thisObj){\n        return fn.call(thisObj, obj[key], key, obj);\n    }\n\n    module.exports = forIn;\n\n\n","var forIn = require('./forIn');\n\n    /**\n     * return a list of all enumerable properties that have function values\n     */\n    function functions(obj){\n        var keys = [];\n        forIn(obj, function(val, key){\n            if (typeof val === 'function'){\n                keys.push(key);\n            }\n        });\n        return keys.sort();\n    }\n\n    module.exports = functions;\n\n\n","\n\n    /**\n     * Create slice of source array or array-like object\n     */\n    function slice(arr, start, end){\n        var len = arr.length;\n\n        if (start == null) {\n            start = 0;\n        } else if (start < 0) {\n            start = Math.max(len + start, 0);\n        } else {\n            start = Math.min(start, len);\n        }\n\n        if (end == null) {\n            end = len;\n        } else if (end < 0) {\n            end = Math.max(len + end, 0);\n        } else {\n            end = Math.min(end, len);\n        }\n\n        var result = [];\n        while (start < end) {\n            result.push(arr[start++]);\n        }\n\n        return result;\n    }\n\n    module.exports = slice;\n\n\n","var slice = require('../array/slice');\n\n    /**\n     * Return a function that will execute in the given context, optionally adding any additional supplied parameters to the beginning of the arguments collection.\n     * @param {Function} fn  Function.\n     * @param {object} context   Execution context.\n     * @param {rest} args    Arguments (0...n arguments).\n     * @return {Function} Wrapped Function.\n     */\n    function bind(fn, context, args){\n        var argsArr = slice(arguments, 2); //curried args\n        return function(){\n            return fn.apply(context, argsArr.concat(slice(arguments)));\n        };\n    }\n\n    module.exports = bind;\n\n\n","\n\n    /**\n     * Array forEach\n     */\n    function forEach(arr, callback, thisObj) {\n        if (arr == null) {\n            return;\n        }\n        var i = -1,\n            len = arr.length;\n        while (++i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if ( callback.call(thisObj, arr[i], i, arr) === false ) {\n                break;\n            }\n        }\n    }\n\n    module.exports = forEach;\n\n\n","var functions = require('./functions');\nvar bind = require('../function/bind');\nvar forEach = require('../array/forEach');\nvar slice = require('../array/slice');\n\n    /**\n     * Binds methods of the object to be run in it's own context.\n     */\n    function bindAll(obj, rest_methodNames){\n        var keys = arguments.length > 1?\n                    slice(arguments, 1) : functions(obj);\n        forEach(keys, function(key){\n            obj[key] = bind(obj[key], obj);\n        });\n    }\n\n    module.exports = bindAll;\n\n\n","var hasOwn = require('./hasOwn');\nvar forIn = require('./forIn');\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forOwn(obj, fn, thisObj){\n        forIn(obj, function(val, key){\n            if (hasOwn(obj, key)) {\n                return fn.call(thisObj, obj[key], key, obj);\n            }\n        });\n    }\n\n    module.exports = forOwn;\n\n\n","\n\n    /**\n     * Returns the first argument provided to it.\n     */\n    function identity(val){\n        return val;\n    }\n\n    module.exports = identity;\n\n\n","\n\n    /**\n     * Returns a function that gets a property of the passed object\n     */\n    function prop(name){\n        return function(obj){\n            return obj[name];\n        };\n    }\n\n    module.exports = prop;\n\n\n","\n\n    var _rKind = /^\\[object (.*)\\]$/,\n        _toString = Object.prototype.toString,\n        UNDEF;\n\n    /**\n     * Gets the \"kind\" of value. (e.g. \"String\", \"Number\", etc)\n     */\n    function kindOf(val) {\n        if (val === null) {\n            return 'Null';\n        } else if (val === UNDEF) {\n            return 'Undefined';\n        } else {\n            return _rKind.exec( _toString.call(val) )[1];\n        }\n    }\n    module.exports = kindOf;\n\n","var kindOf = require('./kindOf');\n    /**\n     * Check if value is from a specific \"kind\".\n     */\n    function isKind(val, kind){\n        return kindOf(val) === kind;\n    }\n    module.exports = isKind;\n\n","var isKind = require('./isKind');\n    /**\n     */\n    var isArray = Array.isArray || function (val) {\n        return isKind(val, 'Array');\n    };\n    module.exports = isArray;\n\n","var forOwn = require('./forOwn');\nvar isArray = require('../lang/isArray');\n\n    function containsMatch(array, pattern) {\n        var i = -1, length = array.length;\n        while (++i < length) {\n            if (deepMatches(array[i], pattern)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function matchArray(target, pattern) {\n        var i = -1, patternLength = pattern.length;\n        while (++i < patternLength) {\n            if (!containsMatch(target, pattern[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function matchObject(target, pattern) {\n        var result = true;\n        forOwn(pattern, function(val, key) {\n            if (!deepMatches(target[key], val)) {\n                // Return false to break out of forOwn early\n                return (result = false);\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively check if the objects match.\n     */\n    function deepMatches(target, pattern){\n        if (target && typeof target === 'object') {\n            if (isArray(target) && isArray(pattern)) {\n                return matchArray(target, pattern);\n            } else {\n                return matchObject(target, pattern);\n            }\n        } else {\n            return target === pattern;\n        }\n    }\n\n    module.exports = deepMatches;\n\n\n","var identity = require('./identity');\nvar prop = require('./prop');\nvar deepMatches = require('../object/deepMatches');\n\n    /**\n     * Converts argument into a valid iterator.\n     * Used internally on most array/object/collection methods that receives a\n     * callback/iterator providing a shortcut syntax.\n     */\n    function makeIterator(src, thisObj){\n        if (src == null) {\n            return identity;\n        }\n        switch(typeof src) {\n            case 'function':\n                // function is the first to improve perf (most common case)\n                // also avoid using `Function#call` if not needed, which boosts\n                // perf a lot in some cases\n                return (typeof thisObj !== 'undefined')? function(val, i, arr){\n                    return src.call(thisObj, val, i, arr);\n                } : src;\n            case 'object':\n                return function(val){\n                    return deepMatches(val, src);\n                };\n            case 'string':\n            case 'number':\n                return prop(src);\n        }\n    }\n\n    module.exports = makeIterator;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object some\n     */\n    function some(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = false;\n        forOwn(obj, function(val, key) {\n            if (callback(val, key, obj)) {\n                result = true;\n                return false; // break\n            }\n        });\n        return result;\n    }\n\n    module.exports = some;\n\n\n","var some = require('./some');\n\n    /**\n     * Check if object contains value\n     */\n    function contains(obj, needle) {\n        return some(obj, function(val) {\n            return (val === needle);\n        });\n    }\n    module.exports = contains;\n\n\n","\n\n    /**\n     * Checks if the value is created by the `Object` constructor.\n     */\n    function isPlainObject(value) {\n        return (!!value && typeof value === 'object' &&\n            value.constructor === Object);\n    }\n\n    module.exports = isPlainObject;\n\n\n","var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /**\n     * Deeply copy missing properties in the target from the defaults.\n     */\n    function deepFillIn(target, defaults){\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while(++i < n) {\n            obj = arguments[i];\n            if (obj) {\n                // jshint loopfunc: true\n                forOwn(obj, function(newValue, key) {\n                    var curValue = target[key];\n                    if (curValue == null) {\n                        target[key] = newValue;\n                    } else if (isPlainObject(curValue) &&\n                               isPlainObject(newValue)) {\n                        deepFillIn(curValue, newValue);\n                    }\n                });\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = deepFillIn;\n\n\n","var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /**\n     * Mixes objects into the target object, recursively mixing existing child\n     * objects.\n     */\n    function deepMixIn(target, objects) {\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while(++i < n){\n            obj = arguments[i];\n            if (obj) {\n                forOwn(obj, copyProp, target);\n            }\n        }\n\n        return target;\n    }\n\n    function copyProp(val, key) {\n        var existing = this[key];\n        if (isPlainObject(val) && isPlainObject(existing)) {\n            deepMixIn(existing, val);\n        } else {\n            this[key] = val;\n        }\n    }\n\n    module.exports = deepMixIn;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object every\n     */\n    function every(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = true;\n        forOwn(obj, function(val, key) {\n            // we consider any falsy values as \"false\" on purpose so shorthand\n            // syntax can be used to check property existence\n            if (!callback(val, key, obj)) {\n                result = false;\n                return false; // break\n            }\n        });\n        return result;\n    }\n\n    module.exports = every;\n\n\n","var isKind = require('./isKind');\n    /**\n     */\n    function isObject(val) {\n        return isKind(val, 'Object');\n    }\n    module.exports = isObject;\n\n","\n\n    /**\n     * Check if both arguments are egal.\n     */\n    function is(x, y){\n        // implementation borrowed from harmony:egal spec\n        if (x === y) {\n          // 0 === -0, but they are not identical\n          return x !== 0 || 1 / x === 1 / y;\n        }\n\n        // NaN !== NaN, but they are identical.\n        // NaNs are the only non-reflexive value, i.e., if x !== x,\n        // then x is a NaN.\n        // isNaN is broken: it converts its argument to number, so\n        // isNaN(\"foo\") => true\n        return x !== x && y !== y;\n    }\n\n    module.exports = is;\n\n\n","var hasOwn = require('./hasOwn');\nvar every = require('./every');\nvar isObject = require('../lang/isObject');\nvar is = require('../lang/is');\n\n    // Makes a function to compare the object values from the specified compare\n    // operation callback.\n    function makeCompare(callback) {\n        return function(value, key) {\n            return hasOwn(this, key) && callback(value, this[key]);\n        };\n    }\n\n    function checkProperties(value, key) {\n        return hasOwn(this, key);\n    }\n\n    /**\n     * Checks if two objects have the same keys and values.\n     */\n    function equals(a, b, callback) {\n        callback = callback || is;\n\n        if (!isObject(a) || !isObject(b)) {\n            return callback(a, b);\n        }\n\n        return (every(a, makeCompare(callback), b) &&\n                every(b, checkProperties, a));\n    }\n\n    module.exports = equals;\n\n","var forEach = require('../array/forEach');\nvar slice = require('../array/slice');\nvar forOwn = require('./forOwn');\n\n    /**\n     * Copy missing properties in the obj from the defaults.\n     */\n    function fillIn(obj, var_defaults){\n        forEach(slice(arguments, 1), function(base){\n            forOwn(base, function(val, key){\n                if (obj[key] == null) {\n                    obj[key] = val;\n                }\n            });\n        });\n        return obj;\n    }\n\n    module.exports = fillIn;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Creates a new object with all the properties where the callback returns\n     * true.\n     */\n    function filterValues(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var output = {};\n        forOwn(obj, function(value, key, obj) {\n            if (callback(value, key, obj)) {\n                output[key] = value;\n            }\n        });\n\n        return output;\n    }\n    module.exports = filterValues;\n\n","var some = require('./some');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Returns first item that matches criteria\n     */\n    function find(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result;\n        some(obj, function(value, key, obj) {\n            if (callback(value, key, obj)) {\n                result = value;\n                return true; //break\n            }\n        });\n        return result;\n    }\n\n    module.exports = find;\n\n\n","var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /*\n     * Helper function to flatten to a destination object.\n     * Used to remove the need to create intermediate objects while flattening.\n     */\n    function flattenTo(obj, result, prefix, level) {\n        forOwn(obj, function (value, key) {\n            var nestedPrefix = prefix ? prefix + '.' + key : key;\n\n            if (level !== 0 && isPlainObject(value)) {\n                flattenTo(value, result, nestedPrefix, level - 1);\n            } else {\n                result[nestedPrefix] = value;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively flattens an object.\n     * A new object containing all the elements is returned.\n     * If level is specified, it will only flatten up to that level.\n     */\n    function flatten(obj, level) {\n        if (obj == null) {\n            return {};\n        }\n\n        level = level == null ? -1 : level;\n        return flattenTo(obj, {}, '', level);\n    }\n\n    module.exports = flatten;\n\n\n","var isPrimitive = require('../lang/isPrimitive');\n\n    /**\n     * get \"nested\" object property\n     */\n    function get(obj, prop){\n        var parts = prop.split('.'),\n            last = parts.pop();\n\n        while (prop = parts.shift()) {\n            obj = obj[prop];\n            if (obj == null) return;\n        }\n\n        return obj[last];\n    }\n\n    module.exports = get;\n\n\n","var get = require('./get');\n\n    var UNDEF;\n\n    /**\n     * Check if object has nested property.\n     */\n    function has(obj, prop){\n        return get(obj, prop) !== UNDEF;\n    }\n\n    module.exports = has;\n\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * Get object keys\n     */\n     var keys = Object.keys || function (obj) {\n            var keys = [];\n            forOwn(obj, function(val, key){\n                keys.push(key);\n            });\n            return keys;\n        };\n\n    module.exports = keys;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Creates a new object where all the values are the result of calling\n     * `callback`.\n     */\n    function mapValues(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var output = {};\n        forOwn(obj, function(val, key, obj) {\n            output[key] = callback(val, key, obj);\n        });\n\n        return output;\n    }\n    module.exports = mapValues;\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * checks if a object contains all given properties/values\n     */\n    function matches(target, props){\n        // can't use \"object/every\" because of circular dependency\n        var result = true;\n        forOwn(props, function(val, key){\n            if (target[key] !== val) {\n                // break loop at first difference\n                return (result = false);\n            }\n        });\n        return result;\n    }\n\n    module.exports = matches;\n\n\n","var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Return maximum value inside array\n     */\n    function max(arr, iterator, thisObj){\n        if (arr == null || !arr.length) {\n            return Infinity;\n        } else if (arr.length && !iterator) {\n            return Math.max.apply(Math, arr);\n        } else {\n            iterator = makeIterator(iterator, thisObj);\n            var result,\n                compare = -Infinity,\n                value,\n                temp;\n\n            var i = -1, len = arr.length;\n            while (++i < len) {\n                value = arr[i];\n                temp = iterator(value, i, arr);\n                if (temp > compare) {\n                    compare = temp;\n                    result = value;\n                }\n            }\n\n            return result;\n        }\n    }\n\n    module.exports = max;\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * Get object values\n     */\n    function values(obj) {\n        var vals = [];\n        forOwn(obj, function(val, key){\n            vals.push(val);\n        });\n        return vals;\n    }\n\n    module.exports = values;\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n    * Combine properties from all the objects into first one.\n    * - This method affects target object in place, if you want to create a new Object pass an empty object as first param.\n    * @param {object} target    Target Object\n    * @param {...object} objects    Objects to be combined (0...n objects).\n    * @return {object} Target Object.\n    */\n    function mixIn(target, objects){\n        var i = 0,\n            n = arguments.length,\n            obj;\n        while(++i < n){\n            obj = arguments[i];\n            if (obj != null) {\n                forOwn(obj, copyProp, target);\n            }\n        }\n        return target;\n    }\n\n    function copyProp(val, key){\n        this[key] = val;\n    }\n\n    module.exports = mixIn;\n\n","var kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\nvar mixIn = require('../object/mixIn');\n\n    /**\n     * Clone native types.\n     */\n    function clone(val){\n        switch (kindOf(val)) {\n            case 'Object':\n                return cloneObject(val);\n            case 'Array':\n                return cloneArray(val);\n            case 'RegExp':\n                return cloneRegExp(val);\n            case 'Date':\n                return cloneDate(val);\n            default:\n                return val;\n        }\n    }\n\n    function cloneObject(source) {\n        if (isPlainObject(source)) {\n            return mixIn({}, source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneRegExp(r) {\n        var flags = '';\n        flags += r.multiline ? 'm' : '';\n        flags += r.global ? 'g' : '';\n        flags += r.ignoreCase ? 'i' : '';\n        return new RegExp(r.source, flags);\n    }\n\n    function cloneDate(date) {\n        return new Date(+date);\n    }\n\n    function cloneArray(arr) {\n        return arr.slice();\n    }\n\n    module.exports = clone;\n\n\n","var clone = require('./clone');\nvar forOwn = require('../object/forOwn');\nvar kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\n\n    /**\n     * Recursively clone native types.\n     */\n    function deepClone(val, instanceClone) {\n        switch ( kindOf(val) ) {\n            case 'Object':\n                return cloneObject(val, instanceClone);\n            case 'Array':\n                return cloneArray(val, instanceClone);\n            default:\n                return clone(val);\n        }\n    }\n\n    function cloneObject(source, instanceClone) {\n        if (isPlainObject(source)) {\n            var out = {};\n            forOwn(source, function(val, key) {\n                this[key] = deepClone(val, instanceClone);\n            }, out);\n            return out;\n        } else if (instanceClone) {\n            return instanceClone(source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneArray(arr, instanceClone) {\n        var out = [],\n            i = -1,\n            n = arr.length,\n            val;\n        while (++i < n) {\n            out[i] = deepClone(arr[i], instanceClone);\n        }\n        return out;\n    }\n\n    module.exports = deepClone;\n\n\n\n","var hasOwn = require('./hasOwn');\nvar deepClone = require('../lang/deepClone');\nvar isObject = require('../lang/isObject');\n\n    /**\n     * Deep merge objects.\n     */\n    function merge() {\n        var i = 1,\n            key, val, obj, target;\n\n        // make sure we don't modify source element and it's properties\n        // objects are passed by reference\n        target = deepClone( arguments[0] );\n\n        while (obj = arguments[i++]) {\n            for (key in obj) {\n                if ( ! hasOwn(obj, key) ) {\n                    continue;\n                }\n\n                val = obj[key];\n\n                if ( isObject(val) && isObject(target[key]) ){\n                    // inception, deep merge objects\n                    target[key] = merge(target[key], val);\n                } else {\n                    // make sure arrays, regexp, date, objects are cloned\n                    target[key] = deepClone(val);\n                }\n\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = merge;\n\n\n","var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Return minimum value inside array\n     */\n    function min(arr, iterator, thisObj){\n        if (arr == null || !arr.length) {\n            return -Infinity;\n        } else if (arr.length && !iterator) {\n            return Math.min.apply(Math, arr);\n        } else {\n            iterator = makeIterator(iterator, thisObj);\n            var result,\n                compare = Infinity,\n                value,\n                temp;\n\n            var i = -1, len = arr.length;\n            while (++i < len) {\n                value = arr[i];\n                temp = iterator(value, i, arr);\n                if (temp < compare) {\n                    compare = temp;\n                    result = value;\n                }\n            }\n\n            return result;\n        }\n    }\n\n    module.exports = min;\n\n\n","var forEach = require('../array/forEach');\n\n    /**\n     * Create nested object if non-existent\n     */\n    function namespace(obj, path){\n        if (!path) return obj;\n        forEach(path.split('.'), function(key){\n            if (!obj[key]) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        });\n        return obj;\n    }\n\n    module.exports = namespace;\n\n\n","\n\n    /**\n     * Array.indexOf\n     */\n    function indexOf(arr, item, fromIndex) {\n        fromIndex = fromIndex || 0;\n        if (arr == null) {\n            return -1;\n        }\n\n        var len = arr.length,\n            i = fromIndex < 0 ? len + fromIndex : fromIndex;\n        while (i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if (arr[i] === item) {\n                return i;\n            }\n\n            i++;\n        }\n\n        return -1;\n    }\n\n    module.exports = indexOf;\n\n","var indexOf = require('./indexOf');\n\n    /**\n     * If array contains values.\n     */\n    function contains(arr, val) {\n        return indexOf(arr, val) !== -1;\n    }\n    module.exports = contains;\n\n","var map = require('./map');\nvar prop = require('../function/prop');\n\n    /**\n     * Extract a list of property values.\n     */\n    function pluck(obj, propName){\n        return map(obj, prop(propName));\n    }\n\n    module.exports = pluck;\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * Get object size\n     */\n    function size(obj) {\n        var count = 0;\n        forOwn(obj, function(){\n            count++;\n        });\n        return count;\n    }\n\n    module.exports = size;\n\n\n","var forOwn = require('./forOwn');\nvar size = require('./size');\n\n    /**\n     * Object reduce\n     */\n    function reduce(obj, callback, memo, thisObj) {\n        var initial = arguments.length > 2;\n\n        if (!size(obj) && !initial) {\n            throw new Error('reduce of empty object with no initial value');\n        }\n\n        forOwn(obj, function(value, key, list) {\n            if (!initial) {\n                memo = value;\n                initial = true;\n            }\n            else {\n                memo = callback.call(thisObj, memo, value, key, list);\n            }\n        });\n\n        return memo;\n    }\n\n    module.exports = reduce;\n\n\n","var filter = require('./filter');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object reject\n     */\n    function reject(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        return filter(obj, function(value, index, obj) {\n            return !callback(value, index, obj);\n        }, thisObj);\n    }\n\n    module.exports = reject;\n\n\n","var isKind = require('./isKind');\n    /**\n     */\n    function isFunction(val) {\n        return isKind(val, 'Function');\n    }\n    module.exports = isFunction;\n\n","var namespace = require('./namespace');\n\n    /**\n     * set \"nested\" object property\n     */\n    function set(obj, prop, val){\n        var parts = (/^(.+)\\.(.+)$/).exec(prop);\n        if (parts){\n            namespace(obj, parts[1])[parts[2]] = val;\n        } else {\n            obj[prop] = val;\n        }\n    }\n\n    module.exports = set;\n\n\n","var has = require('./has');\n\n    /**\n     * Unset object property.\n     */\n    function unset(obj, prop){\n        if (has(obj, prop)) {\n            var parts = prop.split('.'),\n                last = parts.pop();\n            while (prop = parts.shift()) {\n                obj = obj[prop];\n            }\n            return (delete obj[last]);\n\n        } else {\n            // if property doesn't exist treat as deleted\n            return true;\n        }\n    }\n\n    module.exports = unset;\n\n\n","\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'bindAll' : require('./object/bindAll'),\n    'contains' : require('./object/contains'),\n    'deepFillIn' : require('./object/deepFillIn'),\n    'deepMatches' : require('./object/deepMatches'),\n    'deepMixIn' : require('./object/deepMixIn'),\n    'equals' : require('./object/equals'),\n    'every' : require('./object/every'),\n    'fillIn' : require('./object/fillIn'),\n    'filter' : require('./object/filter'),\n    'find' : require('./object/find'),\n    'flatten' : require('./object/flatten'),\n    'forIn' : require('./object/forIn'),\n    'forOwn' : require('./object/forOwn'),\n    'functions' : require('./object/functions'),\n    'get' : require('./object/get'),\n    'has' : require('./object/has'),\n    'hasOwn' : require('./object/hasOwn'),\n    'keys' : require('./object/keys'),\n    'map' : require('./object/map'),\n    'matches' : require('./object/matches'),\n    'max' : require('./object/max'),\n    'merge' : require('./object/merge'),\n    'min' : require('./object/min'),\n    'mixIn' : require('./object/mixIn'),\n    'namespace' : require('./object/namespace'),\n    'omit' : require('./object/omit'),\n    'pick' : require('./object/pick'),\n    'pluck' : require('./object/pluck'),\n    'reduce' : require('./object/reduce'),\n    'reject' : require('./object/reject'),\n    'result' : require('./object/result'),\n    'set' : require('./object/set'),\n    'size' : require('./object/size'),\n    'some' : require('./object/some'),\n    'unset' : require('./object/unset'),\n    'values' : require('./object/values')\n};\n\n\n","var arrMax = require('../array/max');\nvar values = require('./values');\n\n    /**\n     * Returns maximum value inside object.\n     */\n    function max(obj, compareFn) {\n        return arrMax(values(obj), compareFn);\n    }\n\n    module.exports = max;\n\n","var arrMin = require('../array/min');\nvar values = require('./values');\n\n    /**\n     * Returns minimum value inside object.\n     */\n    function min(obj, iterator) {\n        return arrMin(values(obj), iterator);\n    }\n\n    module.exports = min;\n\n","var slice = require('../array/slice');\nvar contains = require('../array/contains');\n\n    /**\n     * Return a copy of the object, filtered to only contain properties except the blacklisted keys.\n     */\n    function omit(obj, var_keys){\n        var keys = typeof arguments[1] !== 'string'? arguments[1] : slice(arguments, 1),\n            out = {};\n\n        for (var property in obj) {\n            if (obj.hasOwnProperty(property) && !contains(keys, property)) {\n                out[property] = obj[property];\n            }\n        }\n        return out;\n    }\n\n    module.exports = omit;\n\n\n","var slice = require('../array/slice');\n\n    /**\n     * Return a copy of the object, filtered to only have values for the whitelisted keys.\n     */\n    function pick(obj, var_keys){\n        var keys = typeof arguments[1] !== 'string'? arguments[1] : slice(arguments, 1),\n            out = {},\n            i = 0, key;\n        while (key = keys[i++]) {\n            out[key] = obj[key];\n        }\n        return out;\n    }\n\n    module.exports = pick;\n\n\n","var isFunction = require('../lang/isFunction');\n\n    function result(obj, prop) {\n        var property = obj[prop];\n\n        if(property === undefined) {\n            return;\n        }\n\n        return isFunction(property) ? property.call(obj) : property;\n    }\n\n    module.exports = result;\n\n","(function() {\r\n    var Iso31661a2, mout, singleton;\r\n\r\n    mout = require('mout/object');\r\n\r\n    Iso31661a2 = (function() {\r\n        function Iso31661a2() {}\r\n\r\n        Iso31661a2.prototype.getCountry = function(code) {\r\n            return Iso31661a2.prototype.countries[code];\r\n        };\r\n\r\n        Iso31661a2.prototype.getCode = function(country) {\r\n            var idx, ret;\r\n            ret = null;\r\n            if (country != null) {\r\n                idx = mout.values(Iso31661a2.prototype.countries).indexOf(country);\r\n                if (idx !== -1) {\r\n                    ret = Object.keys(Iso31661a2.prototype.countries)[idx];\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        Iso31661a2.prototype.getCountries = function() {\r\n            return mout.values(Iso31661a2.prototype.countries);\r\n        };\r\n\r\n        Iso31661a2.prototype.getCodes = function() {\r\n            return Object.keys(Iso31661a2.prototype.countries);\r\n        };\r\n\r\n        Iso31661a2.prototype.getData = function() {\r\n            return Iso31661a2.prototype.countries;\r\n        };\r\n\r\n        Iso31661a2.prototype.countries = {\r\n            AF: \"Afghanistan\",\r\n            AX: \"Åland Islands\",\r\n            AL: \"Albania\",\r\n            DZ: \"Algeria\",\r\n            AS: \"American Samoa\",\r\n            AD: \"Andorra\",\r\n            AO: \"Angola\",\r\n            AI: \"Anguilla\",\r\n            AQ: \"Antarctica\",\r\n            AG: \"Antigua and Barbuda\",\r\n            AR: \"Argentina\",\r\n            AM: \"Armenia\",\r\n            AW: \"Aruba\",\r\n            AU: \"Australia\",\r\n            AT: \"Austria\",\r\n            AZ: \"Azerbaijan\",\r\n            BS: \"Bahamas\",\r\n            BH: \"Bahrain\",\r\n            BD: \"Bangladesh\",\r\n            BB: \"Barbados\",\r\n            BY: \"Belarus\",\r\n            BE: \"Belgium\",\r\n            BZ: \"Belize\",\r\n            BJ: \"Benin\",\r\n            BM: \"Bermuda\",\r\n            BT: \"Bhutan\",\r\n            BO: \"Bolivia, Plurinational State of\",\r\n            BQ: \"Bonaire, Sint Eustatius and Saba\",\r\n            BA: \"Bosnia and Herzegovina\",\r\n            BW: \"Botswana\",\r\n            BV: \"Bouvet Island\",\r\n            BR: \"Brazil\",\r\n            IO: \"British Indian Ocean Territory\",\r\n            BN: \"Brunei Darussalam\",\r\n            BG: \"Bulgaria\",\r\n            BF: \"Burkina Faso\",\r\n            BI: \"Burundi\",\r\n            KH: \"Cambodia\",\r\n            CM: \"Cameroon\",\r\n            CA: \"Canada\",\r\n            CV: \"Cape Verde\",\r\n            KY: \"Cayman Islands\",\r\n            CF: \"Central African Republic\",\r\n            TD: \"Chad\",\r\n            CL: \"Chile\",\r\n            CN: \"China\",\r\n            CX: \"Christmas Island\",\r\n            CC: \"Cocos (Keeling) Islands\",\r\n            CO: \"Colombia\",\r\n            KM: \"Comoros\",\r\n            CG: \"Congo\",\r\n            CD: \"Congo, the Democratic Republic of the\",\r\n            CK: \"Cook Islands\",\r\n            CR: \"Costa Rica\",\r\n            CI: \"Côte d'Ivoire\",\r\n            HR: \"Croatia\",\r\n            CU: \"Cuba\",\r\n            CW: \"Curaçao\",\r\n            CY: \"Cyprus\",\r\n            CZ: \"Czech Republic\",\r\n            DK: \"Denmark\",\r\n            DJ: \"Djibouti\",\r\n            DM: \"Dominica\",\r\n            DO: \"Dominican Republic\",\r\n            EC: \"Ecuador\",\r\n            EG: \"Egypt\",\r\n            SV: \"El Salvador\",\r\n            GQ: \"Equatorial Guinea\",\r\n            ER: \"Eritrea\",\r\n            EE: \"Estonia\",\r\n            ET: \"Ethiopia\",\r\n            FK: \"Falkland Islands (Malvinas)\",\r\n            FO: \"Faroe Islands\",\r\n            FJ: \"Fiji\",\r\n            FI: \"Finland\",\r\n            FR: \"France\",\r\n            GF: \"French Guiana\",\r\n            PF: \"French Polynesia\",\r\n            TF: \"French Southern Territories\",\r\n            GA: \"Gabon\",\r\n            GM: \"Gambia\",\r\n            GE: \"Georgia\",\r\n            DE: \"Germany\",\r\n            GH: \"Ghana\",\r\n            GI: \"Gibraltar\",\r\n            GR: \"Greece\",\r\n            GL: \"Greenland\",\r\n            GD: \"Grenada\",\r\n            GP: \"Guadeloupe\",\r\n            GU: \"Guam\",\r\n            GT: \"Guatemala\",\r\n            GG: \"Guernsey\",\r\n            GN: \"Guinea\",\r\n            GW: \"Guinea-Bissau\",\r\n            GY: \"Guyana\",\r\n            HT: \"Haiti\",\r\n            HM: \"Heard Island and McDonald Mcdonald Islands\",\r\n            VA: \"Holy See (Vatican City State)\",\r\n            HN: \"Honduras\",\r\n            HK: \"Hong Kong\",\r\n            HU: \"Hungary\",\r\n            IS: \"Iceland\",\r\n            IN: \"India\",\r\n            ID: \"Indonesia\",\r\n            IR: \"Iran, Islamic Republic of\",\r\n            IQ: \"Iraq\",\r\n            IE: \"Ireland\",\r\n            IM: \"Isle of Man\",\r\n            IL: \"Israel\",\r\n            IT: \"Italy\",\r\n            JM: \"Jamaica\",\r\n            JP: \"Japan\",\r\n            JE: \"Jersey\",\r\n            JO: \"Jordan\",\r\n            KZ: \"Kazakhstan\",\r\n            KE: \"Kenya\",\r\n            KI: \"Kiribati\",\r\n            KP: \"Korea, Democratic People's Republic of\",\r\n            KR: \"Korea, Republic of\",\r\n            KW: \"Kuwait\",\r\n            KG: \"Kyrgyzstan\",\r\n            LA: \"Lao People's Democratic Republic\",\r\n            LV: \"Latvia\",\r\n            LB: \"Lebanon\",\r\n            LS: \"Lesotho\",\r\n            LR: \"Liberia\",\r\n            LY: \"Libya\",\r\n            LI: \"Liechtenstein\",\r\n            LT: \"Lithuania\",\r\n            LU: \"Luxembourg\",\r\n            MO: \"Macao\",\r\n            MK: \"Macedonia, the Former Yugoslav Republic of\",\r\n            MG: \"Madagascar\",\r\n            MW: \"Malawi\",\r\n            MY: \"Malaysia\",\r\n            MV: \"Maldives\",\r\n            ML: \"Mali\",\r\n            MT: \"Malta\",\r\n            MH: \"Marshall Islands\",\r\n            MQ: \"Martinique\",\r\n            MR: \"Mauritania\",\r\n            MU: \"Mauritius\",\r\n            YT: \"Mayotte\",\r\n            MX: \"Mexico\",\r\n            FM: \"Micronesia, Federated States of\",\r\n            MD: \"Moldova, Republic of\",\r\n            MC: \"Monaco\",\r\n            MN: \"Mongolia\",\r\n            ME: \"Montenegro\",\r\n            MS: \"Montserrat\",\r\n            MA: \"Morocco\",\r\n            MZ: \"Mozambique\",\r\n            MM: \"Myanmar\",\r\n            NA: \"Namibia\",\r\n            NR: \"Nauru\",\r\n            NP: \"Nepal\",\r\n            NL: \"Netherlands\",\r\n            NC: \"New Caledonia\",\r\n            NZ: \"New Zealand\",\r\n            NI: \"Nicaragua\",\r\n            NE: \"Niger\",\r\n            NG: \"Nigeria\",\r\n            NU: \"Niue\",\r\n            NF: \"Norfolk Island\",\r\n            MP: \"Northern Mariana Islands\",\r\n            NO: \"Norway\",\r\n            OM: \"Oman\",\r\n            PK: \"Pakistan\",\r\n            PW: \"Palau\",\r\n            PS: \"Palestine, State of\",\r\n            PA: \"Panama\",\r\n            PG: \"Papua New Guinea\",\r\n            PY: \"Paraguay\",\r\n            PE: \"Peru\",\r\n            PH: \"Philippines\",\r\n            PN: \"Pitcairn\",\r\n            PL: \"Poland\",\r\n            PT: \"Portugal\",\r\n            PR: \"Puerto Rico\",\r\n            QA: \"Qatar\",\r\n            RE: \"Réunion\",\r\n            RO: \"Romania\",\r\n            RU: \"Russian Federation\",\r\n            RW: \"Rwanda\",\r\n            BL: \"Saint Barthélemy\",\r\n            SH: \"Saint Helena, Ascension and Tristan da Cunha\",\r\n            KN: \"Saint Kitts and Nevis\",\r\n            LC: \"Saint Lucia\",\r\n            MF: \"Saint Martin (French part)\",\r\n            PM: \"Saint Pierre and Miquelon\",\r\n            VC: \"Saint Vincent and the Grenadines\",\r\n            WS: \"Samoa\",\r\n            SM: \"San Marino\",\r\n            ST: \"Sao Tome and Principe\",\r\n            SA: \"Saudi Arabia\",\r\n            SN: \"Senegal\",\r\n            RS: \"Serbia\",\r\n            SC: \"Seychelles\",\r\n            SL: \"Sierra Leone\",\r\n            SG: \"Singapore\",\r\n            SX: \"Sint Maarten (Dutch part)\",\r\n            SK: \"Slovakia\",\r\n            SI: \"Slovenia\",\r\n            SB: \"Solomon Islands\",\r\n            SO: \"Somalia\",\r\n            ZA: \"South Africa\",\r\n            GS: \"South Georgia and the South Sandwich Islands\",\r\n            SS: \"South Sudan\",\r\n            ES: \"Spain\",\r\n            LK: \"Sri Lanka\",\r\n            SD: \"Sudan\",\r\n            SR: \"Suriname\",\r\n            SJ: \"Svalbard and Jan Mayen\",\r\n            SZ: \"Swaziland\",\r\n            SE: \"Sweden\",\r\n            CH: \"Switzerland\",\r\n            SY: \"Syrian Arab Republic\",\r\n            TW: \"Taiwan, Province of China\",\r\n            TJ: \"Tajikistan\",\r\n            TZ: \"Tanzania, United Republic of\",\r\n            TH: \"Thailand\",\r\n            TL: \"Timor-Leste\",\r\n            TG: \"Togo\",\r\n            TK: \"Tokelau\",\r\n            TO: \"Tonga\",\r\n            TT: \"Trinidad and Tobago\",\r\n            TN: \"Tunisia\",\r\n            TR: \"Turkey\",\r\n            TM: \"Turkmenistan\",\r\n            TC: \"Turks and Caicos Islands\",\r\n            TV: \"Tuvalu\",\r\n            UG: \"Uganda\",\r\n            UA: \"Ukraine\",\r\n            AE: \"United Arab Emirates\",\r\n            GB: \"United Kingdom\",\r\n            US: \"United States\",\r\n            UM: \"United States Minor Outlying Islands\",\r\n            UY: \"Uruguay\",\r\n            UZ: \"Uzbekistan\",\r\n            VU: \"Vanuatu\",\r\n            VE: \"Venezuela, Bolivarian Republic of\",\r\n            VN: \"Viet Nam\",\r\n            VG: \"Virgin Islands, British\",\r\n            VI: \"Virgin Islands, U.S.\",\r\n            WF: \"Wallis and Futuna\",\r\n            EH: \"Western Sahara\",\r\n            YE: \"Yemen\",\r\n            ZM: \"Zambia\",\r\n            ZW: \"Zimbabwe\"\r\n        };\r\n\r\n        return Iso31661a2;\r\n\r\n    })();\r\n\r\n    singleton = null;\r\n\r\n    module.exports = (function() {\r\n        return singleton != null ? singleton : singleton = new Iso31661a2();\r\n    })();\r\n\r\n}).call(this);\r\n","import LanguageCode from 'iso-639-1-zh'\nimport CountryCode from 'iso-3166-1-alpha-2'\n\nconst REG = /^([a-z]{2})-([A-Z]{2})$/\n\nexport default class LocaleCode {\n  /* language iso-639-1 */\n  static getLanguageCode(code) {\n    var match = code.match(REG)\n    if(!match || match.length < 1) return ''\n    return match[1]\n  }\n\n  static getLanguageName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getName(languageCode)\n  }\n\n  static getLanguageNativeName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getNativeName(languageCode)\n  }\n\n  static getLanguageZhName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getZhName(languageCode)\n  }\n\n  static validateLanguageCode(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.validate(languageCode)\n  }\n\n  static getLanguages(codes) {\n    var list = []\n    for (var i = 0; i < codes.length; i++) {\n      list.push({\n        code:codes[i], \n        name: LocaleCode.getLanguageName(codes[i]),\n        nativeName: LocaleCode.getLanguageNativeName(codes[i]),\n        zhName: LocaleCode.getLanguageZhName(codes[i])\n      })\n    }\n    return list\n  }\n\n  /* country iso-3166-1-alpha-2 */\n  static getCountryCode(code) {\n    var match = code.match(REG)\n    if(!match || match.length < 2) return ''\n    return match[2]\n  }\n  static getCountryName(code) {\n    var countryCode = LocaleCode.getCountryCode(code)\n    return CountryCode.getCountry(countryCode)\n  }\n  static validateCountryCode(code) {\n    code = LocaleCode.getCountryCode(code)\n    if(CountryCode.getCodes().indexOf(code) === -1) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /* validate */\n  static validate(code) {\n    var match = code.match(REG)\n    if(match && match.length === 3 && \n      LocaleCode.validateLanguageCode(code) &&\n      LocaleCode.validateCountryCode(code)) {\n      return true\n    } else {\n      return false\n    }\n  }\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nexport default v1;","import bytesToUuid from './bytesToUuid.js';\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = new Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  var generateUUID = function generateUUID(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n    if (typeof value == 'string') value = stringToBytes(value);\n    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3\n\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  }; // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name;\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var i;\n  var x;\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  var hex;\n\n  for (i = 0; i < length32; i += 8) {\n    x = input[i >> 5] >>> i % 32 & 0xff;\n    hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(len + 64 >>> 9 << 4) + 14] = len;\n  var i;\n  var olda;\n  var oldb;\n  var oldc;\n  var oldd;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  var i;\n  var output = [];\n  output[(input.length >> 2) - 1] = undefined;\n\n  for (i = 0; i < output.length; i += 1) {\n    output[i] = 0;\n  }\n\n  var length8 = input.length * 8;\n\n  for (i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var i = 0; i < N; i++) {\n    M[i] = new Array(16);\n\n    for (var j = 0; j < 16; j++) {\n      M[i][j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var i = 0; i < N; i++) {\n    var W = new Array(80);\n\n    for (var t = 0; t < 16; t++) {\n      W[t] = M[i][t];\n    }\n\n    for (var t = 16; t < 80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t = 0; t < 80; t++) {\n      var s = Math.floor(t / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Default sample rate for microphone streams.\n * @public\n */\nexports.DefaultSampleRate = 16000;\n/**\n * Error to be thrown when the microphone was accessed before it was initialized.\n * @public\n */\nexports.ErrNotInitialized = new Error('Microphone is not initialized');\n/**\n * Error to be thrown when the initialize method of a Microphone instance is called more than once.\n * @public\n */\nexports.ErrAlreadyInitialized = new Error('Microphone is already initialized');\n/**\n * Error to be thrown when the device does not support the Microphone instance's target audio APIs.\n * @public\n */\nexports.ErrDeviceNotSupported = new Error('Current device does not support microphone API');\n/**\n * Error to be thrown when user did not give consent to the application to record audio.\n * @public\n */\nexports.ErrNoAudioConsent = new Error('Microphone consent is no given');\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\nconst audioProcessEvent = 'audioprocess';\nclass BrowserAudioProcessor {\n    constructor(onAudio) {\n        this.initialized = false;\n        this.handleAudio = (event) => {\n            this.onAudio(event.inputBuffer.getChannelData(0));\n        };\n        if (window.AudioContext !== undefined) {\n            this.audioContext = new window.AudioContext();\n            this.isWebkit = false;\n        }\n        else if (window.webkitAudioContext !== undefined) {\n            // eslint-disable-next-line new-cap\n            this.audioContext = new window.webkitAudioContext();\n            this.isWebkit = true;\n        }\n        else {\n            throw types_1.ErrDeviceNotSupported;\n        }\n        this.sampleRate = this.audioContext.sampleRate;\n        this.onAudio = onAudio;\n    }\n    initialize() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (((_a = window.navigator) === null || _a === void 0 ? void 0 : _a.mediaDevices) === undefined) {\n                throw types_1.ErrDeviceNotSupported;\n            }\n            // Start audio context if we are dealing with a WebKit browser.\n            //\n            // WebKit browsers (e.g. Safari) require to resume the context first,\n            // before obtaining user media by calling `mediaDevices.getUserMedia`.\n            //\n            // If done in a different order, the audio context will resume successfully,\n            // but will emit empty audio buffers.\n            if (this.isWebkit) {\n                yield this.audioContext.resume();\n            }\n            try {\n                this.mediaStream = yield window.navigator.mediaDevices.getUserMedia({\n                    audio: true,\n                    video: false\n                });\n            }\n            catch (_b) {\n                throw types_1.ErrNoAudioConsent;\n            }\n            this.audioTrack = this.mediaStream.getAudioTracks()[0];\n            this.audioTrack.enabled = false;\n            // Start audio context if we are dealing with a non-WebKit browser.\n            //\n            // Non-webkit browsers (currently only Chrome on Android)\n            // require that user media is obtained before resuming the audio context.\n            //\n            // If audio context is attempted to be resumed before `mediaDevices.getUserMedia`,\n            // `audioContext.resume()` will hang indefinitely, without being resolved or rejected.\n            if (!this.isWebkit) {\n                yield this.audioContext.resume();\n            }\n            this.audioProcessor = this.audioContext.createScriptProcessor(undefined, 2, 1);\n            this.audioContext.createMediaStreamSource(this.mediaStream).connect(this.audioProcessor);\n            this.audioProcessor.connect(this.audioContext.destination);\n            this.audioProcessor.addEventListener(audioProcessEvent, this.handleAudio);\n            this.initialized = true;\n        });\n    }\n    close() {\n        if (!this.initialized) {\n            throw types_1.ErrNotInitialized;\n        }\n        // Stop all media tracks\n        const stream = this.mediaStream;\n        stream.getTracks().forEach(t => t.stop());\n        // Disconnect and stop ScriptProcessorNode\n        const proc = this.audioProcessor;\n        proc.disconnect();\n        proc.removeEventListener(audioProcessEvent, this.handleAudio);\n        // Unset all audio infrastructure\n        this.mediaStream = undefined;\n        this.audioTrack = undefined;\n        this.audioProcessor = undefined;\n        this.initialized = false;\n    }\n    mute() {\n        if (this.initialized) {\n            const t = this.audioTrack;\n            t.enabled = false;\n        }\n    }\n    unmute() {\n        if (this.initialized) {\n            const t = this.audioTrack;\n            t.enabled = true;\n        }\n    }\n}\nexports.BrowserAudioProcessor = BrowserAudioProcessor;\n//# sourceMappingURL=browser_audio_processor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Downsampler {\n    constructor(sourceSampleRate, targetSampleRate, filter) {\n        this.buffer = new Float32Array(0);\n        this.resampleRatio = sourceSampleRate / targetSampleRate;\n        this.filter = filter;\n    }\n    call(input) {\n        const inputBuffer = new Float32Array(this.buffer.length + input.length);\n        inputBuffer.set(this.buffer, 0);\n        inputBuffer.set(input, this.buffer.length);\n        const outputLength = Math.ceil((inputBuffer.length - this.filter.length) / this.resampleRatio);\n        const outputBuffer = new Float32Array(outputLength);\n        for (let i = 0; i < outputLength; i++) {\n            const offset = Math.round(this.resampleRatio * i);\n            for (let j = 0; j < this.filter.length; j++) {\n                outputBuffer[i] += inputBuffer[offset + j] * this.filter[j];\n            }\n        }\n        const remainingOffset = Math.round(this.resampleRatio * outputLength);\n        if (remainingOffset < inputBuffer.length) {\n            this.buffer = inputBuffer.slice(remainingOffset);\n        }\n        else {\n            this.buffer = this.buffer.slice(0, 0);\n        }\n        return outputBuffer;\n    }\n}\nexports.Downsampler = Downsampler;\nfunction generateDownsampler(sourceSampleRate, targetSampleRate) {\n    return new Downsampler(sourceSampleRate, targetSampleRate, generateFilter(sourceSampleRate, targetSampleRate / 2, 23));\n}\nexports.generateDownsampler = generateDownsampler;\nfunction float32ToInt16(buffer) {\n    let l = buffer.length;\n    const buf = new Int16Array(l);\n    while (l-- > 0) {\n        buf[l] = buffer[l] * (buffer[l] < 0 ? 0x8000 : 0x7fff);\n    }\n    return buf.buffer;\n}\nexports.float32ToInt16 = float32ToInt16;\nfunction generateFilter(sourceSampleRate, targetSampleRate, length) {\n    if (length % 2 === 0) {\n        throw Error('Filter length must be odd');\n    }\n    const filter = new Array(length);\n    let sum = 0;\n    for (let i = 0; i < length; i++) {\n        const x = sinc(((2 * targetSampleRate) / sourceSampleRate) * (i - (length - 1) / 2));\n        sum += x;\n        filter[i] = x;\n    }\n    for (let i = 0; i < length; i++) {\n        filter[i] = filter[i] / sum;\n    }\n    return filter;\n}\nfunction sinc(x) {\n    if (x === 0.0) {\n        return 1.0;\n    }\n    const piX = Math.PI * x;\n    return Math.sin(piX) / piX;\n}\n//# sourceMappingURL=downsampler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst browser_audio_processor_1 = require(\"./browser_audio_processor\");\nconst downsampler_1 = require(\"./downsampler\");\nclass BrowserMicrophone {\n    constructor(sampleRate, audioProcessor, downsampler) {\n        this.isMuted = false;\n        this.onAudioCb = () => { };\n        this.handleAudio = (audioBuffer) => {\n            if (this.isMuted) {\n                return;\n            }\n            this.onAudioCb(downsampler_1.float32ToInt16(this.downsampler.call(audioBuffer)));\n        };\n        this.audioProcessor = audioProcessor !== null && audioProcessor !== void 0 ? audioProcessor : new browser_audio_processor_1.BrowserAudioProcessor(this.handleAudio);\n        this.downsampler = downsampler !== null && downsampler !== void 0 ? downsampler : downsampler_1.generateDownsampler(this.audioProcessor.sampleRate, sampleRate);\n    }\n    onAudio(cb) {\n        this.onAudioCb = cb;\n    }\n    initialize(cb) {\n        this.audioProcessor\n            .initialize()\n            .then(() => cb())\n            .catch(cb);\n    }\n    close(cb) {\n        this.mute();\n        this.audioProcessor.close();\n        cb();\n    }\n    mute() {\n        this.isMuted = true;\n        this.audioProcessor.mute();\n    }\n    unmute() {\n        this.isMuted = false;\n        this.audioProcessor.unmute();\n    }\n}\nexports.BrowserMicrophone = BrowserMicrophone;\n//# sourceMappingURL=browser_microphone.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./browser_microphone\"));\n__export(require(\"./types\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Known WebSocket response types.\n * @public\n */\nvar WebsocketResponseType;\n(function (WebsocketResponseType) {\n    WebsocketResponseType[\"Started\"] = \"started\";\n    WebsocketResponseType[\"Stopped\"] = \"stopped\";\n    WebsocketResponseType[\"SegmentEnd\"] = \"segment_end\";\n    WebsocketResponseType[\"Transcript\"] = \"transcript\";\n    WebsocketResponseType[\"Entity\"] = \"entity\";\n    WebsocketResponseType[\"Intent\"] = \"intent\";\n    WebsocketResponseType[\"TentativeTranscript\"] = \"tentative_transcript\";\n    WebsocketResponseType[\"TentativeEntities\"] = \"tentative_entities\";\n    WebsocketResponseType[\"TentativeIntent\"] = \"tentative_intent\";\n})(WebsocketResponseType = exports.WebsocketResponseType || (exports.WebsocketResponseType = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\nclass WebsocketClient {\n    constructor(baseUrl, appId, language, sampleRate) {\n        this.startCbs = [];\n        this.stopCbs = [];\n        this.onResponseCb = () => { };\n        this.onCloseCb = () => { };\n        this.onWebsocketMessage = (event) => {\n            let response;\n            try {\n                response = JSON.parse(event.data);\n            }\n            catch (e) {\n                console.error('[SpeechlyClient] Error parsing response from the server:', e);\n                return;\n            }\n            switch (response.type) {\n                case types_1.WebsocketResponseType.Started:\n                    this.startCbs.forEach(cb => {\n                        try {\n                            cb(undefined, response.audio_context);\n                        }\n                        catch (e) {\n                            console.error('[SpeechlyClient] Error while invoking \"onStart\" callback:', e);\n                        }\n                    });\n                    this.startCbs.length = 0;\n                    break;\n                case types_1.WebsocketResponseType.Stopped:\n                    this.stopCbs.forEach(cb => {\n                        try {\n                            cb(undefined, response.audio_context);\n                        }\n                        catch (e) {\n                            console.error('[SpeechlyClient] Error while invoking \"onStop\" callback:', e);\n                        }\n                    });\n                    this.stopCbs.length = 0;\n                    break;\n                default:\n                    this.onResponseCb(response);\n            }\n        };\n        this.onWebsocketClose = (event) => {\n            this.onCloseCb(Error(`Websocket was closed: ${event.reason}`));\n        };\n        this.onWebsocketError = (event) => {\n            this.close(1000, 'Client disconnecting due to an error');\n            this.onCloseCb(Error('Websocket was closed because of error'));\n        };\n        this.baseUrl = baseUrl;\n        this.languageCode = language;\n        this.sampleRate = sampleRate;\n        this.appId = appId;\n    }\n    onResponse(cb) {\n        this.onResponseCb = cb;\n    }\n    onClose(cb) {\n        this.onCloseCb = cb;\n    }\n    initialize(deviceId, cb) {\n        if (this.websocket !== undefined) {\n            return cb(Error('Cannot initialize an already initialized websocket client'));\n        }\n        const url = generateWsUrl(this.baseUrl, deviceId, this.languageCode, this.sampleRate);\n        initializeWebsocket(url, this.appId, (err, ws) => {\n            if (err !== undefined) {\n                return cb(err);\n            }\n            this.websocket = ws;\n            this.websocket.addEventListener('message', this.onWebsocketMessage);\n            this.websocket.addEventListener('error', this.onWebsocketError);\n            this.websocket.addEventListener('close', this.onWebsocketClose);\n            return cb();\n        });\n    }\n    close(closeCode, closeReason) {\n        if (this.websocket === undefined) {\n            return Error('Websocket is not open');\n        }\n        this.websocket.removeEventListener('message', this.onWebsocketMessage);\n        this.websocket.removeEventListener('error', this.onWebsocketError);\n        this.websocket.removeEventListener('close', this.onWebsocketClose);\n        this.websocket.close(closeCode, closeReason);\n        this.websocket = undefined;\n    }\n    startContext(cb) {\n        if (!this.isOpen()) {\n            return cb(Error('Websocket is not ready'));\n        }\n        this.startCbs.push(cb);\n        const ws = this.websocket;\n        ws.send(StartEventJSON);\n    }\n    stopContext(cb) {\n        if (!this.isOpen()) {\n            return cb(new Error('websocket is not ready'));\n        }\n        this.stopCbs.push(cb);\n        const ws = this.websocket;\n        ws.send(StopEventJSON);\n    }\n    sendAudio(audioChunk) {\n        if (!this.isOpen()) {\n            return Error('Cannot send data through inactive websocket');\n        }\n        const ws = this.websocket;\n        ws.send(audioChunk);\n    }\n    isOpen() {\n        return this.websocket !== undefined && this.websocket.readyState === this.websocket.OPEN;\n    }\n}\nexports.WebsocketClient = WebsocketClient;\nconst StartEventJSON = JSON.stringify({ event: 'start' });\nconst StopEventJSON = JSON.stringify({ event: 'stop' });\nfunction generateWsUrl(baseUrl, deviceId, languageCode, sampleRate) {\n    const params = new URLSearchParams();\n    params.append('deviceId', deviceId);\n    params.append('languageCode', languageCode);\n    params.append('sampleRate', sampleRate.toString());\n    return `${baseUrl}?${params.toString()}`;\n}\nfunction initializeWebsocket(url, protocol, cb) {\n    const ws = new WebSocket(url, protocol);\n    const errhandler = () => {\n        ws.removeEventListener('close', errhandler);\n        ws.removeEventListener('error', errhandler);\n        ws.removeEventListener('open', openhandler);\n        cb(Error('Connection failed'));\n    };\n    const openhandler = () => {\n        ws.removeEventListener('close', errhandler);\n        ws.removeEventListener('error', errhandler);\n        ws.removeEventListener('open', openhandler);\n        cb(undefined, ws);\n    };\n    ws.addEventListener('close', errhandler);\n    ws.addEventListener('error', errhandler);\n    ws.addEventListener('open', openhandler);\n}\n//# sourceMappingURL=websocket_client.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./websocket_client\"));\n__export(require(\"./types\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Error to be thrown if storage API is not supported by the device.\n * @public\n */\nexports.ErrNoStorageSupport = new Error('Current device does not support storage API');\n/**\n * Error to be thrown if requested key was not found in the storage.\n * @public\n */\nexports.ErrKeyNotFound = new Error('Requested key was not present in storage');\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\nclass LocalStorage {\n    constructor() {\n        this.storage = window.localStorage;\n    }\n    initialize(cb) {\n        cb();\n    }\n    close(cb) {\n        cb();\n    }\n    get(key, cb) {\n        const val = this.storage.getItem(key);\n        if (val === null) {\n            return cb(types_1.ErrKeyNotFound);\n        }\n        return cb(undefined, val);\n    }\n    set(key, val, cb) {\n        this.storage.setItem(key, val);\n        return cb();\n    }\n}\nexports.LocalStorage = LocalStorage;\n//# sourceMappingURL=storage.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./storage\"));\n__export(require(\"./types\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SegmentState {\n    constructor(ctxId, sId) {\n        this.isFinalized = false;\n        this.words = [];\n        this.entities = new Map();\n        this.intent = { intent: '', isFinal: false };\n        this.contextId = ctxId;\n        this.id = sId;\n    }\n    toSegment() {\n        let i = 0;\n        const entities = new Array(this.entities.size);\n        this.entities.forEach(v => {\n            entities[i] = v;\n            i++;\n        });\n        return {\n            id: this.id,\n            contextId: this.contextId,\n            isFinal: this.isFinalized,\n            words: this.words,\n            entities: entities,\n            intent: this.intent\n        };\n    }\n    updateTranscript(words) {\n        words.forEach(w => {\n            // Only accept tentative words if the segment is tentative.\n            if (!this.isFinalized || w.isFinal) {\n                this.words[w.index] = w;\n            }\n        });\n        return this;\n    }\n    updateEntities(entities) {\n        entities.forEach(e => {\n            // Only accept tentative entities if the segment is tentative.\n            if (!this.isFinalized || e.isFinal) {\n                this.entities.set(entityMapKey(e), e);\n            }\n        });\n        return this;\n    }\n    updateIntent(intent) {\n        // Only accept tentative intent if the segment is tentative.\n        if (!this.isFinalized || intent.isFinal) {\n            this.intent = intent;\n        }\n        return this;\n    }\n    finalize() {\n        // Filter away any entities which were not finalized.\n        this.entities.forEach((val, key) => {\n            if (!val.isFinal) {\n                this.entities.delete(key);\n            }\n        });\n        // Filter away any transcripts which were not finalized.\n        this.words = this.words.filter(w => w.isFinal);\n        if (!this.intent.isFinal) {\n            this.intent.intent = '';\n            this.intent.isFinal = true;\n        }\n        // Mark as final.\n        this.isFinalized = true;\n        return this;\n    }\n}\nexports.SegmentState = SegmentState;\nfunction entityMapKey(e) {\n    return `${e.startPosition.toString()}:${e.endPosition.toString()}`;\n}\n//# sourceMappingURL=segment.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction parseTentativeTranscript(data) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return data.words.map(({ word, index, start_timestamp, end_timestamp }) => {\n        return {\n            value: word,\n            index: index,\n            startTimestamp: start_timestamp,\n            endTimestamp: end_timestamp,\n            isFinal: false\n        };\n    });\n}\nexports.parseTentativeTranscript = parseTentativeTranscript;\nfunction parseTranscript(data) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return {\n        value: data.word,\n        index: data.index,\n        startTimestamp: data.start_timestamp,\n        endTimestamp: data.end_timestamp,\n        isFinal: true\n    };\n}\nexports.parseTranscript = parseTranscript;\nfunction parseTentativeEntities(data) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return data.entities.map(({ entity, value, start_position, end_position }) => {\n        return {\n            type: entity,\n            value: value,\n            startPosition: start_position,\n            endPosition: end_position,\n            isFinal: false\n        };\n    });\n}\nexports.parseTentativeEntities = parseTentativeEntities;\nfunction parseEntity(data) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return {\n        type: data.entity,\n        value: data.value,\n        startPosition: data.start_position,\n        endPosition: data.end_position,\n        isFinal: true\n    };\n}\nexports.parseEntity = parseEntity;\nfunction parseIntent(data, isFinal) {\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    return {\n        intent: data.intent,\n        isFinal: isFinal\n    };\n}\nexports.parseIntent = parseIntent;\n//# sourceMappingURL=parsers.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst locale_code_1 = __importDefault(require(\"locale-code\"));\nconst uuid_1 = require(\"uuid\");\nconst microphone_1 = require(\"../microphone\");\nconst websocket_1 = require(\"../websocket\");\nconst storage_1 = require(\"../storage\");\nconst types_1 = require(\"./types\");\nconst state_1 = require(\"./state\");\nconst segment_1 = require(\"./segment\");\nconst parsers_1 = require(\"./parsers\");\nconst deviceIdStorageKey = 'speechly-device-id';\nconst defaultSpeechlyURL = 'wss://api.speechly.com/ws';\nconst initialReconnectDelay = 1000;\nconst initialReconnectCount = 5;\n/**\n * A client for Speechly Spoken Language Understanding (SLU) API. The client handles initializing the microphone\n * and websocket connection to Speechly API, passing control events and audio stream to the API, reading the responses\n * and dispatching them, as well as providing a high-level API for interacting with so-called speech segments.\n * @public\n */\nclass Client {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.activeContexts = new Map();\n        this.state = types_1.ClientState.Disconnected;\n        this.reconnectAttemptCount = initialReconnectCount;\n        this.nextReconnectDelay = initialReconnectDelay;\n        this.stateChangeCb = () => { };\n        this.segmentChangeCb = () => { };\n        this.tentativeTranscriptCb = () => { };\n        this.tentativeEntitiesCb = () => { };\n        this.tentativeIntentCb = () => { };\n        this.transcriptCb = () => { };\n        this.entityCb = () => { };\n        this.intentCb = () => { };\n        this.handleWebsocketResponse = (response) => {\n            var _a;\n            if (this.debug) {\n                console.log('[SpeechlyClient]', 'Received response', response);\n            }\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            const { audio_context, segment_id, type } = response;\n            let { data } = response;\n            const context = this.activeContexts.get(audio_context);\n            if (context === undefined) {\n                console.warn('[SpeechlyClient]', 'Received response for non-existent context', audio_context);\n                return;\n            }\n            let segmentState = (_a = context.get(segment_id)) !== null && _a !== void 0 ? _a : new segment_1.SegmentState(audio_context, segment_id);\n            switch (type) {\n                case websocket_1.WebsocketResponseType.TentativeTranscript:\n                    data = data;\n                    const words = parsers_1.parseTentativeTranscript(data);\n                    this.tentativeTranscriptCb(audio_context, segment_id, words, data.transcript);\n                    segmentState = segmentState.updateTranscript(words);\n                    break;\n                case websocket_1.WebsocketResponseType.Transcript:\n                    data = data;\n                    const word = parsers_1.parseTranscript(data);\n                    this.transcriptCb(audio_context, segment_id, word);\n                    segmentState = segmentState.updateTranscript([word]);\n                    break;\n                case websocket_1.WebsocketResponseType.TentativeEntities:\n                    data = data;\n                    const entities = parsers_1.parseTentativeEntities(data);\n                    this.tentativeEntitiesCb(audio_context, segment_id, entities);\n                    segmentState = segmentState.updateEntities(entities);\n                    break;\n                case websocket_1.WebsocketResponseType.Entity:\n                    data = data;\n                    const entity = parsers_1.parseEntity(data);\n                    this.entityCb(audio_context, segment_id, entity);\n                    segmentState = segmentState.updateEntities([entity]);\n                    break;\n                case websocket_1.WebsocketResponseType.TentativeIntent:\n                    data = data;\n                    const tentativeIntent = parsers_1.parseIntent(data, false);\n                    this.tentativeIntentCb(audio_context, segment_id, tentativeIntent);\n                    segmentState = segmentState.updateIntent(tentativeIntent);\n                    break;\n                case websocket_1.WebsocketResponseType.Intent:\n                    data = data;\n                    const intent = parsers_1.parseIntent(data, true);\n                    this.intentCb(audio_context, segment_id, intent);\n                    segmentState = segmentState.updateIntent(intent);\n                    break;\n                case websocket_1.WebsocketResponseType.SegmentEnd:\n                    segmentState = segmentState.finalize();\n                    break;\n                default:\n                // TODO: handle unexpected response types.\n            }\n            // Update the segment in current context.\n            context.set(segment_id, segmentState);\n            // Update current contexts.\n            this.activeContexts.set(audio_context, context);\n            // Fire segment change event.\n            this.segmentChangeCb(segmentState.toSegment());\n        };\n        this.handleWebsocketClosure = (err) => {\n            if (this.debug) {\n                console.error('[SpeechlyClient]', 'Server connection closed', err);\n            }\n            this.reconnectWebsocket();\n        };\n        this.handleMicrophoneAudio = (audioChunk) => {\n            if (this.state !== types_1.ClientState.Recording) {\n                return;\n            }\n            this.websocket.sendAudio(audioChunk);\n        };\n        if (!locale_code_1.default.validate(options.language)) {\n            throw Error(`[SpeechlyClient] Invalid language \"${options.language}\"`);\n        }\n        this.debug = (_a = options.debug) !== null && _a !== void 0 ? _a : false;\n        this.microphone = (_b = options.microphone) !== null && _b !== void 0 ? _b : new microphone_1.BrowserMicrophone((_c = options.sampleRate) !== null && _c !== void 0 ? _c : microphone_1.DefaultSampleRate);\n        this.websocket = (_d = options.apiClient) !== null && _d !== void 0 ? _d : new websocket_1.WebsocketClient((_e = options.url) !== null && _e !== void 0 ? _e : defaultSpeechlyURL, options.appId, options.language, (_f = options.sampleRate) !== null && _f !== void 0 ? _f : microphone_1.DefaultSampleRate);\n        this.storage = (_g = options.storage) !== null && _g !== void 0 ? _g : new storage_1.LocalStorage();\n        this.microphone.onAudio(this.handleMicrophoneAudio);\n        this.websocket.onResponse(this.handleWebsocketResponse);\n        this.websocket.onClose(this.handleWebsocketClosure);\n    }\n    /**\n     * Initializes the client, by initializing the microphone and establishing connection to the API.\n     *\n     * This function HAS to be invoked by a user by e.g. binding it to a button press,\n     * or some other user-performed action.\n     *\n     * If this function is invoked without a user interaction,\n     * the microphone functionality will not work due to security restrictions by the browser.\n     *\n     * @param cb - the callback which is invoked when the initialization is complete.\n     */\n    initialize(cb = () => { }) {\n        if (this.state !== types_1.ClientState.Disconnected) {\n            return cb(new Error('Cannot initialize client - client is not in Disconnected state'));\n        }\n        this.setState(types_1.ClientState.Connecting);\n        this.microphone.initialize((err) => {\n            if (err !== undefined) {\n                switch (err) {\n                    case microphone_1.ErrDeviceNotSupported:\n                        this.setState(types_1.ClientState.NoBrowserSupport);\n                        break;\n                    case microphone_1.ErrNoAudioConsent:\n                        this.setState(types_1.ClientState.NoAudioConsent);\n                        break;\n                    default:\n                        this.setState(types_1.ClientState.Failed);\n                }\n                return cb(err);\n            }\n            const initializeWebsocket = (deviceId, cb) => {\n                this.websocket.initialize(deviceId, (err) => {\n                    if (err !== undefined) {\n                        this.reconnectWebsocket();\n                        // TODO: I think this can be confusing for the end user.\n                        // We should only invoke callback when initialization is finished, either successfully or with an error.\n                        // We can instead pass the callback to reconnect and let that invoke it.\n                        return cb();\n                    }\n                    this.setState(types_1.ClientState.Connected);\n                    return cb();\n                });\n            };\n            this.storage.initialize((err) => {\n                if (err !== undefined) {\n                    return cb(err);\n                }\n                this.storage.get(deviceIdStorageKey, (err, val) => {\n                    if (err !== undefined) {\n                        // Device ID was not found in the storage, generate new ID and store it.\n                        const deviceId = uuid_1.v4();\n                        return this.storage.set(deviceIdStorageKey, deviceId, (err) => {\n                            if (err !== undefined) {\n                                // At this point we couldn't load device ID from storage, nor we could store a new one there.\n                                // Give up initialisation and return an error.\n                                return cb(err);\n                            }\n                            // Newly generated ID was stored, proceed with initialization.\n                            this.deviceId = deviceId;\n                            return initializeWebsocket(deviceId, cb);\n                        });\n                    }\n                    // Device ID was found in the storage, proceed with initialization.\n                    const deviceId = val;\n                    this.deviceId = deviceId;\n                    return initializeWebsocket(deviceId, cb);\n                });\n            });\n        });\n    }\n    /**\n     * Closes the client by closing the API connection and disabling the microphone.\n     * @param cb - the callback which is invoked when closure is complete.\n     */\n    close(cb = () => { }) {\n        this.storage.close((err) => {\n            const errs = [];\n            if (err !== undefined) {\n                errs.push(err.message);\n            }\n            this.microphone.close((err) => {\n                if (err !== undefined) {\n                    errs.push(err.message);\n                }\n                const wsErr = this.websocket.close(1000, 'client disconnecting');\n                if (wsErr !== undefined) {\n                    errs.push(wsErr.message);\n                }\n                this.activeContexts.clear();\n                this.setState(types_1.ClientState.Disconnected);\n                return errs.length > 0 ? cb(Error(errs.join(','))) : cb();\n            });\n        });\n    }\n    /**\n     * Starts a new SLU context by sending a start context event to the API and unmuting the microphone.\n     * @param cb - the callback which is invoked when the context start was acknowledged by the API.\n     */\n    startContext(cb = () => { }) {\n        if (this.state !== types_1.ClientState.Connected) {\n            return cb(Error('Cannot start context - client is not connected'));\n        }\n        // Re-set reconnection settings here, so that we avoid flip-flopping in `_reconnectWebsocket`.\n        this.reconnectAttemptCount = initialReconnectCount;\n        this.nextReconnectDelay = initialReconnectDelay;\n        this.setState(types_1.ClientState.Starting);\n        this.websocket.startContext((err, contextId) => {\n            if (err !== undefined) {\n                this.setState(types_1.ClientState.Connected);\n                return cb(err);\n            }\n            this.setState(types_1.ClientState.Recording);\n            this.microphone.unmute();\n            const ctxId = contextId;\n            this.activeContexts.set(ctxId, new Map());\n            return cb(undefined, ctxId);\n        });\n    }\n    /**\n     * Stops current SLU context by sending a stop context event to the API and muting the microphone.\n     * @param cb - the callback which is invoked when the context stop was acknowledged by the API.\n     */\n    stopContext(cb = () => { }) {\n        if (this.state !== types_1.ClientState.Recording) {\n            return cb(new Error('Cannot stop context - client is not recording'));\n        }\n        this.setState(types_1.ClientState.Stopping);\n        this.microphone.mute();\n        this.websocket.stopContext((err, contextId) => {\n            if (err !== undefined) {\n                // Sending stop event failed, which means recovering from this isn't viable.\n                // Developers should react to this state by reloading the app.\n                this.setState(types_1.ClientState.Failed);\n                return cb(err);\n            }\n            const ctxId = contextId;\n            if (!this.activeContexts.delete(ctxId)) {\n                console.warn('[SpeechlyClient]', 'Attempted to remove non-existent context', ctxId);\n            }\n            this.setState(types_1.ClientState.Connected);\n            return cb(undefined, ctxId);\n        });\n    }\n    /**\n     * Adds a listener for client state change events.\n     * @param cb - the callback to invoke on state change events.\n     */\n    onStateChange(cb) {\n        this.stateChangeCb = cb;\n    }\n    /**\n     * Adds a listener for current segment change events.\n     * @param cb - the callback to invoke on segment change events.\n     */\n    onSegmentChange(cb) {\n        this.segmentChangeCb = cb;\n    }\n    /**\n     * Adds a listener for tentative transcript responses from the API.\n     * @param cb - the callback to invoke on a tentative transcript response.\n     */\n    onTentativeTranscript(cb) {\n        this.tentativeTranscriptCb = cb;\n    }\n    /**\n     * Adds a listener for transcript responses from the API.\n     * @param cb - the callback to invoke on a transcript response.\n     */\n    onTranscript(cb) {\n        this.transcriptCb = cb;\n    }\n    /**\n     * Adds a listener for tentative entities responses from the API.\n     * @param cb - the callback to invoke on a tentative entities response.\n     */\n    onTentativeEntities(cb) {\n        this.tentativeEntitiesCb = cb;\n    }\n    /**\n     * Adds a listener for entity responses from the API.\n     * @param cb - the callback to invoke on an entity response.\n     */\n    onEntity(cb) {\n        this.entityCb = cb;\n    }\n    /**\n     * Adds a listener for tentative intent responses from the API.\n     * @param cb - the callback to invoke on a tentative intent response.\n     */\n    onTentativeIntent(cb) {\n        this.tentativeIntentCb = cb;\n    }\n    /**\n     * Adds a listener for intent responses from the API.\n     * @param cb - the callback to invoke on an intent response.\n     */\n    onIntent(cb) {\n        this.intentCb = cb;\n    }\n    reconnectWebsocket() {\n        if (this.deviceId === undefined) {\n            return this.setState(types_1.ClientState.Disconnected);\n        }\n        const deviceId = this.deviceId;\n        if (this.reconnectAttemptCount < 1) {\n            return this.setState(types_1.ClientState.Disconnected);\n        }\n        if (this.state !== types_1.ClientState.Connecting) {\n            this.setState(types_1.ClientState.Connecting);\n        }\n        if (this.debug) {\n            console.log('[SpeechlyClient]', `Attempting to re-connect to the server in ${this.nextReconnectDelay.toString()}ms`);\n        }\n        // TODO: extract this as a \"re-trier\" (check existing libraries first).\n        setTimeout(() => {\n            this.reconnectAttemptCount = this.reconnectAttemptCount - 1;\n            this.nextReconnectDelay = this.nextReconnectDelay * 2;\n            this.websocket.initialize(deviceId, (err) => {\n                if (err !== undefined) {\n                    return this.reconnectWebsocket();\n                }\n                this.setState(types_1.ClientState.Connected);\n            });\n        }, this.nextReconnectDelay);\n    }\n    setState(newState) {\n        if (this.state === newState) {\n            return;\n        }\n        if (this.debug) {\n            console.log('[SpeechlyClient]', 'State transition', state_1.stateToString(this.state), state_1.stateToString(newState));\n        }\n        this.state = newState;\n        this.stateChangeCb(newState);\n    }\n}\nexports.Client = Client;\n//# sourceMappingURL=client.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./types\"));\nvar state_1 = require(\"./state\");\nexports.stateToString = state_1.stateToString;\nvar client_1 = require(\"./client\");\nexports.Client = client_1.Client;\n//# sourceMappingURL=index.js.map","import Speechly from '@speechly/browser-client';\n\n// Create a new Client. appId and language are configured in the dashboard.\nexport const client = new Speechly.Client({\n  appId: 'SPEECHLY_APP_ID',\n  language: 'SPEECHLY_APP_LANG',\n});\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./speechly\"));\n__export(require(\"./microphone/types\"));\n__export(require(\"./websocket/types\"));\n__export(require(\"./storage/types\"));\n//# sourceMappingURL=index.js.map","/**\n * rpg-dice-roller - A dice roller that accepts standard dice notation\n * \n * @version v4.0.2\n * @license MIT\n * @author GreenImp <info@greenimp.co.uk> (http://greenimp.co.uk)\n * @link https://github.com/GreenImp/rpg-dice-roller\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.rpgDiceRoller = {}));\n}(this, (function (exports) { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get(target, property, receiver || target);\n  }\n\n  function set(target, property, value, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.set) {\n      set = Reflect.set;\n    } else {\n      set = function set(target, property, value, receiver) {\n        var base = _superPropBase(target, property);\n\n        var desc;\n\n        if (base) {\n          desc = Object.getOwnPropertyDescriptor(base, property);\n\n          if (desc.set) {\n            desc.set.call(receiver, value);\n            return true;\n          } else if (!desc.writable) {\n            return false;\n          }\n        }\n\n        desc = Object.getOwnPropertyDescriptor(receiver, property);\n\n        if (desc) {\n          if (!desc.writable) {\n            return false;\n          }\n\n          desc.value = value;\n          Object.defineProperty(receiver, property, desc);\n        } else {\n          _defineProperty(receiver, property, value);\n        }\n\n        return true;\n      };\n    }\n\n    return set(target, property, value, receiver);\n  }\n\n  function _set(target, property, value, receiver, isStrict) {\n    var s = set(target, property, value, receiver || target);\n\n    if (!s && isStrict) {\n      throw new Error('failed to set property');\n    }\n\n    return value;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n      return;\n    }\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  /*\n   * Generated by PEG.js 0.10.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function (expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n      literal: function literal(expectation) {\n        return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n      },\n      \"class\": function _class(expectation) {\n        var escapedParts = \"\",\n            i;\n\n        for (i = 0; i < expectation.parts.length; i++) {\n          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);\n        }\n\n        return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n      },\n      any: function any(expectation) {\n        return \"any character\";\n      },\n      end: function end(expectation) {\n        return \"end of input\";\n      },\n      other: function other(expectation) {\n        return expectation.description;\n      }\n    };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n        return '\\\\x0' + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return '\\\\x' + hex(ch);\n      });\n    }\n\n    function classEscape(s) {\n      return s.replace(/\\\\/g, '\\\\\\\\').replace(/\\]/g, '\\\\]').replace(/\\^/g, '\\\\^').replace(/-/g, '\\\\-').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n        return '\\\\x0' + hex(ch);\n      }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return '\\\\x' + hex(ch);\n      });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i,\n          j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n        peg$startRuleFunctions = {\n      Main: peg$parseMain\n    },\n        peg$startRuleFunction = peg$parseMain,\n        peg$c0 = \"{\",\n        peg$c1 = peg$literalExpectation(\"{\", false),\n        peg$c2 = \",\",\n        peg$c3 = peg$literalExpectation(\",\", false),\n        peg$c4 = \"}\",\n        peg$c5 = peg$literalExpectation(\"}\", false),\n        peg$c6 = function peg$c6(expr, exprs, modifiers) {\n      return {\n        type: 'group',\n        notation: text(),\n        expressions: [expr].concat(_toConsumableArray(exprs.map(function (v) {\n          return v[3];\n        }))),\n        modifiers: Object.assign.apply(Object, [{}].concat(_toConsumableArray(modifiers.map(function (item) {\n          return _defineProperty({}, item.subType, item);\n        }))))\n      };\n    },\n        peg$c7 = function peg$c7(die, modifiers) {\n      return Object.assign(die, {\n        modifiers: Object.assign.apply(Object, [{}].concat(_toConsumableArray(modifiers.map(function (item) {\n          return _defineProperty({}, item.subType, item);\n        }))))\n      });\n    },\n        peg$c8 = function peg$c8(die) {\n      return Object.assign(die, {\n        notation: text()\n      });\n    },\n        peg$c9 = \"d\",\n        peg$c10 = peg$literalExpectation(\"d\", false),\n        peg$c11 = function peg$c11(qty, d, sides) {\n      return {\n        type: 'dice',\n        subType: 'standard',\n        qty: qty || 1,\n        d: d,\n        sides: sides\n      };\n    },\n        peg$c12 = \"%\",\n        peg$c13 = peg$literalExpectation(\"%\", false),\n        peg$c14 = function peg$c14(qty, d, sides) {\n      return {\n        type: 'dice',\n        subType: 'percentile',\n        qty: qty || 1,\n        d: d,\n        sides: 100\n      };\n    },\n        peg$c15 = \"dF\",\n        peg$c16 = peg$literalExpectation(\"dF\", false),\n        peg$c17 = \".\",\n        peg$c18 = peg$literalExpectation(\".\", false),\n        peg$c19 = /^[12]/,\n        peg$c20 = peg$classExpectation([\"1\", \"2\"], false, false),\n        peg$c21 = function peg$c21(qty, d, sides) {\n      return {\n        type: 'dice',\n        subType: 'fudge',\n        qty: qty || 1,\n        d: d,\n        sides: sides ? parseInt(sides[1], 10) : 2\n      };\n    },\n        peg$c22 = function peg$c22(modifier) {\n      return Object.assign(modifier, {\n        notation: text()\n      });\n    },\n        peg$c23 = \"!\",\n        peg$c24 = peg$literalExpectation(\"!\", false),\n        peg$c25 = \"p\",\n        peg$c26 = peg$literalExpectation(\"p\", false),\n        peg$c27 = function peg$c27(compound, penetrate, comparePoint) {\n      return {\n        type: 'modifier',\n        subType: 'explode',\n        penetrate: !!penetrate,\n        compound: !!compound,\n        comparePoint: comparePoint\n      };\n    },\n        peg$c28 = function peg$c28(successCP, failureCP) {\n      return {\n        type: 'modifier',\n        subType: 'target',\n        successCP: successCP,\n        failureCP: failureCP\n      };\n    },\n        peg$c29 = /^[lh]/,\n        peg$c30 = peg$classExpectation([\"l\", \"h\"], false, false),\n        peg$c31 = function peg$c31(end, qty) {\n      return {\n        type: 'modifier',\n        subType: 'drop',\n        end: end || 'l',\n        qty: qty\n      };\n    },\n        peg$c32 = \"k\",\n        peg$c33 = peg$literalExpectation(\"k\", false),\n        peg$c34 = function peg$c34(end, qty) {\n      return {\n        type: 'modifier',\n        subType: 'keep',\n        end: end || 'h',\n        qty: qty\n      };\n    },\n        peg$c35 = \"r\",\n        peg$c36 = peg$literalExpectation(\"r\", false),\n        peg$c37 = \"o\",\n        peg$c38 = peg$literalExpectation(\"o\", false),\n        peg$c39 = function peg$c39(once, comparePoint) {\n      return {\n        type: 'modifier',\n        subType: 're-roll',\n        once: !!once,\n        comparePoint: comparePoint\n      };\n    },\n        peg$c40 = \"cs\",\n        peg$c41 = peg$literalExpectation(\"cs\", false),\n        peg$c42 = function peg$c42(comparePoint) {\n      return {\n        type: 'modifier',\n        subType: 'critical-success',\n        comparePoint: comparePoint\n      };\n    },\n        peg$c43 = \"cf\",\n        peg$c44 = peg$literalExpectation(\"cf\", false),\n        peg$c45 = function peg$c45(comparePoint) {\n      return {\n        type: 'modifier',\n        subType: 'critical-failure',\n        comparePoint: comparePoint\n      };\n    },\n        peg$c46 = \"s\",\n        peg$c47 = peg$literalExpectation(\"s\", false),\n        peg$c48 = \"a\",\n        peg$c49 = peg$literalExpectation(\"a\", false),\n        peg$c50 = function peg$c50(dir) {\n      return {\n        type: 'modifier',\n        subType: 'sort',\n        direction: dir || 'a'\n      };\n    },\n        peg$c51 = \"f\",\n        peg$c52 = peg$literalExpectation(\"f\", false),\n        peg$c53 = function peg$c53(comparePoint) {\n      return comparePoint;\n    },\n        peg$c54 = function peg$c54(operator, value) {\n      return {\n        type: 'compare-point',\n        operator: operator,\n        value: value\n      };\n    },\n        peg$c55 = \"!=\",\n        peg$c56 = peg$literalExpectation(\"!=\", false),\n        peg$c57 = \"<=\",\n        peg$c58 = peg$literalExpectation(\"<=\", false),\n        peg$c59 = \">=\",\n        peg$c60 = peg$literalExpectation(\">=\", false),\n        peg$c61 = \"=\",\n        peg$c62 = peg$literalExpectation(\"=\", false),\n        peg$c63 = \">\",\n        peg$c64 = peg$literalExpectation(\">\", false),\n        peg$c65 = \"<\",\n        peg$c66 = peg$literalExpectation(\"<\", false),\n        peg$c67 = \"(\",\n        peg$c68 = peg$literalExpectation(\"(\", false),\n        peg$c69 = \")\",\n        peg$c70 = peg$literalExpectation(\")\", false),\n        peg$c71 = function peg$c71(l, expr, r) {\n      return [l].concat(_toConsumableArray(expr), [r]);\n    },\n        peg$c72 = function peg$c72(head, tail) {\n      head = Array.isArray(head) ? head : [head];\n      return [].concat(_toConsumableArray(head), _toConsumableArray(tail.map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 4),\n            value = _ref4[1],\n            factor = _ref4[3];\n\n        return [value, factor];\n      }).flat(2)));\n    },\n        peg$c73 = \"abs\",\n        peg$c74 = peg$literalExpectation(\"abs\", false),\n        peg$c75 = \"ceil\",\n        peg$c76 = peg$literalExpectation(\"ceil\", false),\n        peg$c77 = \"cos\",\n        peg$c78 = peg$literalExpectation(\"cos\", false),\n        peg$c79 = \"exp\",\n        peg$c80 = peg$literalExpectation(\"exp\", false),\n        peg$c81 = \"floor\",\n        peg$c82 = peg$literalExpectation(\"floor\", false),\n        peg$c83 = \"log\",\n        peg$c84 = peg$literalExpectation(\"log\", false),\n        peg$c85 = \"round\",\n        peg$c86 = peg$literalExpectation(\"round\", false),\n        peg$c87 = \"sign\",\n        peg$c88 = peg$literalExpectation(\"sign\", false),\n        peg$c89 = \"sin\",\n        peg$c90 = peg$literalExpectation(\"sin\", false),\n        peg$c91 = \"sqrt\",\n        peg$c92 = peg$literalExpectation(\"sqrt\", false),\n        peg$c93 = \"tan\",\n        peg$c94 = peg$literalExpectation(\"tan\", false),\n        peg$c95 = function peg$c95(func, expr) {\n      return [\"\".concat(func, \"(\")].concat(_toConsumableArray(expr), [')']);\n    },\n        peg$c96 = \"pow\",\n        peg$c97 = peg$literalExpectation(\"pow\", false),\n        peg$c98 = function peg$c98(func, expr1, expr2) {\n      return [\"\".concat(func, \"(\")].concat(_toConsumableArray(expr1), [','], _toConsumableArray(expr2), [')']);\n    },\n        peg$c99 = \"-\",\n        peg$c100 = peg$literalExpectation(\"-\", false),\n        peg$c101 = /^[.]/,\n        peg$c102 = peg$classExpectation([\".\"], false, false),\n        peg$c103 = function peg$c103() {\n      return parseFloat(text());\n    },\n        peg$c104 = /^[1-9]/,\n        peg$c105 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n        peg$c106 = /^[0-9]/,\n        peg$c107 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c108 = function peg$c108() {\n      return parseInt(text(), 10);\n    },\n        peg$c109 = \"**\",\n        peg$c110 = peg$literalExpectation(\"**\", false),\n        peg$c111 = function peg$c111() {\n      return \"^\";\n    },\n        peg$c112 = \"*\",\n        peg$c113 = peg$literalExpectation(\"*\", false),\n        peg$c114 = \"^\",\n        peg$c115 = peg$literalExpectation(\"^\", false),\n        peg$c116 = \"/\",\n        peg$c117 = peg$literalExpectation(\"/\", false),\n        peg$c118 = \"+\",\n        peg$c119 = peg$literalExpectation(\"+\", false),\n        peg$c120 = peg$otherExpectation(\"whitespace\"),\n        peg$c121 = /^[ \\t\\n\\r]/,\n        peg$c122 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n        peg$currPos = 0,\n        peg$savedPos = 0,\n        peg$posDetailsCache = [{\n      line: 1,\n      column: 1\n    }],\n        peg$maxFailPos = 0,\n        peg$maxFailExpected = [],\n        peg$silentFails = 0,\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return {\n        type: \"literal\",\n        text: text,\n        ignoreCase: ignoreCase\n      };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return {\n        type: \"class\",\n        parts: parts,\n        inverted: inverted,\n        ignoreCase: ignoreCase\n      };\n    }\n\n    function peg$endExpectation() {\n      return {\n        type: \"end\"\n      };\n    }\n\n    function peg$otherExpectation(description) {\n      return {\n        type: \"other\",\n        description: description\n      };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line: details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails = peg$computePosDetails(endPos);\n      return {\n        start: {\n          offset: startPos,\n          line: startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line: endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n    }\n\n    function peg$parseMain() {\n      var s0;\n      s0 = peg$parseExpression();\n      return s0;\n    }\n\n    function peg$parseDiceGroup() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c0;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c1);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExpression();\n\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$parse_();\n\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s7 = peg$c2;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c3);\n                }\n              }\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parse_();\n\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parseExpression();\n\n                  if (s9 !== peg$FAILED) {\n                    s6 = [s6, s7, s8, s9];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parse_();\n\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c2;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c3);\n                  }\n                }\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseExpression();\n\n                    if (s9 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s6 = peg$c4;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c5);\n                  }\n                }\n\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseModifier();\n\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseModifier();\n                  }\n\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c6(s3, s4, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseDice() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$parseDie();\n\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseModifier();\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseModifier();\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c7(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseDie() {\n      var s0, s1;\n      s0 = peg$currPos;\n      s1 = peg$parseStandardDie();\n\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsePercentileDie();\n\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseFudgeDie();\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1);\n      }\n\n      s0 = s1;\n      return s0;\n    }\n\n    function peg$parseStandardDie() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$parseIntegerOrExpression();\n\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 100) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIntegerOrExpression();\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c11(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsePercentileDie() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$parseIntegerOrExpression();\n\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 100) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 37) {\n            s3 = peg$c12;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c13);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c14(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFudgeDie() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$currPos;\n      s1 = peg$parseIntegerOrExpression();\n\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s2 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c16);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c17;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c18);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            if (peg$c19.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c21(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseModifier() {\n      var s0, s1;\n      s0 = peg$currPos;\n      s1 = peg$parseExplodeModifier();\n\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseTargetModifier();\n\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseDropModifier();\n\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseKeepModifier();\n\n            if (s1 === peg$FAILED) {\n              s1 = peg$parseRerollModifier();\n\n              if (s1 === peg$FAILED) {\n                s1 = peg$parseCriticalSuccessModifier();\n\n                if (s1 === peg$FAILED) {\n                  s1 = peg$parseCriticalFailModifier();\n\n                  if (s1 === peg$FAILED) {\n                    s1 = peg$parseSortingModifier();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c22(s1);\n      }\n\n      s0 = s1;\n      return s0;\n    }\n\n    function peg$parseExplodeModifier() {\n      var s0, s1, s2, s3, s4;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c23;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c24);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s2 = peg$c23;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c24);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 112) {\n            s3 = peg$c25;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c26);\n            }\n          }\n\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseComparePoint();\n\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c27(s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseTargetModifier() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parseComparePoint();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseFailComparePoint();\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c28(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseDropModifier() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 100) {\n        s1 = peg$c9;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c10);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (peg$c29.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c30);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIntegerNumber();\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c31(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseKeepModifier() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 107) {\n        s1 = peg$c32;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c33);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (peg$c29.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c30);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIntegerNumber();\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c34(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRerollModifier() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 114) {\n        s1 = peg$c35;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c36);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 111) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c38);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseComparePoint();\n\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c39(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseCriticalSuccessModifier() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 2) === peg$c40) {\n        s1 = peg$c40;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c41);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseComparePoint();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c42(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseCriticalFailModifier() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 2) === peg$c43) {\n        s1 = peg$c43;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c44);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseComparePoint();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c45(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseSortingModifier() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 115) {\n        s1 = peg$c46;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c47);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 97) {\n          s2 = peg$c48;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c49);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 100) {\n            s2 = peg$c9;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c50(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFailComparePoint() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 102) {\n        s1 = peg$c51;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c52);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseComparePoint();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c53(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseComparePoint() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parseCompareOperator();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseFloatNumber();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c54(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseCompareOperator() {\n      var s0;\n\n      if (input.substr(peg$currPos, 2) === peg$c55) {\n        s0 = peg$c55;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c56);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c57) {\n          s0 = peg$c57;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c58);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c59) {\n            s0 = peg$c59;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c60);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s0 = peg$c61;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c62);\n              }\n            }\n\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 62) {\n                s0 = peg$c63;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c64);\n                }\n              }\n\n              if (s0 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 60) {\n                  s0 = peg$c65;\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c66);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIntegerOrExpression() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$parseIntegerNumber();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c67;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c68);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseExpression();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c69;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c70);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c71(s1, s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n      s0 = peg$currPos;\n      s1 = peg$parseFactor();\n\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseOperator();\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseOperator();\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseFactor();\n\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c72(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFactor() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$parseMathFunction();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDice();\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFloatNumber();\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s1 = peg$c67;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c68);\n              }\n            }\n\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parseExpression();\n\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parse_();\n\n                  if (s4 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                      s5 = peg$c69;\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c70);\n                      }\n                    }\n\n                    if (s5 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c71(s1, s3, s5);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseDiceGroup();\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseMathFunction() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 3) === peg$c73) {\n        s1 = peg$c73;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c74);\n        }\n      }\n\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c75) {\n          s1 = peg$c75;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c76);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c77) {\n            s1 = peg$c77;\n            peg$currPos += 3;\n          } else {\n            s1 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c78);\n            }\n          }\n\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c79) {\n              s1 = peg$c79;\n              peg$currPos += 3;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c80);\n              }\n            }\n\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c81) {\n                s1 = peg$c81;\n                peg$currPos += 5;\n              } else {\n                s1 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c82);\n                }\n              }\n\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 3) === peg$c83) {\n                  s1 = peg$c83;\n                  peg$currPos += 3;\n                } else {\n                  s1 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c84);\n                  }\n                }\n\n                if (s1 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c85) {\n                    s1 = peg$c85;\n                    peg$currPos += 5;\n                  } else {\n                    s1 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c86);\n                    }\n                  }\n\n                  if (s1 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 4) === peg$c87) {\n                      s1 = peg$c87;\n                      peg$currPos += 4;\n                    } else {\n                      s1 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c88);\n                      }\n                    }\n\n                    if (s1 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 3) === peg$c89) {\n                        s1 = peg$c89;\n                        peg$currPos += 3;\n                      } else {\n                        s1 = peg$FAILED;\n\n                        if (peg$silentFails === 0) {\n                          peg$fail(peg$c90);\n                        }\n                      }\n\n                      if (s1 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 4) === peg$c91) {\n                          s1 = peg$c91;\n                          peg$currPos += 4;\n                        } else {\n                          s1 = peg$FAILED;\n\n                          if (peg$silentFails === 0) {\n                            peg$fail(peg$c92);\n                          }\n                        }\n\n                        if (s1 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 3) === peg$c93) {\n                            s1 = peg$c93;\n                            peg$currPos += 3;\n                          } else {\n                            s1 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c94);\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c67;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c68);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseExpression();\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c69;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c70);\n                  }\n                }\n\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c95(s1, s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 3) === peg$c96) {\n          s1 = peg$c96;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c97);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s2 = peg$c67;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c68);\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseExpression();\n\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parse_();\n\n                if (s5 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s6 = peg$c2;\n                    peg$currPos++;\n                  } else {\n                    s6 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c3);\n                    }\n                  }\n\n                  if (s6 !== peg$FAILED) {\n                    s7 = peg$parse_();\n\n                    if (s7 !== peg$FAILED) {\n                      s8 = peg$parseExpression();\n\n                      if (s8 !== peg$FAILED) {\n                        s9 = peg$parse_();\n\n                        if (s9 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s10 = peg$c69;\n                            peg$currPos++;\n                          } else {\n                            s10 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c70);\n                            }\n                          }\n\n                          if (s10 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c98(s1, s4, s8);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseFloatNumber() {\n      var s0, s1, s2, s3, s4, s5;\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c99;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c100);\n        }\n      }\n\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNumber();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n\n          if (peg$c101.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c102);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseNumber();\n\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c103();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseIntegerNumber() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n\n      if (peg$c104.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c105);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n\n        if (peg$c106.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c107);\n          }\n        }\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n\n          if (peg$c106.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c107);\n            }\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c108();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseNumber() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = [];\n\n      if (peg$c106.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c107);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n\n          if (peg$c106.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c107);\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c108();\n      }\n\n      s0 = s1;\n      return s0;\n    }\n\n    function peg$parseOperator() {\n      var s0, s1;\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 2) === peg$c109) {\n        s1 = peg$c109;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c110);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c111();\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s0 = peg$c112;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c113);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s0 = peg$c114;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c115);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s0 = peg$c12;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c13);\n              }\n            }\n\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s0 = peg$c116;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c117);\n                }\n              }\n\n              if (s0 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 43) {\n                  s0 = peg$c118;\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c119);\n                  }\n                }\n\n                if (s0 === peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 45) {\n                    s0 = peg$c99;\n                    peg$currPos++;\n                  } else {\n                    s0 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c100);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n      peg$silentFails++;\n      s0 = [];\n\n      if (peg$c121.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c122);\n        }\n      }\n\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n\n        if (peg$c121.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c122);\n          }\n        }\n      }\n\n      peg$silentFails--;\n\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c120);\n        }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n  }\n\n  var grammar = {\n    SyntaxError: peg$SyntaxError,\n    parse: peg$parse\n  };\n  var grammar_1 = grammar.parse;\n\n  /**\n   * Polyfill for Array.prototype.flat\n   * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat#Polyfill\n   */\n  if (!Array.prototype.flat) {\n    Array.prototype.flat = function () {\n      var depth = arguments[0];\n      depth = depth === undefined ? 1 : Math.floor(depth);\n      if (depth < 1) return Array.prototype.slice.call(this);\n      return function flat(arr, depth) {\n        var len = arr.length >>> 0;\n        var flattened = [];\n        var i = 0;\n\n        while (i < len) {\n          if (i in arr) {\n            var el = arr[i];\n            if (Array.isArray(el) && depth > 0) flattened = flattened.concat(flat(el, depth - 1));else flattened.push(el);\n          }\n\n          i++;\n        }\n\n        return flattened;\n      }(this, depth);\n    };\n  }\n  /**\n   * Polyfill for Array.prototype.flatMap\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap#Polyfill\n   */\n\n\n  if (!Array.prototype.flatMap) {\n    Array.prototype.flatMap = function () {\n      return Array.prototype.map.apply(this, arguments).flat(1);\n    };\n  }\n  /**\n   * Utility helper functions\n   *\n   * @type {Readonly<{compareNumbers(number, number, string): boolean, toFixed(number, number=): number, generateNumber((number|string), (number|string)): *, isNumeric(*=): boolean, isJson(*=): (*|boolean|undefined), sumArray(Array): number, isBase64(*=): (*|boolean|undefined)}>}\n   */\n\n\n  var diceUtils = Object.freeze({\n    /**\n     * Checks if the given val is a valid number\n     *\n     * @param val\n     * @returns {boolean}\n     */\n    isNumeric: function isNumeric(val) {\n      return !Array.isArray(val) && !Number.isNaN(val) && Number.isFinite(parseInt(val, 10));\n    },\n    isBase64: function isBase64(val) {\n      try {\n        return !!(val && btoa(atob(val)) === val);\n      } catch (e) {\n        return false;\n      }\n    },\n    isJson: function isJson(val) {\n      try {\n        var parsed = val ? JSON.parse(val) : false;\n        return !!(parsed && _typeof(parsed) === 'object');\n      } catch (e) {\n        return false;\n      }\n    },\n\n    /**\n     * Generates a random number between the\n     * min and max, inclusive\n     *\n     * @param {number|string} min\n     * @param {number|string} max\n     * @returns {*}\n     */\n    generateNumber: function generateNumber(min, max) {\n      min = min ? parseInt(min, 10) : 1;\n      max = max ? parseInt(max, 10) : min;\n\n      if (max <= min) {\n        return min;\n      }\n\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n\n    /**\n     * @returns {function(Array): number}\n     */\n    get sumArray() {\n      var _this = this;\n\n      /**\n       * Takes an array of numbers and adds them together,\n       * returning the result\n       *\n       * @param {Number[]} numbers\n       * @returns {number}\n       */\n      return function (numbers) {\n        return !Array.isArray(numbers) ? 0 : numbers.reduce(function (prev, current) {\n          return prev + (_this.isNumeric(current) ? parseFloat(current) : 0);\n        }, 0);\n      };\n    },\n\n    /**\n     * Checks if `a` is comparative to `b` with the given operator.\n     * Returns true or false.\n     *\n     * @param {number} a\n     * @param {number} b\n     * @param {string} operator A valid comparative operator (=, <, >, <=, >=, !=)\n     * @returns {boolean}\n     */\n    compareNumbers: function compareNumbers(a, b, operator) {\n      var result;\n      a = parseFloat(a);\n      b = parseFloat(b);\n\n      switch (operator) {\n        case '=':\n        case '==':\n          result = a === b;\n          break;\n\n        case '<':\n          result = a < b;\n          break;\n\n        case '>':\n          result = a > b;\n          break;\n\n        case '<=':\n          result = a <= b;\n          break;\n\n        case '>=':\n          result = a >= b;\n          break;\n\n        case '!':\n        case '!=':\n          result = a !== b;\n          break;\n\n        default:\n          result = false;\n          break;\n      }\n\n      return result;\n    },\n\n    /**\n     * Rounds a number to the given number of decimal places,\n     * removing any trailing zeros after the decimal point.\n     *\n     * `toFixed(1.236, 2) == 1.24`\n     * `toFixed(30.1, 2) == 30.1`\n     * `toFixed(4.0000000004, 3) == 4`\n     *\n     * @param {number} num\n     * @param {number=} decPlaces\n     * @returns {number}\n     */\n    toFixed: function toFixed(num, decPlaces) {\n      // round to the specified decimal places, then convert back to\n      // a number to remove trailing zeroes after the decimal point\n      return parseFloat(parseFloat(num).toFixed(decPlaces || 0));\n    }\n  });\n  /**\n   * Allowed formats for exporting dice data\n   *\n   * @type {Readonly<{BASE_64: number, JSON: number, OBJECT: number}>}\n   */\n\n  var exportFormats = Object.freeze({\n    JSON: 0,\n    BASE_64: 1,\n    OBJECT: 2\n  });\n\n  var Modifier = function () {\n    var Modifier =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {string} notation\n       */\n      function Modifier(notation) {\n        _classCallCheck(this, Modifier);\n\n        if (!notation) {\n          throw new Error('Notation is required');\n        } // set the modifier's notation\n\n\n        this.notation = notation; // set the modifier's sort order\n\n        this.order = 999;\n      }\n      /**\n       * Returns the name for the modifier\n       *\n       * @returns {*}\n       */\n\n\n      _createClass(Modifier, [{\n        key: \"run\",\n\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n        value: function run(results, dice) {\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var notation = this.notation,\n              name = this.name;\n          return {\n            name: name,\n            notation: notation,\n            type: 'modifier'\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.notation;\n        }\n      }, {\n        key: \"name\",\n        get: function get() {\n          return this.constructor.name;\n        }\n      }]);\n\n      return Modifier;\n    }();\n\n    return Modifier;\n  }();\n\n  var ComparePoint = function () {\n    var _operator = Symbol('operator');\n\n    var _value = Symbol('value');\n\n    var ComparePoint =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {string} operator\n       * @param {number} value\n       */\n      function ComparePoint(operator, value) {\n        _classCallCheck(this, ComparePoint);\n\n        if (!operator) {\n          throw new Error('ComparePoint: No compare operator specified');\n        } else if (!value && value !== 0) {\n          throw new Error('ComparePoint: No compare value specified');\n        }\n\n        this.operator = operator;\n        this.value = value;\n      }\n      /**\n       * Checks if the operator is valid\n       *\n       * @param {string} operator\n       *\n       * @returns {boolean}\n       */\n\n\n      _createClass(ComparePoint, [{\n        key: \"isMatch\",\n\n        /**\n         * Checks whether value matches the compare point\n         *\n         * @param {number} value\n         *\n         * @returns {boolean}\n         */\n        value: function isMatch(value) {\n          return diceUtils.compareNumbers(value, this.value, this.operator);\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var operator = this.operator,\n              value = this.value;\n          return {\n            operator: operator,\n            type: 'compare-point',\n            value: value\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return \"\".concat(this.operator).concat(this.value);\n        }\n      }, {\n        key: \"operator\",\n\n        /**\n         * Sets the operator value\n         *\n         * @param {string} operator\n         *\n         * @throws Error\n         */\n        set: function set(operator) {\n          if (!this.constructor.isValidOperator(operator)) {\n            throw new Error(\"ComparePoint: operator \\\"\".concat(operator, \"\\\" is not valid\"));\n          }\n\n          this[_operator] = operator;\n        }\n        /**\n         * Returns the comparison operator\n         *\n         * @returns {string}\n         */\n        ,\n        get: function get() {\n          return this[_operator];\n        }\n        /**\n         * Sets the value\n         *\n         * @param {number} value\n         *\n         * @throws Error\n         */\n\n      }, {\n        key: \"value\",\n        set: function set(value) {\n          if (!diceUtils.isNumeric(value)) {\n            throw new Error('ComparePoint: value must be numeric');\n          }\n\n          this[_value] = parseInt(value, 10);\n        }\n        /**\n         * Returns the comparison value\n         *\n         * @returns {number}\n         */\n        ,\n        get: function get() {\n          return this[_value];\n        }\n      }], [{\n        key: \"isValidOperator\",\n        value: function isValidOperator(operator) {\n          return typeof operator === 'string' && /^(?:[<>!]?=|[<>])$/.test(operator);\n        }\n      }]);\n\n      return ComparePoint;\n    }();\n\n    return ComparePoint;\n  }();\n\n  var ComparisonModifier = function () {\n    var _comparePoint = Symbol('compare-point');\n\n    var ComparisonModifier =\n    /*#__PURE__*/\n    function (_Modifier) {\n      _inherits(ComparisonModifier, _Modifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {ComparePoint} comparePoint\n       */\n      function ComparisonModifier(notation, comparePoint) {\n        var _this;\n\n        _classCallCheck(this, ComparisonModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ComparisonModifier).call(this, notation));\n\n        if (comparePoint) {\n          _this.comparePoint = comparePoint;\n        }\n\n        return _this;\n      }\n      /**\n       * Returns the compare point for the object\n       *\n       * @returns {ComparePoint}\n       */\n\n\n      _createClass(ComparisonModifier, [{\n        key: \"isComparePoint\",\n\n        /**\n         * Checks whether value matches the compare point\n         *\n         * @param {number} value\n         *\n         * @returns {boolean}\n         */\n        value: function isComparePoint(value) {\n          if (!this.comparePoint) {\n            console.warn('No Compare Point specified');\n            return false;\n          }\n\n          return this.comparePoint.isMatch(value);\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var comparePoint = this.comparePoint;\n          return Object.assign(_get(_getPrototypeOf(ComparisonModifier.prototype), \"toJSON\", this).call(this), {\n            comparePoint: comparePoint\n          });\n        }\n      }, {\n        key: \"comparePoint\",\n        get: function get() {\n          return this[_comparePoint];\n        }\n        /**\n         * Sets the compare point\n         *\n         * @param comparePoint\n         */\n        ,\n        set: function set(comparePoint) {\n          if (!(comparePoint instanceof ComparePoint)) {\n            throw TypeError('comparePoint must be instance of ComparePoint');\n          }\n\n          this[_comparePoint] = comparePoint;\n        }\n      }]);\n\n      return ComparisonModifier;\n    }(Modifier);\n\n    return ComparisonModifier;\n  }();\n\n  var RollResult = function () {\n    var _calculationValue = Symbol('calculation-value');\n\n    var _modifiers = Symbol('modifiers');\n\n    var _initialValue = Symbol('initial-value');\n\n    var _useInTotal = Symbol('use-in-total');\n\n    var _value = Symbol('value');\n\n    var RollResult =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {number|{value: Number, initialValue: number}} value The value rolled\n       * @param {string[]=} modifiers List of modifier names that affect this roll\n       * @param {boolean=} useInTotal Whether to include the roll value when calculating totals\n       */\n      function RollResult(value, modifiers) {\n        var useInTotal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        _classCallCheck(this, RollResult);\n\n        if (diceUtils.isNumeric(value)) {\n          this[_initialValue] = parseInt(value, 10);\n        } else if (value && _typeof(value) === 'object' && !Array.isArray(value)) {\n          // ensure that we have a valid value\n          var initialVal = diceUtils.isNumeric(value.initialValue) ? value.initialValue : value.value;\n\n          if (!diceUtils.isNumeric(initialVal)) {\n            throw new Error(\"Result value is invalid: \".concat(initialVal));\n          }\n\n          this[_initialValue] = parseInt(initialVal, 10);\n\n          if (diceUtils.isNumeric(value.value) && parseInt(value.value, 10) !== this[_initialValue]) {\n            this.value = value.value;\n          }\n\n          if (diceUtils.isNumeric(value.calculationValue) && parseFloat(value.calculationValue) !== this.value) {\n            this.calculationValue = value.calculationValue;\n          }\n\n          if (Array.isArray(value.modifiers) && value.modifiers.length) {\n            modifiers = value.modifiers;\n          }\n\n          if (typeof value.useInTotal === 'boolean') {\n            useInTotal = value.useInTotal;\n          }\n        } else {\n          throw new Error(\"Result value is invalid: \".concat(value));\n        }\n\n        this.modifiers = modifiers || [];\n        this.useInTotal = useInTotal;\n      }\n      /**\n       * Returns the value to use in calculations\n       *\n       * @returns {number}\n       */\n\n\n      _createClass(RollResult, [{\n        key: \"toJSON\",\n\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n        value: function toJSON() {\n          var calculationValue = this.calculationValue,\n              initialValue = this.initialValue,\n              modifierFlags = this.modifierFlags,\n              modifiers = this.modifiers,\n              useInTotal = this.useInTotal,\n              value = this.value;\n          return {\n            calculationValue: calculationValue,\n            initialValue: initialValue,\n            modifierFlags: modifierFlags,\n            modifiers: modifiers,\n            type: 'result',\n            useInTotal: useInTotal,\n            value: value\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.value + this.modifierFlags;\n        }\n      }, {\n        key: \"calculationValue\",\n        get: function get() {\n          return diceUtils.isNumeric(this[_calculationValue]) ? parseFloat(this[_calculationValue]) : this.value;\n        }\n        /**\n         * Sets the value to use in calculations\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          var isNumeric = diceUtils.isNumeric(value);\n\n          if (value && !isNumeric) {\n            throw new Error(\"Result calculation value is invalid: \".concat(value));\n          }\n\n          this[_calculationValue] = isNumeric ? parseFloat(value) : null;\n        }\n        /**\n         * The initial roll value before any modifiers.\n         * Not often used, you probably want `value` instead.\n         *\n         * @returns {Number}\n         */\n\n      }, {\n        key: \"initialValue\",\n        get: function get() {\n          return this[_initialValue];\n        }\n        /**\n         * Returns the flags for the modifiers that affect the roll\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"modifierFlags\",\n        get: function get() {\n          // @todo need a better way of mapping modifiers to symbols\n          return this.modifiers.reduce(function (acc, flag) {\n            switch (flag) {\n              case 'compound':\n              case 'explode':\n                flag = '!';\n                break;\n\n              case 'critical-failure':\n                flag = '__';\n                break;\n\n              case 'critical-success':\n                flag = '**';\n                break;\n\n              case 'drop':\n                flag = 'd';\n                break;\n\n              case 'penetrate':\n                flag = 'p';\n                break;\n\n              case 're-roll':\n                flag = 'r';\n                break;\n\n              case 're-roll-once':\n                flag = 'ro';\n                break;\n\n              case 'target-failure':\n                flag = '_';\n                break;\n\n              case 'target-success':\n                flag = '*';\n                break;\n            }\n\n            return acc + flag;\n          }, '');\n        }\n        /**\n         * Returns the modifiers that affect the roll\n         *\n         * @returns {string[]}\n         */\n\n      }, {\n        key: \"modifiers\",\n        get: function get() {\n          return this[_modifiers] || [];\n        }\n        /**\n         * Set the modifiers that affect the roll\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          if ((value || 0 === value) && (!Array.isArray(value) || value.some(function (item) {\n            return typeof item !== 'string';\n          }))) {\n            throw new Error(\"Modifiers must be an array of modifier names: \".concat(value));\n          }\n\n          this[_modifiers] = value || [];\n        }\n        /**\n         * Returns the useInTotal flag\n         *\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"useInTotal\",\n        get: function get() {\n          return !!this[_useInTotal];\n        }\n        /**\n         * Sets the useInTotal flag\n         *\n         * @param {boolean} value\n         */\n        ,\n        set: function set(value) {\n          this[_useInTotal] = !!value;\n        }\n        /**\n         * Roll value after modifiers have affected it\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"value\",\n        get: function get() {\n          return diceUtils.isNumeric(this[_value]) ? this[_value] : this[_initialValue];\n        }\n        /**\n         * Sets the value\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          if (!diceUtils.isNumeric(value)) {\n            throw new Error(\"Result value is invalid: \".concat(value));\n          }\n\n          this[_value] = parseInt(value, 10);\n        }\n      }]);\n\n      return RollResult;\n    }();\n\n    return RollResult;\n  }();\n\n  var ExplodeModifier = function () {\n    var _compound = Symbol('compound');\n\n    var _penetrate = Symbol('penetrate');\n\n    var ExplodeModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(ExplodeModifier, _ComparisonModifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {ComparePoint} comparePoint\n       * @param {boolean=} compound Defaults to false\n       * @param {boolean=} penetrate Defaults to false\n       */\n      function ExplodeModifier(notation) {\n        var _this;\n\n        var comparePoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var compound = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var penetrate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ExplodeModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ExplodeModifier).call(this, notation, comparePoint));\n        _this[_compound] = !!compound;\n        _this[_penetrate] = !!penetrate; // set the modifier's sort order\n\n        _this.order = 1;\n        return _this;\n      }\n      /**\n       * Whether the modifier should compound the results or not\n       *\n       * @type {boolean}\n       */\n\n\n      _createClass(ExplodeModifier, [{\n        key: \"run\",\n\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          // ensure that the dice can explode without going into an infinite loop\n          if (dice.min === dice.max) {\n            throw new Error(\"Die must have more than 1 side to explode: \".concat(dice));\n          }\n\n          results.rolls = results.rolls.map(function (roll) {\n            var subRolls = [roll];\n            var compareValue = roll.value;\n\n            while (_this2.isComparePoint(compareValue)) {\n              var prevRoll = subRolls[subRolls.length - 1]; // roll the dice\n\n              var rollResult = dice.rollOnce(); // update the value to check against\n\n              compareValue = rollResult.value; // add the explode modifier flag\n\n              prevRoll.modifiers.push('explode'); // add the penetrate modifier flag and decrement the value\n\n              if (_this2.penetrate) {\n                prevRoll.modifiers.push('penetrate');\n                rollResult.value--;\n              } // add the rolls to the list\n\n\n              subRolls.push(rollResult);\n            } // return the rolls (Compounded if necessary)\n\n\n            if (_this2.compound && subRolls.length > 1) {\n              // update the roll value and modifiers\n              roll.value = diceUtils.sumArray(subRolls);\n              roll.modifiers = ['explode', 'compound'];\n\n              if (_this2.penetrate) {\n                roll.modifiers.push('penetrate');\n              }\n\n              return roll;\n            }\n\n            return subRolls;\n          }).flat();\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var compound = this.compound,\n              penetrate = this.penetrate;\n          return Object.assign(_get(_getPrototypeOf(ExplodeModifier.prototype), \"toJSON\", this).call(this), {\n            compound: compound,\n            penetrate: penetrate\n          });\n        }\n      }, {\n        key: \"compound\",\n        get: function get() {\n          return this[_compound];\n        }\n        /**\n         * Whether the modifier should penetrate the results or not\n         *\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"penetrate\",\n        get: function get() {\n          return this[_penetrate];\n        }\n      }]);\n\n      return ExplodeModifier;\n    }(ComparisonModifier);\n\n    return ExplodeModifier;\n  }();\n\n  var RollResults = function () {\n    var _rolls = Symbol('rolls');\n\n    var RollResults =\n    /*#__PURE__*/\n    function () {\n      /**\n       * @param {RollResult[]=} rolls\n       */\n      function RollResults(rolls) {\n        _classCallCheck(this, RollResults);\n\n        this.rolls = rolls || [];\n      }\n      /**\n       * Returns the numbers of rolls\n       *\n       * @returns {number}\n       */\n\n\n      _createClass(RollResults, [{\n        key: \"addRoll\",\n\n        /**\n         * Adds a single roll to the list\n         *\n         * @param {RollResult|number} value\n         */\n        value: function addRoll(value) {\n          var result = value instanceof RollResult ? value : new RollResult(value);\n\n          this[_rolls].push(result);\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var rolls = this.rolls,\n              value = this.value;\n          return {\n            rolls: rolls,\n            value: value\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return \"[\".concat(this.rolls.join(', '), \"]\");\n        }\n      }, {\n        key: \"length\",\n        get: function get() {\n          return this.rolls.length || 0;\n        }\n        /**\n         * Returns the rolls\n         *\n         * @returns {RollResult[]}\n         */\n\n      }, {\n        key: \"rolls\",\n        get: function get() {\n          return _toConsumableArray(this[_rolls] || []);\n        }\n        /**\n         * Sets the rolls\n         *\n         * @param {RollResult[]|number[]} rolls\n         *\n         * @throws Error\n         */\n        ,\n        set: function set(rolls) {\n          var _this = this;\n\n          if (!rolls || !Array.isArray(rolls)) {\n            // roll is not an array\n            throw new Error(\"Rolls must be an array: \".concat(rolls));\n          } // loop through each result and add it to the rolls list\n\n\n          this[_rolls] = [];\n          rolls.forEach(function (result) {\n            _this.addRoll(result);\n          });\n        }\n        /**\n         * The total value of the rolls, taking in to consideration modifiers\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"value\",\n        get: function get() {\n          return this.rolls.reduce(function (v, roll) {\n            return v + (roll.useInTotal ? roll.calculationValue : 0);\n          }, 0);\n        }\n      }]);\n\n      return RollResults;\n    }();\n\n    return RollResults;\n  }();\n\n  var ReRollModifier = function () {\n    var _once = Symbol('once');\n\n    var ReRollModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(ReRollModifier, _ComparisonModifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {boolean} once\n       * @param {ComparePoint} comparePoint\n       */\n      function ReRollModifier(notation) {\n        var _this;\n\n        var once = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var comparePoint = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n        _classCallCheck(this, ReRollModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ReRollModifier).call(this, notation, comparePoint));\n        _this.once = !!once; // set the modifier's sort order\n\n        _this.order = 2;\n        return _this;\n      }\n      /**\n       * Returns whether the modifier should only re-roll once or not\n       *\n       * @returns {boolean}\n       */\n\n\n      _createClass(ReRollModifier, [{\n        key: \"run\",\n\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          // ensure that the dice can explode without going into an infinite loop\n          if (dice.min === dice.max) {\n            throw new Error(\"Die must have more than 1 side to re-roll: \".concat(dice));\n          }\n\n          results.rolls.map(function (roll) {\n            var hasReRolled = false; // if the die roll matches the compare point we re-roll\n            // unless we're only rolling once, we should re-roll if any consecutive rolls also match the CP\n\n            while (_this2.isComparePoint(roll.value) && (!_this2.once || !hasReRolled)) {\n              // roll the dice\n              var rollResult = dice.rollOnce(); // update the roll value (Unlike exploding, the original value if not kept)\n\n              roll.value = rollResult.value; // increment the roll count so we only roll once when required\n\n              hasReRolled = true;\n            } // add the re-roll modifier flag outside the loop, otherwise we get duplicate flags\n\n\n            if (hasReRolled) {\n              roll.modifiers.push(\"re-roll\".concat(_this2.once ? '-once' : ''));\n            }\n\n            return roll;\n          });\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var once = this.once;\n          return Object.assign(_get(_getPrototypeOf(ReRollModifier.prototype), \"toJSON\", this).call(this), {\n            once: once\n          });\n        }\n      }, {\n        key: \"once\",\n        get: function get() {\n          return !!this[_once];\n        }\n        /**\n         * Sets whether the modifier should only re-roll once or not\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          this[_once] = !!value;\n        }\n      }]);\n\n      return ReRollModifier;\n    }(ComparisonModifier);\n\n    return ReRollModifier;\n  }();\n\n  /**\n   *\n   * @type {StandardDice}\n   *\n   * @property {Map[]} modifiers\n   * @property {string} notation\n   * @property {number|string} sides\n   * @property {number} qty\n   *\n   * @method {RollResults} roll\n   * @method {RollResult} rollDie\n   */\n\n  var StandardDice = function () {\n    var _modifiers = Symbol('modifiers');\n\n    var _notation = Symbol('notation');\n\n    var _qty = Symbol('qty');\n\n    var _sides = Symbol('sides');\n\n    var StandardDice =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {string} notation\n       * @param {number} sides\n       * @param {number} qty\n       * @param {Map|{}|Map[]|null} modifiers\n       */\n      function StandardDice(notation, sides) {\n        var _this = this;\n\n        var qty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var modifiers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n        _classCallCheck(this, StandardDice);\n\n        if (!notation) {\n          throw new TypeError('Dice: Notation is required');\n        } else if (!sides) {\n          throw new TypeError('Dice: sides is required');\n        } else if (!diceUtils.isNumeric(qty) || qty < 1) {\n          throw new TypeError('qty must be a positive integer');\n        }\n\n        this[_notation] = notation;\n        this[_qty] = parseInt(qty, 10);\n        this[_sides] = sides;\n\n        if (modifiers) {\n          if (modifiers instanceof Map) {\n            this[_modifiers] = modifiers;\n          } else if (Array.isArray(modifiers)) {\n            // loop through and get the modifier name of each item and use it as the map key\n            this[_modifiers] = new Map(modifiers.map(function (modifier) {\n              return [modifier.name, modifier];\n            }));\n          } else if (_typeof(modifiers) === 'object') {\n            this[_modifiers] = new Map(Object.entries(modifiers));\n          } else {\n            throw new Error('modifiers should be a Map or an Object');\n          }\n\n          if (this[_modifiers].size && _toConsumableArray(this[_modifiers].entries()).some(function (entry) {\n            return !(entry[1] instanceof Modifier);\n          })) {\n            throw new Error('modifiers is invalid. List must only contain Modifier instances');\n          } // loop through each modifier and ensure that those that require it have compare points\n          // @todo find a better way of defining compare point on modifiers that don't have them\n\n\n          this[_modifiers].forEach(function (modifier) {\n            if (modifier instanceof ExplodeModifier && !modifier.comparePoint) {\n              modifier.comparePoint = new ComparePoint('=', _this.max);\n            } else if (modifier instanceof ReRollModifier && !modifier.comparePoint) {\n              modifier.comparePoint = new ComparePoint('=', _this.min);\n            }\n          });\n        }\n      }\n      /**\n       * The modifiers that affect this dice roll\n       *\n       * @returns {Map|null}\n       */\n\n\n      _createClass(StandardDice, [{\n        key: \"roll\",\n\n        /**\n         * Rolls the dice, for the specified quantity and\n         * includes any modifiers, and returns the roll output\n         *\n         * @returns {RollResults}\n         */\n        value: function roll() {\n          var _this2 = this;\n\n          // create a result object to hold the rolls\n          var rollResult = new RollResults(); // loop for the quantity and roll the die\n\n          for (var i = 0; i < this.qty; i++) {\n            // add the rolls to the list\n            rollResult.addRoll(this.rollOnce());\n          } // loop through each modifier and carry out its actions\n\n\n          (this.modifiers || []).forEach(function (modifier) {\n            modifier.run(rollResult, _this2);\n          });\n          return rollResult;\n        }\n        /**\n         * Rolls a single die and returns the output value\n         *\n         * @returns {RollResult}\n         */\n\n      }, {\n        key: \"rollOnce\",\n        value: function rollOnce() {\n          return new RollResult(diceUtils.generateNumber(this.min, this.max));\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var max = this.max,\n              min = this.min,\n              modifiers = this.modifiers,\n              name = this.name,\n              notation = this.notation,\n              qty = this.qty,\n              sides = this.sides;\n          return {\n            max: max,\n            min: min,\n            modifiers: modifiers,\n            name: name,\n            notation: notation,\n            qty: qty,\n            sides: sides,\n            type: 'die'\n          };\n        }\n        /**\n         * Returns the String representation of the object\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.notation;\n        }\n      }, {\n        key: \"modifiers\",\n        get: function get() {\n          // ensure modifiers are ordered correctly\n          return this[_modifiers] ? new Map(_toConsumableArray(this[_modifiers]).sort(function (a, b) {\n            return a[1].order - b[1].order;\n          })) : null;\n        }\n        /**\n         * The maximum value that can be rolled om the die\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"max\",\n        get: function get() {\n          return this.sides;\n        }\n        /**\n         * Returns the minimum value that can be rolled on the die\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"min\",\n        get: function get() {\n          return 1;\n        }\n        /**\n         * Returns the name for the dice\n         *\n         * @returns {*}\n         */\n\n      }, {\n        key: \"name\",\n        get: function get() {\n          return this.constructor.name;\n        }\n        /**\n         * The dice notation for this dice roll\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"notation\",\n        get: function get() {\n          return this[_notation];\n        }\n        /**\n         * Returns the number of dice that should be rolled.\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"qty\",\n        get: function get() {\n          return this[_qty];\n        }\n        /**\n         * The number of sides the dice has\n         *\n         * @returns {*}\n         */\n\n      }, {\n        key: \"sides\",\n        get: function get() {\n          return this[_sides];\n        }\n      }]);\n\n      return StandardDice;\n    }();\n\n    return StandardDice;\n  }();\n\n  var FudgeDice = function () {\n    var FudgeDice =\n    /*#__PURE__*/\n    function (_StandardDice) {\n      _inherits(FudgeDice, _StandardDice);\n\n      function FudgeDice(notation) {\n        var nonBlanks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n        var qty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var modifiers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n        _classCallCheck(this, FudgeDice);\n\n        if (!nonBlanks && nonBlanks !== 0) {\n          nonBlanks = 2;\n        } else if (nonBlanks !== 1 && nonBlanks !== 2) {\n          throw new Error('nonBlanks must be 1 or 2');\n        }\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(FudgeDice).call(this, notation, parseInt(nonBlanks, 10), qty, modifiers));\n      }\n      /**\n       * The maximum value that can be rolled om the die\n       *\n       * @returns {number}\n       */\n\n\n      _createClass(FudgeDice, [{\n        key: \"rollOnce\",\n\n        /**\n         * Rolls a single die and returns the output value\n         *\n         * @returns {RollResult}\n         */\n        value: function rollOnce() {\n          var total = 0;\n\n          if (this.nonBlanks === 2) {\n            // default fudge (2 of each non-blank) = 1d3 - 2\n            total = diceUtils.generateNumber(1, 3) - 2;\n          } else if (this.nonBlanks === 1) {\n            // only 1 of each non-blank\n            // on 1d6 a roll of 1 = -1, 6 = +1, others = 0\n            var num = diceUtils.generateNumber(1, 6);\n\n            if (num === 1) {\n              total = -1;\n            } else if (num === 6) {\n              total = 1;\n            }\n          }\n\n          return new RollResult(total);\n        }\n      }, {\n        key: \"max\",\n        get: function get() {\n          return 1;\n        }\n        /**\n         * Returns the minimum value that can be rolled on the die\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"min\",\n        get: function get() {\n          return -1;\n        }\n      }, {\n        key: \"nonBlanks\",\n        get: function get() {\n          return _get(_getPrototypeOf(FudgeDice.prototype), \"sides\", this);\n        }\n      }, {\n        key: \"sides\",\n        get: function get() {\n          return \"F.\".concat(this.nonBlanks);\n        }\n      }]);\n\n      return FudgeDice;\n    }(StandardDice);\n\n    return FudgeDice;\n  }();\n\n  var PercentileDice = function () {\n    var PercentileDice =\n    /*#__PURE__*/\n    function (_StandardDice) {\n      _inherits(PercentileDice, _StandardDice);\n\n      function PercentileDice(notation) {\n        var qty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var modifiers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n        _classCallCheck(this, PercentileDice);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(PercentileDice).call(this, notation, 100, qty, modifiers));\n      }\n      /**\n       * The maximum value that can be rolled on the die\n       *\n       * @returns {number}\n       */\n\n\n      _createClass(PercentileDice, [{\n        key: \"max\",\n        get: function get() {\n          return 100;\n        }\n        /**\n         * The number of sides the dice has\n         *\n         * @returns {string}s\n         */\n\n      }, {\n        key: \"sides\",\n        get: function get() {\n          return '%';\n        }\n      }]);\n\n      return PercentileDice;\n    }(StandardDice);\n\n    return PercentileDice;\n  }();\n\n\n\n  var Dice = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    FudgeDice: FudgeDice,\n    PercentileDice: PercentileDice,\n    StandardDice: StandardDice\n  });\n\n  var CriticalFailureModifier = function () {\n    var CriticalFailureModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(CriticalFailureModifier, _ComparisonModifier);\n\n      function CriticalFailureModifier(notation, comparePoint) {\n        var _this;\n\n        _classCallCheck(this, CriticalFailureModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(CriticalFailureModifier).call(this, notation, comparePoint)); // set the modifier's sort order\n\n        _this.order = 7;\n        return _this;\n      }\n      /**\n       * Runs the modifier on the rolls\n       *\n       * @param {RollResults} results\n       * @param {StandardDice} dice\n       *\n       * @returns {RollResults}\n       */\n\n\n      _createClass(CriticalFailureModifier, [{\n        key: \"run\",\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          results.rolls.map(function (roll) {\n            // add the modifier flag\n            if (_this2.isComparePoint(roll.value)) {\n              roll.modifiers.push('critical-failure');\n            }\n\n            return roll;\n          });\n          return results;\n        }\n      }]);\n\n      return CriticalFailureModifier;\n    }(ComparisonModifier);\n\n    return CriticalFailureModifier;\n  }();\n\n  var CriticalSuccessModifier = function () {\n    var CriticalSuccessModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(CriticalSuccessModifier, _ComparisonModifier);\n\n      function CriticalSuccessModifier(notation, comparePoint) {\n        var _this;\n\n        _classCallCheck(this, CriticalSuccessModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(CriticalSuccessModifier).call(this, notation, comparePoint)); // set the modifier's sort order\n\n        _this.order = 6;\n        return _this;\n      }\n      /**\n       * Runs the modifier on the rolls\n       *\n       * @param {RollResults} results\n       * @param {StandardDice} dice\n       *\n       * @returns {RollResults}\n       */\n\n\n      _createClass(CriticalSuccessModifier, [{\n        key: \"run\",\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          // loop through each roll and see if it's a critical success\n          results.rolls.map(function (roll) {\n            // add the modifier flag\n            if (_this2.isComparePoint(roll.value)) {\n              roll.modifiers.push('critical-success');\n            }\n\n            return roll;\n          });\n          return results;\n        }\n      }]);\n\n      return CriticalSuccessModifier;\n    }(ComparisonModifier);\n\n    return CriticalSuccessModifier;\n  }();\n\n  var KeepModifier = function () {\n    var _end = Symbol('end');\n\n    var _qty = Symbol('qty');\n\n    var KeepModifier =\n    /*#__PURE__*/\n    function (_Modifier) {\n      _inherits(KeepModifier, _Modifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {string} end Either `h|l` to keep highest or lowest\n       * @param {number=} qty The amount to keep\n       */\n      function KeepModifier(notation, end, qty) {\n        var _this;\n\n        _classCallCheck(this, KeepModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(KeepModifier).call(this, notation));\n        _this.end = end;\n        _this.qty = qty || qty === 0 ? qty : 1; // set the modifier's sort order\n\n        _this.order = 3;\n        return _this;\n      }\n      /**\n       * Returns which end the rolls should be kept (\"h\" = High, \"l\" = Low)\n       *\n       * @returns {string}\n       */\n\n\n      _createClass(KeepModifier, [{\n        key: \"_rangeToDrop\",\n\n        /**\n         * Returns the min/max range of rolls to drop\n         *\n         * @param {RollResults} results\n         *\n         * @returns {number[]}\n         *\n         * @private\n         */\n        value: function _rangeToDrop(results) {\n          // we're keeping, so we want to drop all dice that are outside of the qty range\n          return [this.qty, results.length];\n        }\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n\n      }, {\n        key: \"run\",\n        value: function run(results, dice) {\n          var _map$sort$map,\n              _this2 = this;\n\n          // first clone the rolls so it doesn't affect the original array\n          var rollIndexes = (_map$sort$map = _toConsumableArray(results.rolls) // get a list of objects with roll values and original index\n          .map(function (roll, index) {\n            return {\n              value: roll.value,\n              index: index\n            };\n          }) // sort the list by value (Either ascending or descending depending on end)\n          .sort(function (a, b) {\n            return _this2.end === 'h' ? b.value - a.value : a.value - b.value;\n          }).map(function (rollIndex) {\n            return rollIndex.index;\n          }) // get the roll indexes to drop\n          ).slice.apply(_map$sort$map, _toConsumableArray(this._rangeToDrop(results))); // loop through all of our dice to drop and flag them as such\n\n\n          rollIndexes.forEach(function (rollIndex) {\n            var roll = results.rolls[rollIndex];\n            roll.modifiers.push('drop');\n            roll.useInTotal = false;\n          });\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var end = this.end,\n              qty = this.qty;\n          return Object.assign(_get(_getPrototypeOf(KeepModifier.prototype), \"toJSON\", this).call(this), {\n            end: end,\n            qty: qty\n          });\n        }\n      }, {\n        key: \"end\",\n        get: function get() {\n          return this[_end];\n        }\n        /**\n         * Sets which end the rolls should be kept (\"h\" = High, \"l\" = Low)\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          if (value !== 'h' && value !== 'l') {\n            throw new Error('End must be \"h\" or \"l\"');\n          }\n\n          this[_end] = value;\n        }\n        /**\n         * Returns the quantity of dice that should be kept\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"qty\",\n        get: function get() {\n          return this[_qty];\n        }\n        /**\n         * Sets the quantity of dice that should be kept\n         *\n         * @param {number} value\n         */\n        ,\n        set: function set(value) {\n          if (!diceUtils.isNumeric(value) || value < 1) {\n            throw new Error('qty must be a positive integer');\n          }\n\n          this[_qty] = parseInt(value, 10);\n        }\n      }]);\n\n      return KeepModifier;\n    }(Modifier);\n\n    return KeepModifier;\n  }();\n\n  var DropModifier = function () {\n    var DropModifier =\n    /*#__PURE__*/\n    function (_KeepModifier) {\n      _inherits(DropModifier, _KeepModifier);\n\n      function DropModifier(notation, end, qty) {\n        var _this;\n\n        _classCallCheck(this, DropModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(DropModifier).call(this, notation, end, qty)); // set the modifier's sort order\n\n        _this.order = 4;\n        return _this;\n      }\n      /**\n       * Returns the min/max range of rolls to drop\n       *\n       * @param {RollResults} results\n       *\n       * @returns {number[]}\n       *\n       * @private\n       */\n\n\n      _createClass(DropModifier, [{\n        key: \"_rangeToDrop\",\n        value: function _rangeToDrop(results) {\n          // we're dropping, so we want to drop all dice that are inside of the qty range\n          return [0, this.qty];\n        }\n      }]);\n\n      return DropModifier;\n    }(KeepModifier);\n\n    return DropModifier;\n  }();\n\n  var SortingModifier = function () {\n    var _direction = Symbol('direction');\n\n    var SortingModifier =\n    /*#__PURE__*/\n    function (_Modifier) {\n      _inherits(SortingModifier, _Modifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {string} direction Either `a|d`\n       */\n      function SortingModifier(notation) {\n        var _this;\n\n        var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'a';\n\n        _classCallCheck(this, SortingModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(SortingModifier).call(this, notation));\n        _this.direction = direction || 'a'; // set the modifier's sort order\n\n        _this.order = 8;\n        return _this;\n      }\n      /**\n       * Returns the sort direction\n       *\n       * @returns {string}\n       */\n\n\n      _createClass(SortingModifier, [{\n        key: \"run\",\n\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          results.rolls = results.rolls.sort(function (a, b) {\n            if (_this2.direction === 'd') {\n              return b.value - a.value;\n            }\n\n            return a.value - b.value;\n          });\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var direction = this.direction;\n          return Object.assign(_get(_getPrototypeOf(SortingModifier.prototype), \"toJSON\", this).call(this), {\n            direction: direction\n          });\n        }\n      }, {\n        key: \"direction\",\n        get: function get() {\n          return this[_direction];\n        }\n        /**\n         * Sets the sort direction\n         *\n         * @param {string} value\n         */\n        ,\n        set: function set(value) {\n          if (value !== 'a' && value !== 'd') {\n            throw new Error('Direction must be \"a\" (Ascending) or \"d\" (Descending)');\n          }\n\n          this[_direction] = value;\n        }\n      }]);\n\n      return SortingModifier;\n    }(Modifier);\n\n    return SortingModifier;\n  }();\n\n  var TargetModifier = function () {\n    var _failureCP = Symbol('failure-cp');\n\n    var TargetModifier =\n    /*#__PURE__*/\n    function (_ComparisonModifier) {\n      _inherits(TargetModifier, _ComparisonModifier);\n\n      /**\n       *\n       * @param {string} notation\n       * @param {ComparePoint} successCP\n       * @param {ComparePoint=} failureCP\n       */\n      function TargetModifier(notation, successCP, failureCP) {\n        var _this;\n\n        _classCallCheck(this, TargetModifier);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(TargetModifier).call(this, notation, successCP)); // set the failure compare point\n\n        _this.failureComparePoint = failureCP; // set the modifier's sort order\n\n        _this.order = 5;\n        return _this;\n      }\n      /**\n       * Returns the failure compare point for the modifier\n       *\n       * @returns {ComparePoint|null}\n       */\n\n\n      _createClass(TargetModifier, [{\n        key: \"getStateValue\",\n\n        /**\n         * Checks if the value is a success/failure/neither and returns\n         * its corresponding state value:\n         * success = 1, fail = -1, neither = 0\n         *\n         * @param {number} value\n         *\n         * @returns {number}\n         */\n        value: function getStateValue(value) {\n          return this.isSuccess(value) ? 1 : this.isFailure(value) ? -1 : 0;\n        }\n        /**\n         * Returns true if the value matches the failure compare point.\n         *\n         * A response of `false` does NOT indicate a success. A value\n         * is a success ONLY if it passes the success compare point.\n         * A value could be neither a failure or a success.\n         *\n         * @param value\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"isFailure\",\n        value: function isFailure(value) {\n          return this.failureComparePoint ? this.failureComparePoint.isMatch(value) : false;\n        }\n        /**\n         * Returns true if the value doesn't match both the success compare point\n         * and the failure compare point.\n         *\n         * @param {number} value\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"isNeutral\",\n        value: function isNeutral(value) {\n          return !this.isSuccess(value) && !this.isFailure(value);\n        }\n        /**\n         * Returns true if the value matches the success compare point.\n         *\n         * A response of `false` does NOT indicate a failure. A value\n         * is a failure ONLY if it passes the failure compare point.\n         * A value could be neither a failure or a success.\n         *\n         * @param {number} value\n         *\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"isSuccess\",\n        value: function isSuccess(value) {\n          return this.isComparePoint(value);\n        }\n        /**\n         * Runs the modifier on the rolls\n         *\n         * @param {RollResults} results\n         * @param {StandardDice} dice\n         *\n         * @returns {RollResults}\n         */\n\n      }, {\n        key: \"run\",\n        value: function run(results, dice) {\n          var _this2 = this;\n\n          // loop through each roll and see if it matches the target\n          results.rolls.map(function (roll) {\n            // add the modifier flag\n            if (_this2.isSuccess(roll.value)) {\n              roll.modifiers.push('target-success');\n            } else if (_this2.isFailure(roll)) {\n              roll.modifiers.push('target-failure');\n            } // set the value to the success state value\n\n\n            roll.calculationValue = _this2.getStateValue(roll.value);\n            return roll;\n          });\n          return results;\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var failureComparePoint = this.failureComparePoint,\n              successComparePoint = this.successComparePoint; // get the inherited object, but remove the comparePoint property\n\n          var result = _get(_getPrototypeOf(TargetModifier.prototype), \"toJSON\", this).call(this);\n\n          delete result.comparePoint;\n          return Object.assign(result, {\n            failureComparePoint: failureComparePoint,\n            successComparePoint: successComparePoint\n          });\n        }\n      }, {\n        key: \"failureComparePoint\",\n        get: function get() {\n          return this[_failureCP];\n        }\n        /**\n         * Sets the compare point\n         *\n         * @param comparePoint\n         */\n        ,\n        set: function set(comparePoint) {\n          if (comparePoint && !(comparePoint instanceof ComparePoint)) {\n            throw TypeError('failure comparePoint must be instance of ComparePoint or null');\n          }\n\n          this[_failureCP] = comparePoint || null;\n        }\n        /**\n         * Returns the success compare point for the modifier\n         *\n         * @returns {ComparePoint}\n         */\n\n      }, {\n        key: \"successComparePoint\",\n        get: function get() {\n          return this.comparePoint;\n        }\n        /**\n         * Sets the success compare point for the modifier\n         *\n         * @param value\n         */\n        ,\n        set: function set(value) {\n          _set(_getPrototypeOf(TargetModifier.prototype), \"comparePoint\", value, this, true);\n        }\n      }]);\n\n      return TargetModifier;\n    }(ComparisonModifier);\n\n    return TargetModifier;\n  }();\n\n\n\n  var Modifiers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ComparisonModifier: ComparisonModifier,\n    CriticalFailureModifier: CriticalFailureModifier,\n    CriticalSuccessModifier: CriticalSuccessModifier,\n    DropModifier: DropModifier,\n    ExplodeModifier: ExplodeModifier,\n    KeepModifier: KeepModifier,\n    ReRollModifier: ReRollModifier,\n    SortingModifier: SortingModifier,\n    TargetModifier: TargetModifier\n  });\n\n  var RollGroup = function () {\n    var _modifiers = Symbol('modifiers');\n\n    var _notation = Symbol('notation');\n\n    var _expressions = Symbol('expressions');\n\n    var RollGroup =\n    /*#__PURE__*/\n    function () {\n      /**\n       *\n       * @param {string} notation\n       * @param {StandardDice[]} expressions\n       * @param {[]|null} modifiers\n       */\n      function RollGroup(notation, expressions) {\n        var modifiers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n        _classCallCheck(this, RollGroup);\n\n        this[_notation] = notation;\n        this[_expressions] = expressions;\n        this[_modifiers] = modifiers;\n      }\n      /**\n       * The modifiers that affect this group\n       *\n       * @returns {Modifier[]|null}\n       */\n\n\n      _createClass(RollGroup, [{\n        key: \"toJSON\",\n\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n        value: function toJSON() {\n          var modifiers = this.modifiers,\n              notation = this.notation,\n              expressions = this.expressions;\n          return {\n            expressions: expressions,\n            modifiers: modifiers,\n            notation: notation,\n            type: 'group'\n          };\n        }\n      }, {\n        key: \"modifiers\",\n        get: function get() {\n          return this[_modifiers];\n        }\n        /**\n         * The dice notation for this group\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"notation\",\n        get: function get() {\n          return this[_notation];\n        }\n        /**\n         * The expressions in this group\n         *\n         * @returns {StandardDice[]}\n         */\n\n      }, {\n        key: \"expressions\",\n        get: function get() {\n          return this[_expressions];\n        }\n      }]);\n\n      return RollGroup;\n    }();\n\n    return RollGroup;\n  }();\n\n  // TODO: remove these polyfills as soon as we have a build process that transpiles the code to ES5\n  // Polyfill for IE 11 (Number.isFinite is used in `complex.js`)\n  // source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\n  Number.isFinite = Number.isFinite || function (value) {\n    return typeof value === 'number' && isFinite(value);\n  }; // Polyfill for IE 11\n  // source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n\n\n  Number.isNaN = Number.isNaN || function (value) {\n    return value !== value; // eslint-disable-line no-self-compare\n  };\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function unwrapExports (x) {\n  \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  /**\n   * Test whether a value is a BigNumber\n   * @param {*} x\n   * @return {boolean}\n   */\n\n  var isBigNumber = function isBigNumber(x) {\n    return x && x.constructor.prototype.isBigNumber || false;\n  };\n\n  var object = createCommonjsModule(function (module, exports) {\n\n  function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n  /**\n   * Clone an object\n   *\n   *     clone(x)\n   *\n   * Can clone any primitive type, array, and object.\n   * If x has a function clone, this function will be invoked to clone the object.\n   *\n   * @param {*} x\n   * @return {*} clone\n   */\n\n\n  exports.clone = function clone(x) {\n    var type = _typeof(x); // immutable primitive types\n\n\n    if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\n      return x;\n    } // use clone function of the object when available\n\n\n    if (typeof x.clone === 'function') {\n      return x.clone();\n    } // array\n\n\n    if (Array.isArray(x)) {\n      return x.map(function (value) {\n        return clone(value);\n      });\n    }\n\n    if (x instanceof Date) return new Date(x.valueOf());\n    if (isBigNumber(x)) return x; // bignumbers are immutable\n\n    if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp\n    // object\n\n    return exports.map(x, clone);\n  };\n  /**\n   * Apply map to all properties of an object\n   * @param {Object} object\n   * @param {function} callback\n   * @return {Object} Returns a copy of the object with mapped properties\n   */\n\n\n  exports.map = function (object, callback) {\n    var clone = {};\n\n    for (var key in object) {\n      if (exports.hasOwnProperty(object, key)) {\n        clone[key] = callback(object[key]);\n      }\n    }\n\n    return clone;\n  };\n  /**\n   * Extend object a with the properties of object b\n   * @param {Object} a\n   * @param {Object} b\n   * @return {Object} a\n   */\n\n\n  exports.extend = function (a, b) {\n    for (var prop in b) {\n      if (exports.hasOwnProperty(b, prop)) {\n        a[prop] = b[prop];\n      }\n    }\n\n    return a;\n  };\n  /**\n   * Deep extend an object a with the properties of object b\n   * @param {Object} a\n   * @param {Object} b\n   * @returns {Object}\n   */\n\n\n  exports.deepExtend = function deepExtend(a, b) {\n    // TODO: add support for Arrays to deepExtend\n    if (Array.isArray(b)) {\n      throw new TypeError('Arrays are not supported by deepExtend');\n    }\n\n    for (var prop in b) {\n      if (exports.hasOwnProperty(b, prop)) {\n        if (b[prop] && b[prop].constructor === Object) {\n          if (a[prop] === undefined) {\n            a[prop] = {};\n          }\n\n          if (a[prop].constructor === Object) {\n            deepExtend(a[prop], b[prop]);\n          } else {\n            a[prop] = b[prop];\n          }\n        } else if (Array.isArray(b[prop])) {\n          throw new TypeError('Arrays are not supported by deepExtend');\n        } else {\n          a[prop] = b[prop];\n        }\n      }\n    }\n\n    return a;\n  };\n  /**\n   * Deep test equality of all fields in two pairs of arrays or objects.\n   * @param {Array | Object} a\n   * @param {Array | Object} b\n   * @returns {boolean}\n   */\n\n\n  exports.deepEqual = function deepEqual(a, b) {\n    var prop, i, len;\n\n    if (Array.isArray(a)) {\n      if (!Array.isArray(b)) {\n        return false;\n      }\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (i = 0, len = a.length; i < len; i++) {\n        if (!exports.deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    } else if (a instanceof Object) {\n      if (Array.isArray(b) || !(b instanceof Object)) {\n        return false;\n      }\n\n      for (prop in a) {\n        // noinspection JSUnfilteredForInLoop\n        if (!exports.deepEqual(a[prop], b[prop])) {\n          return false;\n        }\n      }\n\n      for (prop in b) {\n        // noinspection JSUnfilteredForInLoop\n        if (!exports.deepEqual(a[prop], b[prop])) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return a === b;\n    }\n  };\n  /**\n   * Test whether the current JavaScript engine supports Object.defineProperty\n   * @returns {boolean} returns true if supported\n   */\n\n\n  exports.canDefineProperty = function () {\n    // test needed for broken IE8 implementation\n    try {\n      if (Object.defineProperty) {\n        Object.defineProperty({}, 'x', {\n          get: function get() {}\n        });\n        return true;\n      }\n    } catch (e) {}\n\n    return false;\n  };\n  /**\n   * Attach a lazy loading property to a constant.\n   * The given function `fn` is called once when the property is first requested.\n   * On older browsers (<IE8), the function will fall back to direct evaluation\n   * of the properties value.\n   * @param {Object} object   Object where to add the property\n   * @param {string} prop     Property name\n   * @param {Function} fn     Function returning the property value. Called\n   *                          without arguments.\n   */\n\n\n  exports.lazy = function (object, prop, fn) {\n    if (exports.canDefineProperty()) {\n      var _uninitialized = true;\n\n      var _value;\n\n      Object.defineProperty(object, prop, {\n        get: function get() {\n          if (_uninitialized) {\n            _value = fn();\n            _uninitialized = false;\n          }\n\n          return _value;\n        },\n        set: function set(value) {\n          _value = value;\n          _uninitialized = false;\n        },\n        configurable: true,\n        enumerable: true\n      });\n    } else {\n      // fall back to immediate evaluation\n      object[prop] = fn();\n    }\n  };\n  /**\n   * Traverse a path into an object.\n   * When a namespace is missing, it will be created\n   * @param {Object} object\n   * @param {string} path   A dot separated string like 'name.space'\n   * @return {Object} Returns the object at the end of the path\n   */\n\n\n  exports.traverse = function (object, path) {\n    var obj = object;\n\n    if (path) {\n      var names = path.split('.');\n\n      for (var i = 0; i < names.length; i++) {\n        var name = names[i];\n\n        if (!(name in obj)) {\n          obj[name] = {};\n        }\n\n        obj = obj[name];\n      }\n    }\n\n    return obj;\n  };\n  /**\n   * A safe hasOwnProperty\n   * @param {Object} object\n   * @param {string} property\n   */\n\n\n  exports.hasOwnProperty = function (object, property) {\n    return object && Object.hasOwnProperty.call(object, property);\n  };\n  /**\n   * Test whether an object is a factory. a factory has fields:\n   *\n   * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n   * - name: string (optional)\n   * - path: string    A dot separated path (optional)\n   * - math: boolean   If true (false by default), the math namespace is passed\n   *                   as fifth argument of the factory function\n   *\n   * @param {*} object\n   * @returns {boolean}\n   */\n\n\n  exports.isFactory = function (object) {\n    return object && typeof object.factory === 'function';\n  };\n  });\n  var object_1 = object.clone;\n  var object_2 = object.map;\n  var object_3 = object.extend;\n  var object_4 = object.deepExtend;\n  var object_5 = object.deepEqual;\n  var object_6 = object.canDefineProperty;\n  var object_7 = object.lazy;\n  var object_8 = object.traverse;\n  var object_9 = object.isFactory;\n\n  var typedFunction = createCommonjsModule(function (module, exports) {\n\n  (function (root, factory) {\n    {\n      // OldNode. Does not work with strict CommonJS, but\n      // only CommonJS-like environments that support module.exports,\n      // like OldNode.\n      module.exports = factory();\n    }\n  }(commonjsGlobal, function () {\n\n    function ok () {\n      return true;\n    }\n\n    function notOk () {\n      return false;\n    }\n\n    function undef () {\n      return undefined;\n    }\n\n    /**\n     * @typedef {{\n     *   params: Param[],\n     *   fn: function\n     * }} Signature\n     *\n     * @typedef {{\n     *   types: Type[],\n     *   restParam: boolean\n     * }} Param\n     *\n     * @typedef {{\n     *   name: string,\n     *   typeIndex: number,\n     *   test: function,\n     *   conversion?: ConversionDef,\n     *   conversionIndex: number,\n     * }} Type\n     *\n     * @typedef {{\n     *   from: string,\n     *   to: string,\n     *   convert: function (*) : *\n     * }} ConversionDef\n     *\n     * @typedef {{\n     *   name: string,\n     *   test: function(*) : boolean\n     * }} TypeDef\n     */\n\n    // create a new instance of typed-function\n    function create () {\n      // data type tests\n      var _types = [\n        { name: 'number',    test: function (x) { return typeof x === 'number' } },\n        { name: 'string',    test: function (x) { return typeof x === 'string' } },\n        { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n        { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n        { name: 'Array',     test: Array.isArray },\n        { name: 'Date',      test: function (x) { return x instanceof Date } },\n        { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n        { name: 'Object',    test: function (x) {\n          return typeof x === 'object' && x.constructor === Object\n        }},\n        { name: 'null',      test: function (x) { return x === null } },\n        { name: 'undefined', test: function (x) { return x === undefined } }\n      ];\n\n      var anyType = {\n        name: 'any',\n        test: ok\n      };\n\n      // types which need to be ignored\n      var _ignore = [];\n\n      // type conversions\n      var _conversions = [];\n\n      // This is a temporary object, will be replaced with a typed function at the end\n      var typed = {\n        types: _types,\n        conversions: _conversions,\n        ignore: _ignore\n      };\n\n      /**\n       * Find the test function for a type\n       * @param {String} typeName\n       * @return {TypeDef} Returns the type definition when found,\n       *                    Throws a TypeError otherwise\n       */\n      function findTypeByName (typeName) {\n        var entry = findInArray(typed.types, function (entry) {\n          return entry.name === typeName;\n        });\n\n        if (entry) {\n          return entry;\n        }\n\n        if (typeName === 'any') { // special baked-in case 'any'\n          return anyType;\n        }\n\n        var hint = findInArray(typed.types, function (entry) {\n          return entry.name.toLowerCase() === typeName.toLowerCase();\n        });\n\n        throw new TypeError('Unknown type \"' + typeName + '\"' +\n            (hint ? ('. Did you mean \"' + hint.name + '\"?') : ''));\n      }\n\n      /**\n       * Find the index of a type definition. Handles special case 'any'\n       * @param {TypeDef} type\n       * @return {number}\n       */\n      function findTypeIndex(type) {\n        if (type === anyType) {\n          return 999;\n        }\n\n        return typed.types.indexOf(type);\n      }\n\n      /**\n       * Find a type that matches a value.\n       * @param {*} value\n       * @return {string} Returns the name of the first type for which\n       *                  the type test matches the value.\n       */\n      function findTypeName(value) {\n        var entry = findInArray(typed.types, function (entry) {\n          return entry.test(value);\n        });\n\n        if (entry) {\n          return entry.name;\n        }\n\n        throw new TypeError('Value has unknown type. Value: ' + value);\n      }\n\n      /**\n       * Find a specific signature from a (composed) typed function, for example:\n       *\n       *   typed.find(fn, ['number', 'string'])\n       *   typed.find(fn, 'number, string')\n       *\n       * Function find only only works for exact matches.\n       *\n       * @param {Function} fn                   A typed-function\n       * @param {string | string[]} signature   Signature to be found, can be\n       *                                        an array or a comma separated string.\n       * @return {Function}                     Returns the matching signature, or\n       *                                        throws an error when no signature\n       *                                        is found.\n       */\n      function find (fn, signature) {\n        if (!fn.signatures) {\n          throw new TypeError('Function is no typed-function');\n        }\n\n        // normalize input\n        var arr;\n        if (typeof signature === 'string') {\n          arr = signature.split(',');\n          for (var i = 0; i < arr.length; i++) {\n            arr[i] = arr[i].trim();\n          }\n        }\n        else if (Array.isArray(signature)) {\n          arr = signature;\n        }\n        else {\n          throw new TypeError('String array or a comma separated string expected');\n        }\n\n        var str = arr.join(',');\n\n        // find an exact match\n        var match = fn.signatures[str];\n        if (match) {\n          return match;\n        }\n\n        // TODO: extend find to match non-exact signatures\n\n        throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n      }\n\n      /**\n       * Convert a given value to another data type.\n       * @param {*} value\n       * @param {string} type\n       */\n      function convert (value, type) {\n        var from = findTypeName(value);\n\n        // check conversion is needed\n        if (type === from) {\n          return value;\n        }\n\n        for (var i = 0; i < typed.conversions.length; i++) {\n          var conversion = typed.conversions[i];\n          if (conversion.from === from && conversion.to === type) {\n            return conversion.convert(value);\n          }\n        }\n\n        throw new Error('Cannot convert from ' + from + ' to ' + type);\n      }\n      \n      /**\n       * Stringify parameters in a normalized way\n       * @param {Param[]} params\n       * @return {string}\n       */\n      function stringifyParams (params) {\n        return params\n            .map(function (param) {\n              var typeNames = param.types.map(getTypeName);\n\n              return (param.restParam ? '...' : '') + typeNames.join('|');\n            })\n            .join(',');\n      }\n\n      /**\n       * Parse a parameter, like \"...number | boolean\"\n       * @param {string} param\n       * @param {ConversionDef[]} conversions\n       * @return {Param} param\n       */\n      function parseParam (param, conversions) {\n        var restParam = param.indexOf('...') === 0;\n        var types = (!restParam)\n            ? param\n            : (param.length > 3)\n                ? param.slice(3)\n                : 'any';\n\n        var typeNames = types.split('|').map(trim)\n            .filter(notEmpty)\n            .filter(notIgnore);\n\n        var matchingConversions = filterConversions(conversions, typeNames);\n\n        var exactTypes = typeNames.map(function (typeName) {\n          var type = findTypeByName(typeName);\n\n          return {\n            name: typeName,\n            typeIndex: findTypeIndex(type),\n            test: type.test,\n            conversion: null,\n            conversionIndex: -1\n          };\n        });\n\n        var convertibleTypes = matchingConversions.map(function (conversion) {\n          var type = findTypeByName(conversion.from);\n\n          return {\n            name: conversion.from,\n            typeIndex: findTypeIndex(type),\n            test: type.test,\n            conversion: conversion,\n            conversionIndex: conversions.indexOf(conversion)\n          };\n        });\n\n        return {\n          types: exactTypes.concat(convertibleTypes),\n          restParam: restParam\n        };\n      }\n\n      /**\n       * Parse a signature with comma separated parameters,\n       * like \"number | boolean, ...string\"\n       * @param {string} signature\n       * @param {function} fn\n       * @param {ConversionDef[]} conversions\n       * @return {Signature | null} signature\n       */\n      function parseSignature (signature, fn, conversions) {\n        var params = [];\n\n        if (signature.trim() !== '') {\n          params = signature\n              .split(',')\n              .map(trim)\n              .map(function (param, index, array) {\n                var parsedParam = parseParam(param, conversions);\n\n                if (parsedParam.restParam && (index !== array.length - 1)) {\n                  throw new SyntaxError('Unexpected rest parameter \"' + param + '\": ' +\n                      'only allowed for the last parameter');\n                }\n\n                return parsedParam;\n            });\n        }\n\n        if (params.some(isInvalidParam)) {\n          // invalid signature: at least one parameter has no types\n          // (they may have been filtered)\n          return null;\n        }\n\n        return {\n          params: params,\n          fn: fn\n        };\n      }\n\n      /**\n       * Test whether a set of params contains a restParam\n       * @param {Param[]} params\n       * @return {boolean} Returns true when the last parameter is a restParam\n       */\n      function hasRestParam(params) {\n        var param = last(params);\n        return param ? param.restParam : false;\n      }\n\n      /**\n       * Test whether a parameter contains conversions\n       * @param {Param} param\n       * @return {boolean} Returns true when at least one of the parameters\n       *                   contains a conversion.\n       */\n      function hasConversions(param) {\n        return param.types.some(function (type) {\n          return type.conversion != null;\n        });\n      }\n\n      /**\n       * Create a type test for a single parameter, which can have one or multiple\n       * types.\n       * @param {Param} param\n       * @return {function(x: *) : boolean} Returns a test function\n       */\n      function compileTest(param) {\n        if (!param || param.types.length === 0) {\n          // nothing to do\n          return ok;\n        }\n        else if (param.types.length === 1) {\n          return findTypeByName(param.types[0].name).test;\n        }\n        else if (param.types.length === 2) {\n          var test0 = findTypeByName(param.types[0].name).test;\n          var test1 = findTypeByName(param.types[1].name).test;\n          return function or(x) {\n            return test0(x) || test1(x);\n          }\n        }\n        else { // param.types.length > 2\n          var tests = param.types.map(function (type) {\n            return findTypeByName(type.name).test;\n          });\n          return function or(x) {\n            for (var i = 0; i < tests.length; i++) {\n              if (tests[i](x)) {\n                return true;\n              }\n            }\n            return false;\n          }\n        }\n      }\n\n      /**\n       * Create a test for all parameters of a signature\n       * @param {Param[]} params\n       * @return {function(args: Array<*>) : boolean}\n       */\n      function compileTests(params) {\n        var tests, test0, test1;\n\n        if (hasRestParam(params)) {\n          // variable arguments like '...number'\n          tests = initial(params).map(compileTest);\n          var varIndex = tests.length;\n          var lastTest = compileTest(last(params));\n          var testRestParam = function (args) {\n            for (var i = varIndex; i < args.length; i++) {\n              if (!lastTest(args[i])) {\n                return false;\n              }\n            }\n            return true;\n          };\n\n          return function testArgs(args) {\n            for (var i = 0; i < tests.length; i++) {\n              if (!tests[i](args[i])) {\n                return false;\n              }\n            }\n            return testRestParam(args) && (args.length >= varIndex + 1);\n          };\n        }\n        else {\n          // no variable arguments\n          if (params.length === 0) {\n            return function testArgs(args) {\n              return args.length === 0;\n            };\n          }\n          else if (params.length === 1) {\n            test0 = compileTest(params[0]);\n            return function testArgs(args) {\n              return test0(args[0]) && args.length === 1;\n            };\n          }\n          else if (params.length === 2) {\n            test0 = compileTest(params[0]);\n            test1 = compileTest(params[1]);\n            return function testArgs(args) {\n              return test0(args[0]) && test1(args[1]) && args.length === 2;\n            };\n          }\n          else { // arguments.length > 2\n            tests = params.map(compileTest);\n            return function testArgs(args) {\n              for (var i = 0; i < tests.length; i++) {\n                if (!tests[i](args[i])) {\n                  return false;\n                }\n              }\n              return args.length === tests.length;\n            };\n          }\n        }\n      }\n\n      /**\n       * Find the parameter at a specific index of a signature.\n       * Handles rest parameters.\n       * @param {Signature} signature\n       * @param {number} index\n       * @return {Param | null} Returns the matching parameter when found,\n       *                        null otherwise.\n       */\n      function getParamAtIndex(signature, index) {\n        return index < signature.params.length\n            ? signature.params[index]\n            : hasRestParam(signature.params)\n                ? last(signature.params)\n                : null\n      }\n\n      /**\n       * Get all type names of a parameter\n       * @param {Signature} signature\n       * @param {number} index\n       * @param {boolean} excludeConversions\n       * @return {string[]} Returns an array with type names\n       */\n      function getExpectedTypeNames (signature, index, excludeConversions) {\n        var param = getParamAtIndex(signature, index);\n        var types = param\n            ? excludeConversions\n                    ? param.types.filter(isExactType)\n                    : param.types\n            : [];\n\n        return types.map(getTypeName);\n      }\n\n      /**\n       * Returns the name of a type\n       * @param {Type} type\n       * @return {string} Returns the type name\n       */\n      function getTypeName(type) {\n        return type.name;\n      }\n\n      /**\n       * Test whether a type is an exact type or conversion\n       * @param {Type} type\n       * @return {boolean} Returns true when\n       */\n      function isExactType(type) {\n        return type.conversion === null || type.conversion === undefined;\n      }\n\n      /**\n       * Helper function for creating error messages: create an array with\n       * all available types on a specific argument index.\n       * @param {Signature[]} signatures\n       * @param {number} index\n       * @return {string[]} Returns an array with available types\n       */\n      function mergeExpectedParams(signatures, index) {\n        var typeNames = uniq(flatMap(signatures, function (signature) {\n          return getExpectedTypeNames(signature, index, false);\n        }));\n\n        return (typeNames.indexOf('any') !== -1) ? ['any'] : typeNames;\n      }\n\n      /**\n       * Create\n       * @param {string} name             The name of the function\n       * @param {array.<*>} args          The actual arguments passed to the function\n       * @param {Signature[]} signatures  A list with available signatures\n       * @return {TypeError} Returns a type error with additional data\n       *                     attached to it in the property `data`\n       */\n      function createError(name, args, signatures) {\n        var err, expected;\n        var _name = name || 'unnamed';\n\n        // test for wrong type at some index\n        var matchingSignatures = signatures;\n        var index;\n        for (index = 0; index < args.length; index++) {\n          var nextMatchingDefs = matchingSignatures.filter(function (signature) {\n            var test = compileTest(getParamAtIndex(signature, index));\n            return (index < signature.params.length || hasRestParam(signature.params)) &&\n                test(args[index]);\n          });\n\n          if (nextMatchingDefs.length === 0) {\n            // no matching signatures anymore, throw error \"wrong type\"\n            expected = mergeExpectedParams(matchingSignatures, index);\n            if (expected.length > 0) {\n              var actualType = findTypeName(args[index]);\n\n              err = new TypeError('Unexpected type of argument in function ' + _name +\n                  ' (expected: ' + expected.join(' or ') +\n                  ', actual: ' + actualType + ', index: ' + index + ')');\n              err.data = {\n                category: 'wrongType',\n                fn: _name,\n                index: index,\n                actual: actualType,\n                expected: expected\n              };\n              return err;\n            }\n          }\n          else {\n            matchingSignatures = nextMatchingDefs;\n          }\n        }\n\n        // test for too few arguments\n        var lengths = matchingSignatures.map(function (signature) {\n          return hasRestParam(signature.params) ? Infinity : signature.params.length;\n        });\n        if (args.length < Math.min.apply(null, lengths)) {\n          expected = mergeExpectedParams(matchingSignatures, index);\n          err = new TypeError('Too few arguments in function ' + _name +\n              ' (expected: ' + expected.join(' or ') +\n              ', index: ' + args.length + ')');\n          err.data = {\n            category: 'tooFewArgs',\n            fn: _name,\n            index: args.length,\n            expected: expected\n          };\n          return err;\n        }\n\n        // test for too many arguments\n        var maxLength = Math.max.apply(null, lengths);\n        if (args.length > maxLength) {\n          err = new TypeError('Too many arguments in function ' + _name +\n              ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n          err.data = {\n            category: 'tooManyArgs',\n            fn: _name,\n            index: args.length,\n            expectedLength: maxLength\n          };\n          return err;\n        }\n\n        err = new TypeError('Arguments of type \"' + args.join(', ') +\n            '\" do not match any of the defined signatures of function ' + _name + '.');\n        err.data = {\n          category: 'mismatch',\n          actual: args.map(findTypeName)\n        };\n        return err;\n      }\n\n      /**\n       * Find the lowest index of all exact types of a parameter (no conversions)\n       * @param {Param} param\n       * @return {number} Returns the index of the lowest type in typed.types\n       */\n      function getLowestTypeIndex (param) {\n        var min = 999;\n\n        for (var i = 0; i < param.types.length; i++) {\n          if (isExactType(param.types[i])) {\n            min = Math.min(min, param.types[i].typeIndex);\n          }\n        }\n\n        return min;\n      }\n\n      /**\n       * Find the lowest index of the conversion of all types of the parameter\n       * having a conversion\n       * @param {Param} param\n       * @return {number} Returns the lowest index of the conversions of this type\n       */\n      function getLowestConversionIndex (param) {\n        var min = 999;\n\n        for (var i = 0; i < param.types.length; i++) {\n          if (!isExactType(param.types[i])) {\n            min = Math.min(min, param.types[i].conversionIndex);\n          }\n        }\n\n        return min;\n      }\n\n      /**\n       * Compare two params\n       * @param {Param} param1\n       * @param {Param} param2\n       * @return {number} returns a negative number when param1 must get a lower\n       *                  index than param2, a positive number when the opposite,\n       *                  or zero when both are equal\n       */\n      function compareParams (param1, param2) {\n        var c;\n\n        // compare having a rest parameter or not\n        c = param1.restParam - param2.restParam;\n        if (c !== 0) {\n          return c;\n        }\n\n        // compare having conversions or not\n        c = hasConversions(param1) - hasConversions(param2);\n        if (c !== 0) {\n          return c;\n        }\n\n        // compare the index of the types\n        c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n        if (c !== 0) {\n          return c;\n        }\n\n        // compare the index of any conversion\n        return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n      }\n\n      /**\n       * Compare two signatures\n       * @param {Signature} signature1\n       * @param {Signature} signature2\n       * @return {number} returns a negative number when param1 must get a lower\n       *                  index than param2, a positive number when the opposite,\n       *                  or zero when both are equal\n       */\n      function compareSignatures (signature1, signature2) {\n        var len = Math.min(signature1.params.length, signature2.params.length);\n        var i;\n        var c;\n\n        // compare whether the params have conversions at all or not\n        c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions);\n        if (c !== 0) {\n          return c;\n        }\n\n        // next compare whether the params have conversions one by one\n        for (i = 0; i < len; i++) {\n          c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);\n          if (c !== 0) {\n            return c;\n          }\n        }\n\n        // compare the types of the params one by one\n        for (i = 0; i < len; i++) {\n          c = compareParams(signature1.params[i], signature2.params[i]);\n          if (c !== 0) {\n            return c;\n          }\n        }\n\n        // compare the number of params\n        return signature1.params.length - signature2.params.length;\n      }\n\n      /**\n       * Get params containing all types that can be converted to the defined types.\n       *\n       * @param {ConversionDef[]} conversions\n       * @param {string[]} typeNames\n       * @return {ConversionDef[]} Returns the conversions that are available\n       *                        for every type (if any)\n       */\n      function filterConversions(conversions, typeNames) {\n        var matches = {};\n\n        conversions.forEach(function (conversion) {\n          if (typeNames.indexOf(conversion.from) === -1 &&\n              typeNames.indexOf(conversion.to) !== -1 &&\n              !matches[conversion.from]) {\n            matches[conversion.from] = conversion;\n          }\n        });\n\n        return Object.keys(matches).map(function (from) {\n          return matches[from];\n        });\n      }\n\n      /**\n       * Preprocess arguments before calling the original function:\n       * - if needed convert the parameters\n       * - in case of rest parameters, move the rest parameters into an Array\n       * @param {Param[]} params\n       * @param {function} fn\n       * @return {function} Returns a wrapped function\n       */\n      function compileArgsPreprocessing(params, fn) {\n        var fnConvert = fn;\n\n        // TODO: can we make this wrapper function smarter/simpler?\n\n        if (params.some(hasConversions)) {\n          var restParam = hasRestParam(params);\n          var compiledConversions = params.map(compileArgConversion);\n\n          fnConvert = function convertArgs() {\n            var args = [];\n            var last = restParam ? arguments.length - 1 : arguments.length;\n            for (var i = 0; i < last; i++) {\n              args[i] = compiledConversions[i](arguments[i]);\n            }\n            if (restParam) {\n              args[last] = arguments[last].map(compiledConversions[last]);\n            }\n\n            return fn.apply(null, args);\n          };\n        }\n\n        var fnPreprocess = fnConvert;\n        if (hasRestParam(params)) {\n          var offset = params.length - 1;\n\n          fnPreprocess = function preprocessRestParams () {\n            return fnConvert.apply(null,\n                slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n          };\n        }\n\n        return fnPreprocess;\n      }\n\n      /**\n       * Compile conversion for a parameter to the right type\n       * @param {Param} param\n       * @return {function} Returns the wrapped function that will convert arguments\n       *\n       */\n      function compileArgConversion(param) {\n        var test0, test1, conversion0, conversion1;\n        var tests = [];\n        var conversions = [];\n\n        param.types.forEach(function (type) {\n          if (type.conversion) {\n            tests.push(findTypeByName(type.conversion.from).test);\n            conversions.push(type.conversion.convert);\n          }\n        });\n\n        // create optimized conversion functions depending on the number of conversions\n        switch (conversions.length) {\n          case 0:\n            return function convertArg(arg) {\n              return arg;\n            }\n\n          case 1:\n            test0 = tests[0];\n            conversion0 = conversions[0];\n            return function convertArg(arg) {\n              if (test0(arg)) {\n                return conversion0(arg)\n              }\n              return arg;\n            }\n\n          case 2:\n            test0 = tests[0];\n            test1 = tests[1];\n            conversion0 = conversions[0];\n            conversion1 = conversions[1];\n            return function convertArg(arg) {\n              if (test0(arg)) {\n                return conversion0(arg)\n              }\n              if (test1(arg)) {\n                return conversion1(arg)\n              }\n              return arg;\n            }\n\n          default:\n            return function convertArg(arg) {\n              for (var i = 0; i < conversions.length; i++) {\n                if (tests[i](arg)) {\n                  return conversions[i](arg);\n                }\n              }\n              return arg;\n            }\n        }\n      }\n\n      /**\n       * Convert an array with signatures into a map with signatures,\n       * where signatures with union types are split into separate signatures\n       *\n       * Throws an error when there are conflicting types\n       *\n       * @param {Signature[]} signatures\n       * @return {Object.<string, function>}  Returns a map with signatures\n       *                                      as key and the original function\n       *                                      of this signature as value.\n       */\n      function createSignaturesMap(signatures) {\n        var signaturesMap = {};\n        signatures.forEach(function (signature) {\n          if (!signature.params.some(hasConversions)) {\n            splitParams(signature.params, true).forEach(function (params) {\n              signaturesMap[stringifyParams(params)] = signature.fn;\n            });\n          }\n        });\n\n        return signaturesMap;\n      }\n\n      /**\n       * Split params with union types in to separate params.\n       *\n       * For example:\n       *\n       *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n       *     // returns:\n       *     // [\n       *     //   ['Array', 'string'],\n       *     //   ['Array', 'RegExp'],\n       *     //   ['Object', 'string'],\n       *     //   ['Object', 'RegExp']\n       *     // ]\n       *\n       * @param {Param[]} params\n       * @param {boolean} ignoreConversionTypes\n       * @return {Param[]}\n       */\n      function splitParams(params, ignoreConversionTypes) {\n        function _splitParams(params, index, types) {\n          if (index < params.length) {\n            var param = params[index];\n            var filteredTypes = ignoreConversionTypes\n                ? param.types.filter(isExactType)\n                : param.types;\n            var typeGroups;\n\n            if (param.restParam) {\n              // split the types of a rest parameter in two:\n              // one with only exact types, and one with exact types and conversions\n              var exactTypes = filteredTypes.filter(isExactType);\n              typeGroups = exactTypes.length < filteredTypes.length\n                  ? [exactTypes, filteredTypes]\n                  : [filteredTypes];\n\n            }\n            else {\n              // split all the types of a regular parameter into one type per group\n              typeGroups = filteredTypes.map(function (type) {\n                return [type]\n              });\n            }\n\n            // recurse over the groups with types\n            return flatMap(typeGroups, function (typeGroup) {\n              return _splitParams(params, index + 1, types.concat([typeGroup]));\n            });\n\n          }\n          else {\n            // we've reached the end of the parameters. Now build a new Param\n            var splittedParams = types.map(function (type, typeIndex) {\n              return {\n                types: type,\n                restParam: (typeIndex === params.length - 1) && hasRestParam(params)\n              }\n            });\n\n            return [splittedParams];\n          }\n        }\n\n        return _splitParams(params, 0, []);\n      }\n\n      /**\n       * Test whether two signatures have a conflicting signature\n       * @param {Signature} signature1\n       * @param {Signature} signature2\n       * @return {boolean} Returns true when the signatures conflict, false otherwise.\n       */\n      function hasConflictingParams(signature1, signature2) {\n        var ii = Math.max(signature1.params.length, signature2.params.length);\n\n        for (var i = 0; i < ii; i++) {\n          var typesNames1 = getExpectedTypeNames(signature1, i, true);\n          var typesNames2 = getExpectedTypeNames(signature2, i, true);\n\n          if (!hasOverlap(typesNames1, typesNames2)) {\n            return false;\n          }\n        }\n\n        var len1 = signature1.params.length;\n        var len2 = signature2.params.length;\n        var restParam1 = hasRestParam(signature1.params);\n        var restParam2 = hasRestParam(signature2.params);\n\n        return restParam1\n            ? restParam2 ? (len1 === len2) : (len2 >= len1)\n            : restParam2 ? (len1 >= len2)  : (len1 === len2)\n      }\n\n      /**\n       * Create a typed function\n       * @param {String} name               The name for the typed function\n       * @param {Object.<string, function>} signaturesMap\n       *                                    An object with one or\n       *                                    multiple signatures as key, and the\n       *                                    function corresponding to the\n       *                                    signature as value.\n       * @return {function}  Returns the created typed function.\n       */\n      function createTypedFunction(name, signaturesMap) {\n        if (Object.keys(signaturesMap).length === 0) {\n          throw new SyntaxError('No signatures provided');\n        }\n\n        // parse the signatures, and check for conflicts\n        var parsedSignatures = [];\n        Object.keys(signaturesMap)\n            .map(function (signature) {\n              return parseSignature(signature, signaturesMap[signature], typed.conversions);\n            })\n            .filter(notNull)\n            .forEach(function (parsedSignature) {\n              // check whether this parameter conflicts with already parsed signatures\n              var conflictingSignature = findInArray(parsedSignatures, function (s) {\n                return hasConflictingParams(s, parsedSignature)\n              });\n              if (conflictingSignature) {\n                throw new TypeError('Conflicting signatures \"' +\n                    stringifyParams(conflictingSignature.params) + '\" and \"' +\n                    stringifyParams(parsedSignature.params) + '\".');\n              }\n\n              parsedSignatures.push(parsedSignature);\n            });\n\n        // split and filter the types of the signatures, and then order them\n        var signatures = flatMap(parsedSignatures, function (parsedSignature) {\n          var params = parsedSignature ? splitParams(parsedSignature.params, false) : [];\n\n          return params.map(function (params) {\n            return {\n              params: params,\n              fn: parsedSignature.fn\n            };\n          });\n        }).filter(notNull);\n\n        signatures.sort(compareSignatures);\n\n        // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n        var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n        var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n        var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n        var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n        var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n        var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n        var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;\n\n        // compile the tests\n        var tests = signatures.map(function (signature) {\n          return compileTests(signature.params);\n        });\n\n        var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n        var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n        var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n        var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n        var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n        var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n\n        var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n        var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n        var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n        var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n        var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n        var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;\n\n        // compile the functions\n        var fns = signatures.map(function(signature) {\n          return compileArgsPreprocessing(signature.params, signature.fn)\n        });\n\n        var fn0 = ok0 ? fns[0] : undef;\n        var fn1 = ok1 ? fns[1] : undef;\n        var fn2 = ok2 ? fns[2] : undef;\n        var fn3 = ok3 ? fns[3] : undef;\n        var fn4 = ok4 ? fns[4] : undef;\n        var fn5 = ok5 ? fns[5] : undef;\n\n        var len0 = ok0 ? signatures[0].params.length : -1;\n        var len1 = ok1 ? signatures[1].params.length : -1;\n        var len2 = ok2 ? signatures[2].params.length : -1;\n        var len3 = ok3 ? signatures[3].params.length : -1;\n        var len4 = ok4 ? signatures[4].params.length : -1;\n        var len5 = ok5 ? signatures[5].params.length : -1;\n\n        // simple and generic, but also slow\n        var iStart = allOk ? 6 : 0;\n        var iEnd = signatures.length;\n        var generic = function generic() {\n\n          for (var i = iStart; i < iEnd; i++) {\n            if (tests[i](arguments)) {\n              return fns[i].apply(null, arguments);\n            }\n          }\n\n          throw createError(name, arguments, signatures);\n        };\n\n        // create the typed function\n        // fast, specialized version. Falls back to the slower, generic one if needed\n        var fn = function fn(arg0, arg1) {\n\n          if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(null, arguments); }\n          if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(null, arguments); }\n          if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(null, arguments); }\n          if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(null, arguments); }\n          if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(null, arguments); }\n          if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(null, arguments); }\n\n          return generic.apply(null, arguments);\n        };\n\n        // attach name the typed function\n        try {\n          Object.defineProperty(fn, 'name', {value: name});\n        }\n        catch (err) {\n          // old browsers do not support Object.defineProperty and some don't support setting the name property\n          // the function name is not essential for the functioning, it's mostly useful for debugging,\n          // so it's fine to have unnamed functions.\n        }\n\n        // attach signatures to the function\n        fn.signatures = createSignaturesMap(signatures);\n\n        return fn;\n      }\n\n      /**\n       * Test whether a type should be NOT be ignored\n       * @param {string} typeName\n       * @return {boolean}\n       */\n      function notIgnore(typeName) {\n        return typed.ignore.indexOf(typeName) === -1;\n      }\n\n      /**\n       * trim a string\n       * @param {string} str\n       * @return {string}\n       */\n      function trim(str) {\n        return str.trim();\n      }\n\n      /**\n       * Test whether a string is not empty\n       * @param {string} str\n       * @return {boolean}\n       */\n      function notEmpty(str) {\n        return !!str;\n      }\n\n      /**\n       * test whether a value is not strict equal to null\n       * @param {*} value\n       * @return {boolean}\n       */\n      function notNull(value) {\n        return value !== null;\n      }\n\n      /**\n       * Test whether a parameter has no types defined\n       * @param {Param} param\n       * @return {boolean}\n       */\n      function isInvalidParam (param) {\n        return param.types.length === 0;\n      }\n\n      /**\n       * Return all but the last items of an array\n       * @param {Array} arr\n       * @return {Array}\n       */\n      function initial(arr) {\n        return arr.slice(0, arr.length - 1);\n      }\n\n      /**\n       * return the last item of an array\n       * @param {Array} arr\n       * @return {*}\n       */\n      function last(arr) {\n        return arr[arr.length - 1];\n      }\n\n      /**\n       * Slice an array or function Arguments\n       * @param {Array | Arguments | IArguments} arr\n       * @param {number} start\n       * @param {number} [end]\n       * @return {Array}\n       */\n      function slice(arr, start, end) {\n        return Array.prototype.slice.call(arr, start, end);\n      }\n\n      /**\n       * Test whether an array contains some item\n       * @param {Array} array\n       * @param {*} item\n       * @return {boolean} Returns true if array contains item, false if not.\n       */\n      function contains(array, item) {\n        return array.indexOf(item) !== -1;\n      }\n\n      /**\n       * Test whether two arrays have overlapping items\n       * @param {Array} array1\n       * @param {Array} array2\n       * @return {boolean} Returns true when at least one item exists in both arrays\n       */\n      function hasOverlap(array1, array2) {\n        for (var i = 0; i < array1.length; i++) {\n          if (contains(array2, array1[i])) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      /**\n       * Return the first item from an array for which test(arr[i]) returns true\n       * @param {Array} arr\n       * @param {function} test\n       * @return {* | undefined} Returns the first matching item\n       *                         or undefined when there is no match\n       */\n      function findInArray(arr, test) {\n        for (var i = 0; i < arr.length; i++) {\n          if (test(arr[i])) {\n            return arr[i];\n          }\n        }\n        return undefined;\n      }\n\n      /**\n       * Filter unique items of an array with strings\n       * @param {string[]} arr\n       * @return {string[]}\n       */\n      function uniq(arr) {\n        var entries = {};\n        for (var i = 0; i < arr.length; i++) {\n          entries[arr[i]] = true;\n        }\n        return Object.keys(entries);\n      }\n\n      /**\n       * Flat map the result invoking a callback for every item in an array.\n       * https://gist.github.com/samgiles/762ee337dff48623e729\n       * @param {Array} arr\n       * @param {function} callback\n       * @return {Array}\n       */\n      function flatMap(arr, callback) {\n        return Array.prototype.concat.apply([], arr.map(callback));\n      }\n\n      /**\n       * Retrieve the function name from a set of typed functions,\n       * and check whether the name of all functions match (if given)\n       * @param {function[]} fns\n       */\n      function getName (fns) {\n        var name = '';\n\n        for (var i = 0; i < fns.length; i++) {\n          var fn = fns[i];\n\n          // check whether the names are the same when defined\n          if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {\n            if (name === '') {\n              name = fn.name;\n            }\n            else if (name !== fn.name) {\n              var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n              err.data = {\n                actual: fn.name,\n                expected: name\n              };\n              throw err;\n            }\n          }\n        }\n\n        return name;\n      }\n\n      // extract and merge all signatures of a list with typed functions\n      function extractSignatures(fns) {\n        var err;\n        var signaturesMap = {};\n\n        function validateUnique(_signature, _fn) {\n          if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {\n            err = new Error('Signature \"' + _signature + '\" is defined twice');\n            err.data = {signature: _signature};\n            throw err;\n            // else: both signatures point to the same function, that's fine\n          }\n        }\n\n        for (var i = 0; i < fns.length; i++) {\n          var fn = fns[i];\n\n          // test whether this is a typed-function\n          if (typeof fn.signatures === 'object') {\n            // merge the signatures\n            for (var signature in fn.signatures) {\n              if (fn.signatures.hasOwnProperty(signature)) {\n                validateUnique(signature, fn.signatures[signature]);\n                signaturesMap[signature] = fn.signatures[signature];\n              }\n            }\n          }\n          else if (typeof fn.signature === 'string') {\n            validateUnique(fn.signature, fn);\n            signaturesMap[fn.signature] = fn;\n          }\n          else {\n            err = new TypeError('Function is no typed-function (index: ' + i + ')');\n            err.data = {index: i};\n            throw err;\n          }\n        }\n\n        return signaturesMap;\n      }\n\n      typed = createTypedFunction('typed', {\n        'string, Object': createTypedFunction,\n        'Object': function (signaturesMap) {\n          // find existing name\n          var fns = [];\n          for (var signature in signaturesMap) {\n            if (signaturesMap.hasOwnProperty(signature)) {\n              fns.push(signaturesMap[signature]);\n            }\n          }\n          var name = getName(fns);\n          return createTypedFunction(name, signaturesMap);\n        },\n        '...Function': function (fns) {\n          return createTypedFunction(getName(fns), extractSignatures(fns));\n        },\n        'string, ...Function': function (name, fns) {\n          return createTypedFunction(name, extractSignatures(fns));\n        }\n      });\n\n      typed.create = create;\n      typed.types = _types;\n      typed.conversions = _conversions;\n      typed.ignore = _ignore;\n      typed.convert = convert;\n      typed.find = find;\n\n      /**\n       * add a type\n       * @param {{name: string, test: function}} type\n       * @param {boolean} [beforeObjectTest=true]\n       *                          If true, the new test will be inserted before\n       *                          the test with name 'Object' (if any), since\n       *                          tests for Object match Array and classes too.\n       */\n      typed.addType = function (type, beforeObjectTest) {\n        if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n          throw new TypeError('Object with properties {name: string, test: function} expected');\n        }\n\n        if (beforeObjectTest !== false) {\n          for (var i = 0; i < typed.types.length; i++) {\n            if (typed.types[i].name === 'Object') {\n              typed.types.splice(i, 0, type);\n              return\n            }\n          }\n        }\n\n        typed.types.push(type);\n      };\n\n      // add a conversion\n      typed.addConversion = function (conversion) {\n        if (!conversion\n            || typeof conversion.from !== 'string'\n            || typeof conversion.to !== 'string'\n            || typeof conversion.convert !== 'function') {\n          throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n        }\n\n        typed.conversions.push(conversion);\n      };\n\n      return typed;\n    }\n\n    return create();\n  }));\n  });\n\n  var number = createCommonjsModule(function (module, exports) {\n\n\n  /**\n   * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n   */\n\n  /**\n   * Test whether value is a number\n   * @param {*} value\n   * @return {boolean} isNumber\n   */\n\n\n  exports.isNumber = function (value) {\n    return typeof value === 'number';\n  };\n  /**\n   * Check if a number is integer\n   * @param {number | boolean} value\n   * @return {boolean} isInteger\n   */\n\n\n  exports.isInteger = function (value) {\n    if (typeof value === 'boolean') {\n      return true;\n    }\n\n    return isFinite(value) ? value === Math.round(value) : false; // Note: we use ==, not ===, as we can have Booleans as well\n  };\n  /**\n   * Calculate the sign of a number\n   * @param {number} x\n   * @returns {*}\n   */\n\n\n  exports.sign = Math.sign || function (x) {\n    if (x > 0) {\n      return 1;\n    } else if (x < 0) {\n      return -1;\n    } else {\n      return 0;\n    }\n  };\n  /**\n   * Convert a number to a formatted string representation.\n   *\n   * Syntax:\n   *\n   *    format(value)\n   *    format(value, options)\n   *    format(value, precision)\n   *    format(value, fn)\n   *\n   * Where:\n   *\n   *    {number} value   The value to be formatted\n   *    {Object} options An object with formatting options. Available options:\n   *                     {string} notation\n   *                         Number notation. Choose from:\n   *                         'fixed'          Always use regular number notation.\n   *                                          For example '123.40' and '14000000'\n   *                         'exponential'    Always use exponential notation.\n   *                                          For example '1.234e+2' and '1.4e+7'\n   *                         'engineering'    Always use engineering notation.\n   *                                          For example '123.4e+0' and '14.0e+6'\n   *                         'auto' (default) Regular number notation for numbers\n   *                                          having an absolute value between\n   *                                          `lowerExp` and `upperExp` bounds, and\n   *                                          uses exponential notation elsewhere.\n   *                                          Lower bound is included, upper bound\n   *                                          is excluded.\n   *                                          For example '123.4' and '1.4e7'.\n   *                     {number} precision   A number between 0 and 16 to round\n   *                                          the digits of the number.\n   *                                          In case of notations 'exponential',\n   *                                          'engineering', and 'auto',\n   *                                          `precision` defines the total\n   *                                          number of significant digits returned.\n   *                                          In case of notation 'fixed',\n   *                                          `precision` defines the number of\n   *                                          significant digits after the decimal\n   *                                          point.\n   *                                          `precision` is undefined by default,\n   *                                          not rounding any digits.\n   *                     {number} lowerExp    Exponent determining the lower boundary\n   *                                          for formatting a value with an exponent\n   *                                          when `notation='auto`.\n   *                                          Default value is `-3`.\n   *                     {number} upperExp    Exponent determining the upper boundary\n   *                                          for formatting a value with an exponent\n   *                                          when `notation='auto`.\n   *                                          Default value is `5`.\n   *    {Function} fn    A custom formatting function. Can be used to override the\n   *                     built-in notations. Function `fn` is called with `value` as\n   *                     parameter and must return a string. Is useful for example to\n   *                     format all values inside a matrix in a particular way.\n   *\n   * Examples:\n   *\n   *    format(6.4)                                        // '6.4'\n   *    format(1240000)                                    // '1.24e6'\n   *    format(1/3)                                        // '0.3333333333333333'\n   *    format(1/3, 3)                                     // '0.333'\n   *    format(21385, 2)                                   // '21000'\n   *    format(12.071, {notation: 'fixed'})                // '12'\n   *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n   *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n   *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n   *\n   * @param {number} value\n   * @param {Object | Function | number} [options]\n   * @return {string} str The formatted value\n   */\n\n\n  exports.format = function (value, options) {\n    if (typeof options === 'function') {\n      // handle format(value, fn)\n      return options(value);\n    } // handle special cases\n\n\n    if (value === Infinity) {\n      return 'Infinity';\n    } else if (value === -Infinity) {\n      return '-Infinity';\n    } else if (isNaN(value)) {\n      return 'NaN';\n    } // default values for options\n\n\n    var notation = 'auto';\n    var precision;\n\n    if (options) {\n      // determine notation from options\n      if (options.notation) {\n        notation = options.notation;\n      } // determine precision from options\n\n\n      if (exports.isNumber(options)) {\n        precision = options;\n      } else if (exports.isNumber(options.precision)) {\n        precision = options.precision;\n      }\n    } // handle the various notations\n\n\n    switch (notation) {\n      case 'fixed':\n        return exports.toFixed(value, precision);\n\n      case 'exponential':\n        return exports.toExponential(value, precision);\n\n      case 'engineering':\n        return exports.toEngineering(value, precision);\n\n      case 'auto':\n        // TODO: clean up some day. Deprecated since: 2018-01-24\n        // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n        if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n          var fixedOptions = object.map(options, function (x) {\n            return x;\n          });\n          fixedOptions.exponential = undefined;\n\n          if (options.exponential.lower !== undefined) {\n            fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10);\n          }\n\n          if (options.exponential.upper !== undefined) {\n            fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10);\n          }\n\n          console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' + '(minimum and maximum value) ' + 'are replaced with exponential.lowerExp and exponential.upperExp ' + '(minimum and maximum exponent) since version 4.0.0. ' + 'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions));\n          return exports.toPrecision(value, precision, fixedOptions);\n        }\n\n        return exports.toPrecision(value, precision, options && options) // remove trailing zeros after the decimal point\n        .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          var digits = arguments[2];\n          var e = arguments[4];\n          return digits !== '.' ? digits + e : e;\n        });\n\n      default:\n        throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n    }\n  };\n  /**\n   * Split a number into sign, coefficients, and exponent\n   * @param {number | string} value\n   * @return {SplitValue}\n   *              Returns an object containing sign, coefficients, and exponent\n   */\n\n\n  exports.splitNumber = function (value) {\n    // parse the input value\n    var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n\n    if (!match) {\n      throw new SyntaxError('Invalid number ' + value);\n    }\n\n    var sign = match[1];\n    var digits = match[2];\n    var exponent = parseFloat(match[4] || '0');\n    var dot = digits.indexOf('.');\n    exponent += dot !== -1 ? dot - 1 : digits.length - 1;\n    var coefficients = digits.replace('.', '') // remove the dot (must be removed before removing leading zeros)\n    .replace(/^0*/, function (zeros) {\n      // remove leading zeros, add their count to the exponent\n      exponent -= zeros.length;\n      return '';\n    }).replace(/0*$/, '') // remove trailing zeros\n    .split('').map(function (d) {\n      return parseInt(d);\n    });\n\n    if (coefficients.length === 0) {\n      coefficients.push(0);\n      exponent++;\n    }\n\n    return {\n      sign: sign,\n      coefficients: coefficients,\n      exponent: exponent\n    };\n  };\n  /**\n   * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n   * @param {number | string} value\n   * @param {number} [precision]        Optional number of significant figures to return.\n   */\n\n\n  exports.toEngineering = function (value, precision) {\n    if (isNaN(value) || !isFinite(value)) {\n      return String(value);\n    }\n\n    var rounded = exports.roundDigits(exports.splitNumber(value), precision);\n    var e = rounded.exponent;\n    var c = rounded.coefficients; // find nearest lower multiple of 3 for exponent\n\n    var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;\n\n    if (exports.isNumber(precision)) {\n      // add zeroes to give correct sig figs\n      if (precision > c.length) c = c.concat(zeros(precision - c.length));\n    } else {\n      // concatenate coefficients with necessary zeros\n      var significandsDiff = e >= 0 ? e : Math.abs(newExp); // add zeros if necessary (for ex: 1e+8)\n\n      if (c.length - 1 < significandsDiff) c = c.concat(zeros(significandsDiff - (c.length - 1)));\n    } // find difference in exponents\n\n\n    var expDiff = Math.abs(e - newExp);\n    var decimalIdx = 1; // push decimal index over by expDiff times\n\n    while (--expDiff >= 0) {\n      decimalIdx++;\n    } // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n    // otherwise concat with the rest of the coefficients\n\n\n    var decimals = c.slice(decimalIdx).join('');\n    var decimalVal = exports.isNumber(precision) && decimals.length || decimals.match(/[1-9]/) ? '.' + decimals : '';\n    var str = c.slice(0, decimalIdx).join('') + decimalVal + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n    return rounded.sign + str;\n  };\n  /**\n   * Format a number with fixed notation.\n   * @param {number | string} value\n   * @param {number} [precision=undefined]  Optional number of decimals after the\n   *                                        decimal point. null by default.\n   */\n\n\n  exports.toFixed = function (value, precision) {\n    if (isNaN(value) || !isFinite(value)) {\n      return String(value);\n    }\n\n    var splitValue = exports.splitNumber(value);\n    var rounded = typeof precision === 'number' ? exports.roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;\n    var c = rounded.coefficients;\n    var p = rounded.exponent + 1; // exponent may have changed\n    // append zeros if needed\n\n    var pp = p + (precision || 0);\n\n    if (c.length < pp) {\n      c = c.concat(zeros(pp - c.length));\n    } // prepend zeros if needed\n\n\n    if (p < 0) {\n      c = zeros(-p + 1).concat(c);\n      p = 1;\n    } // insert a dot if needed\n\n\n    if (p < c.length) {\n      c.splice(p, 0, p === 0 ? '0.' : '.');\n    }\n\n    return rounded.sign + c.join('');\n  };\n  /**\n   * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n   * @param {number | string} value\n   * @param {number} [precision]  Number of digits in formatted output.\n   *                              If not provided, the maximum available digits\n   *                              is used.\n   */\n\n\n  exports.toExponential = function (value, precision) {\n    if (isNaN(value) || !isFinite(value)) {\n      return String(value);\n    } // round if needed, else create a clone\n\n\n    var split = exports.splitNumber(value);\n    var rounded = precision ? exports.roundDigits(split, precision) : split;\n    var c = rounded.coefficients;\n    var e = rounded.exponent; // append zeros if needed\n\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    } // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n\n\n    var first = c.shift();\n    return rounded.sign + first + (c.length > 0 ? '.' + c.join('') : '') + 'e' + (e >= 0 ? '+' : '') + e;\n  };\n  /**\n   * Format a number with a certain precision\n   * @param {number | string} value\n   * @param {number} [precision=undefined] Optional number of digits.\n   * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n   *                                       By default:\n   *                                         lowerExp = -3 (incl)\n   *                                         upper = +5 (excl)\n   * @return {string}\n   */\n\n\n  exports.toPrecision = function (value, precision, options) {\n    if (isNaN(value) || !isFinite(value)) {\n      return String(value);\n    } // determine lower and upper bound for exponential notation.\n\n\n    var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n    var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5;\n    var split = exports.splitNumber(value);\n\n    if (split.exponent < lowerExp || split.exponent >= upperExp) {\n      // exponential notation\n      return exports.toExponential(value, precision);\n    } else {\n      var rounded = precision ? exports.roundDigits(split, precision) : split;\n      var c = rounded.coefficients;\n      var e = rounded.exponent; // append trailing zeros\n\n      if (c.length < precision) {\n        c = c.concat(zeros(precision - c.length));\n      } // append trailing zeros\n      // TODO: simplify the next statement\n\n\n      c = c.concat(zeros(e - c.length + 1 + (c.length < precision ? precision - c.length : 0))); // prepend zeros\n\n      c = zeros(-e).concat(c);\n      var dot = e > 0 ? e : 0;\n\n      if (dot < c.length - 1) {\n        c.splice(dot + 1, 0, '.');\n      }\n\n      return rounded.sign + c.join('');\n    }\n  };\n  /**\n   * Round the number of digits of a number *\n   * @param {SplitValue} split       A value split with .splitNumber(value)\n   * @param {number} precision  A positive integer\n   * @return {SplitValue}\n   *              Returns an object containing sign, coefficients, and exponent\n   *              with rounded digits\n   */\n\n\n  exports.roundDigits = function (split, precision) {\n    // create a clone\n    var rounded = {\n      sign: split.sign,\n      coefficients: split.coefficients,\n      exponent: split.exponent\n    };\n    var c = rounded.coefficients; // prepend zeros if needed\n\n    while (precision <= 0) {\n      c.unshift(0);\n      rounded.exponent++;\n      precision++;\n    }\n\n    if (c.length > precision) {\n      var removed = c.splice(precision, c.length - precision);\n\n      if (removed[0] >= 5) {\n        var i = precision - 1;\n        c[i]++;\n\n        while (c[i] === 10) {\n          c.pop();\n\n          if (i === 0) {\n            c.unshift(0);\n            rounded.exponent++;\n            i++;\n          }\n\n          i--;\n          c[i]++;\n        }\n      }\n    }\n\n    return rounded;\n  };\n  /**\n   * Create an array filled with zeros.\n   * @param {number} length\n   * @return {Array}\n   */\n\n\n  function zeros(length) {\n    var arr = [];\n\n    for (var i = 0; i < length; i++) {\n      arr.push(0);\n    }\n\n    return arr;\n  }\n  /**\n   * Count the number of significant digits of a number.\n   *\n   * For example:\n   *   2.34 returns 3\n   *   0.0034 returns 2\n   *   120.5e+30 returns 4\n   *\n   * @param {number} value\n   * @return {number} digits   Number of significant digits\n   */\n\n\n  exports.digits = function (value) {\n    return value.toExponential().replace(/e.*$/, '') // remove exponential notation\n    .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n    .length;\n  };\n  /**\n   * Minimum number added to one that makes the result different than one\n   */\n\n\n  exports.DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n  /**\n   * Compares two floating point numbers.\n   * @param {number} x          First value to compare\n   * @param {number} y          Second value to compare\n   * @param {number} [epsilon]  The maximum relative difference between x and y\n   *                            If epsilon is undefined or null, the function will\n   *                            test whether x and y are exactly equal.\n   * @return {boolean} whether the two numbers are nearly equal\n  */\n\n  exports.nearlyEqual = function (x, y, epsilon) {\n    // if epsilon is null or undefined, test whether x and y are exactly equal\n    if (epsilon === null || epsilon === undefined) {\n      return x === y;\n    }\n\n    if (x === y) {\n      return true;\n    } // NaN\n\n\n    if (isNaN(x) || isNaN(y)) {\n      return false;\n    } // at this point x and y should be finite\n\n\n    if (isFinite(x) && isFinite(y)) {\n      // check numbers are very close, needed when comparing numbers near zero\n      var diff = Math.abs(x - y);\n\n      if (diff < exports.DBL_EPSILON) {\n        return true;\n      } else {\n        // use relative error\n        return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n      }\n    } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n    return false;\n  };\n  });\n  var number_1 = number.isNumber;\n  var number_2 = number.isInteger;\n  var number_3 = number.sign;\n  var number_4 = number.format;\n  var number_5 = number.splitNumber;\n  var number_6 = number.toEngineering;\n  var number_7 = number.toFixed;\n  var number_8 = number.toExponential;\n  var number_9 = number.toPrecision;\n  var number_10 = number.roundDigits;\n  var number_11 = number.digits;\n  var number_12 = number.DBL_EPSILON;\n  var number_13 = number.nearlyEqual;\n\n  /**\n   * Test whether a value is a Matrix\n   * @param {*} x\n   * @returns {boolean} returns true with input is a Matrix\n   *                    (like a DenseMatrix or SparseMatrix)\n   */\n\n  var isMatrix = function isMatrix(x) {\n    return x && x.constructor.prototype.isMatrix || false;\n  };\n\n  function _typeof$1(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$1 = function _typeof(obj) { return typeof obj; }; } else { _typeof$1 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$1(obj); }\n\n\n\n  var digits = number.digits;\n\n\n\n   // returns a new instance of typed-function\n\n\n  var _createTyped = function createTyped() {\n    // initially, return the original instance of typed-function\n    // consecutively, return a new instance from typed.create.\n    _createTyped = typedFunction.create;\n    return typedFunction;\n  };\n  /**\n   * Factory function for creating a new typed instance\n   * @param {Object} type   Object with data types like Complex and BigNumber\n   * @returns {Function}\n   */\n\n\n  var create = function create(type) {\n    // TODO: typed-function must be able to silently ignore signatures with unknown data types\n    // type checks for all known types\n    //\n    // note that:\n    //\n    // - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n    //   instanceof cannot be used because that would not allow to pass data from\n    //   one instance of math.js to another since each has it's own instance of Unit.\n    // - check the `isUnit` property via the constructor, so there will be no\n    //   matches for \"fake\" instances like plain objects with a property `isUnit`.\n    //   That is important for security reasons.\n    // - It must not be possible to override the type checks used internally,\n    //   for security reasons, so these functions are not exposed in the expression\n    //   parser.\n    type.isNumber = function (x) {\n      return typeof x === 'number';\n    };\n\n    type.isComplex = function (x) {\n      return type.Complex && x instanceof type.Complex || false;\n    };\n\n    type.isBigNumber = isBigNumber;\n\n    type.isFraction = function (x) {\n      return type.Fraction && x instanceof type.Fraction || false;\n    };\n\n    type.isUnit = function (x) {\n      return x && x.constructor.prototype.isUnit || false;\n    };\n\n    type.isString = function (x) {\n      return typeof x === 'string';\n    };\n\n    type.isArray = Array.isArray;\n    type.isMatrix = isMatrix;\n\n    type.isDenseMatrix = function (x) {\n      return x && x.isDenseMatrix && x.constructor.prototype.isMatrix || false;\n    };\n\n    type.isSparseMatrix = function (x) {\n      return x && x.isSparseMatrix && x.constructor.prototype.isMatrix || false;\n    };\n\n    type.isRange = function (x) {\n      return x && x.constructor.prototype.isRange || false;\n    };\n\n    type.isIndex = function (x) {\n      return x && x.constructor.prototype.isIndex || false;\n    };\n\n    type.isBoolean = function (x) {\n      return typeof x === 'boolean';\n    };\n\n    type.isResultSet = function (x) {\n      return x && x.constructor.prototype.isResultSet || false;\n    };\n\n    type.isHelp = function (x) {\n      return x && x.constructor.prototype.isHelp || false;\n    };\n\n    type.isFunction = function (x) {\n      return typeof x === 'function';\n    };\n\n    type.isDate = function (x) {\n      return x instanceof Date;\n    };\n\n    type.isRegExp = function (x) {\n      return x instanceof RegExp;\n    };\n\n    type.isObject = function (x) {\n      return _typeof$1(x) === 'object' && x.constructor === Object && !type.isComplex(x) && !type.isFraction(x);\n    };\n\n    type.isNull = function (x) {\n      return x === null;\n    };\n\n    type.isUndefined = function (x) {\n      return x === undefined;\n    };\n\n    type.isAccessorNode = function (x) {\n      return x && x.isAccessorNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isArrayNode = function (x) {\n      return x && x.isArrayNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isAssignmentNode = function (x) {\n      return x && x.isAssignmentNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isBlockNode = function (x) {\n      return x && x.isBlockNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isConditionalNode = function (x) {\n      return x && x.isConditionalNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isConstantNode = function (x) {\n      return x && x.isConstantNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isFunctionAssignmentNode = function (x) {\n      return x && x.isFunctionAssignmentNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isFunctionNode = function (x) {\n      return x && x.isFunctionNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isIndexNode = function (x) {\n      return x && x.isIndexNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isNode = function (x) {\n      return x && x.isNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isObjectNode = function (x) {\n      return x && x.isObjectNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isOperatorNode = function (x) {\n      return x && x.isOperatorNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isParenthesisNode = function (x) {\n      return x && x.isParenthesisNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isRangeNode = function (x) {\n      return x && x.isRangeNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isSymbolNode = function (x) {\n      return x && x.isSymbolNode && x.constructor.prototype.isNode || false;\n    };\n\n    type.isChain = function (x) {\n      return x && x.constructor.prototype.isChain || false;\n    }; // get a new instance of typed-function\n\n\n    var typed = _createTyped(); // define all types. The order of the types determines in which order function\n    // arguments are type-checked (so for performance it's important to put the\n    // most used types first).\n\n\n    typed.types = [{\n      name: 'number',\n      test: type.isNumber\n    }, {\n      name: 'Complex',\n      test: type.isComplex\n    }, {\n      name: 'BigNumber',\n      test: type.isBigNumber\n    }, {\n      name: 'Fraction',\n      test: type.isFraction\n    }, {\n      name: 'Unit',\n      test: type.isUnit\n    }, {\n      name: 'string',\n      test: type.isString\n    }, {\n      name: 'Array',\n      test: type.isArray\n    }, {\n      name: 'Matrix',\n      test: type.isMatrix\n    }, {\n      name: 'DenseMatrix',\n      test: type.isDenseMatrix\n    }, {\n      name: 'SparseMatrix',\n      test: type.isSparseMatrix\n    }, {\n      name: 'Range',\n      test: type.isRange\n    }, {\n      name: 'Index',\n      test: type.isIndex\n    }, {\n      name: 'boolean',\n      test: type.isBoolean\n    }, {\n      name: 'ResultSet',\n      test: type.isResultSet\n    }, {\n      name: 'Help',\n      test: type.isHelp\n    }, {\n      name: 'function',\n      test: type.isFunction\n    }, {\n      name: 'Date',\n      test: type.isDate\n    }, {\n      name: 'RegExp',\n      test: type.isRegExp\n    }, {\n      name: 'null',\n      test: type.isNull\n    }, {\n      name: 'undefined',\n      test: type.isUndefined\n    }, {\n      name: 'OperatorNode',\n      test: type.isOperatorNode\n    }, {\n      name: 'ConstantNode',\n      test: type.isConstantNode\n    }, {\n      name: 'SymbolNode',\n      test: type.isSymbolNode\n    }, {\n      name: 'ParenthesisNode',\n      test: type.isParenthesisNode\n    }, {\n      name: 'FunctionNode',\n      test: type.isFunctionNode\n    }, {\n      name: 'FunctionAssignmentNode',\n      test: type.isFunctionAssignmentNode\n    }, {\n      name: 'ArrayNode',\n      test: type.isArrayNode\n    }, {\n      name: 'AssignmentNode',\n      test: type.isAssignmentNode\n    }, {\n      name: 'BlockNode',\n      test: type.isBlockNode\n    }, {\n      name: 'ConditionalNode',\n      test: type.isConditionalNode\n    }, {\n      name: 'IndexNode',\n      test: type.isIndexNode\n    }, {\n      name: 'RangeNode',\n      test: type.isRangeNode\n    }, {\n      name: 'Node',\n      test: type.isNode\n    }, {\n      name: 'Object',\n      test: type.isObject // order 'Object' last, it matches on other classes too\n\n    }]; // TODO: add conversion from BigNumber to number?\n\n    typed.conversions = [{\n      from: 'number',\n      to: 'BigNumber',\n      convert: function convert(x) {\n        // note: conversion from number to BigNumber can fail if x has >15 digits\n        if (digits(x) > 15) {\n          throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');\n        }\n\n        return new type.BigNumber(x);\n      }\n    }, {\n      from: 'number',\n      to: 'Complex',\n      convert: function convert(x) {\n        return new type.Complex(x, 0);\n      }\n    }, {\n      from: 'number',\n      to: 'string',\n      convert: function convert(x) {\n        return x + '';\n      }\n    }, {\n      from: 'BigNumber',\n      to: 'Complex',\n      convert: function convert(x) {\n        return new type.Complex(x.toNumber(), 0);\n      }\n    }, {\n      from: 'Fraction',\n      to: 'BigNumber',\n      convert: function convert(x) {\n        throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n      }\n    }, {\n      from: 'Fraction',\n      to: 'Complex',\n      convert: function convert(x) {\n        return new type.Complex(x.valueOf(), 0);\n      }\n    }, {\n      from: 'number',\n      to: 'Fraction',\n      convert: function convert(x) {\n        var f = new type.Fraction(x);\n\n        if (f.valueOf() !== x) {\n          throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');\n        }\n\n        return new type.Fraction(x);\n      }\n    }, {\n      // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n      //  from: 'Fraction',\n      //  to: 'number',\n      //  convert: function (x) {\n      //    return x.valueOf()\n      //  }\n      // }, {\n      from: 'string',\n      to: 'number',\n      convert: function convert(x) {\n        var n = Number(x);\n\n        if (isNaN(n)) {\n          throw new Error('Cannot convert \"' + x + '\" to a number');\n        }\n\n        return n;\n      }\n    }, {\n      from: 'string',\n      to: 'BigNumber',\n      convert: function convert(x) {\n        try {\n          return new type.BigNumber(x);\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Fraction',\n      convert: function convert(x) {\n        try {\n          return new type.Fraction(x);\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Fraction');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Complex',\n      convert: function convert(x) {\n        try {\n          return new type.Complex(x);\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Complex');\n        }\n      }\n    }, {\n      from: 'boolean',\n      to: 'number',\n      convert: function convert(x) {\n        return +x;\n      }\n    }, {\n      from: 'boolean',\n      to: 'BigNumber',\n      convert: function convert(x) {\n        return new type.BigNumber(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'Fraction',\n      convert: function convert(x) {\n        return new type.Fraction(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'string',\n      convert: function convert(x) {\n        return +x;\n      }\n    }, {\n      from: 'Array',\n      to: 'Matrix',\n      convert: function convert(array) {\n        return new type.DenseMatrix(array);\n      }\n    }, {\n      from: 'Matrix',\n      to: 'Array',\n      convert: function convert(matrix) {\n        return matrix.valueOf();\n      }\n    }];\n    return typed;\n  };\n\n  var typed = {\n  \tcreate: create\n  };\n\n  function E () {\n    // Keep this empty so it's easier to inherit from\n    // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n  }\n\n  E.prototype = {\n    on: function (name, callback, ctx) {\n      var e = this.e || (this.e = {});\n\n      (e[name] || (e[name] = [])).push({\n        fn: callback,\n        ctx: ctx\n      });\n\n      return this;\n    },\n\n    once: function (name, callback, ctx) {\n      var self = this;\n      function listener () {\n        self.off(name, listener);\n        callback.apply(ctx, arguments);\n      }\n      listener._ = callback;\n      return this.on(name, listener, ctx);\n    },\n\n    emit: function (name) {\n      var data = [].slice.call(arguments, 1);\n      var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n      var i = 0;\n      var len = evtArr.length;\n\n      for (i; i < len; i++) {\n        evtArr[i].fn.apply(evtArr[i].ctx, data);\n      }\n\n      return this;\n    },\n\n    off: function (name, callback) {\n      var e = this.e || (this.e = {});\n      var evts = e[name];\n      var liveEvents = [];\n\n      if (evts && callback) {\n        for (var i = 0, len = evts.length; i < len; i++) {\n          if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n            liveEvents.push(evts[i]);\n        }\n      }\n\n      // Remove event from queue to prevent memory leak\n      // Suggested by https://github.com/lazd\n      // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n      (liveEvents.length)\n        ? e[name] = liveEvents\n        : delete e[name];\n\n      return this;\n    }\n  };\n\n  var tinyEmitter = E;\n  var TinyEmitter = E;\n  tinyEmitter.TinyEmitter = TinyEmitter;\n\n  /**\n   * Extend given object with emitter functions `on`, `off`, `once`, `emit`\n   * @param {Object} obj\n   * @return {Object} obj\n   */\n\n\n  var mixin = function (obj) {\n    // create event emitter\n    var emitter = new tinyEmitter(); // bind methods to obj (we don't want to expose the emitter.e Array...)\n\n    obj.on = emitter.on.bind(emitter);\n    obj.off = emitter.off.bind(emitter);\n    obj.once = emitter.once.bind(emitter);\n    obj.emit = emitter.emit.bind(emitter);\n    return obj;\n  };\n\n  var emitter = {\n  \tmixin: mixin\n  };\n\n  /**\n   * Create a syntax error with the message:\n   *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n   * @param {string} fn     Function name\n   * @param {number} count  Actual argument count\n   * @param {number} min    Minimum required argument count\n   * @param {number} [max]  Maximum required argument count\n   * @extends Error\n   */\n\n  function ArgumentsError(fn, count, min, max) {\n    if (!(this instanceof ArgumentsError)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.fn = fn;\n    this.count = count;\n    this.min = min;\n    this.max = max;\n    this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';\n    this.stack = new Error().stack;\n  }\n\n  ArgumentsError.prototype = new Error();\n  ArgumentsError.prototype.constructor = Error;\n  ArgumentsError.prototype.name = 'ArgumentsError';\n  ArgumentsError.prototype.isArgumentsError = true;\n  var ArgumentsError_1 = ArgumentsError;\n\n  function _typeof$2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$2 = function _typeof(obj) { return typeof obj; }; } else { _typeof$2 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$2(obj); }\n\n  var lazy = object.lazy;\n\n  var isFactory = object.isFactory;\n\n  var traverse = object.traverse;\n\n\n\n  function factory(type, config, load, typed, math) {\n    /**\n     * Import functions from an object or a module\n     *\n     * Syntax:\n     *\n     *    math.import(object)\n     *    math.import(object, options)\n     *\n     * Where:\n     *\n     * - `object: Object`\n     *   An object with functions to be imported.\n     * - `options: Object` An object with import options. Available options:\n     *   - `override: boolean`\n     *     If true, existing functions will be overwritten. False by default.\n     *   - `silent: boolean`\n     *     If true, the function will not throw errors on duplicates or invalid\n     *     types. False by default.\n     *   - `wrap: boolean`\n     *     If true, the functions will be wrapped in a wrapper function\n     *     which converts data types like Matrix to primitive data types like Array.\n     *     The wrapper is needed when extending math.js with libraries which do not\n     *     support these data type. False by default.\n     *\n     * Examples:\n     *\n     *    // define new functions and variables\n     *    math.import({\n     *      myvalue: 42,\n     *      hello: function (name) {\n     *        return 'hello, ' + name + '!'\n     *      }\n     *    })\n     *\n     *    // use the imported function and variable\n     *    math.myvalue * 2               // 84\n     *    math.hello('user')             // 'hello, user!'\n     *\n     *    // import the npm module 'numbers'\n     *    // (must be installed first with `npm install numbers`)\n     *    math.import(require('numbers'), {wrap: true})\n     *\n     *    math.fibonacci(7) // returns 13\n     *\n     * @param {Object | Array} object   Object with functions to be imported.\n     * @param {Object} [options]        Import options.\n     */\n    function mathImport(object, options) {\n      var num = arguments.length;\n\n      if (num !== 1 && num !== 2) {\n        throw new ArgumentsError_1('import', num, 1, 2);\n      }\n\n      if (!options) {\n        options = {};\n      } // TODO: allow a typed-function with name too\n\n\n      if (isFactory(object)) {\n        _importFactory(object, options);\n      } else if (Array.isArray(object)) {\n        object.forEach(function (entry) {\n          mathImport(entry, options);\n        });\n      } else if (_typeof$2(object) === 'object') {\n        // a map with functions\n        for (var name in object) {\n          if (object.hasOwnProperty(name)) {\n            var value = object[name];\n\n            if (isSupportedType(value)) {\n              _import(name, value, options);\n            } else if (isFactory(object)) {\n              _importFactory(object, options);\n            } else {\n              mathImport(value, options);\n            }\n          }\n        }\n      } else {\n        if (!options.silent) {\n          throw new TypeError('Factory, Object, or Array expected');\n        }\n      }\n    }\n    /**\n     * Add a property to the math namespace and create a chain proxy for it.\n     * @param {string} name\n     * @param {*} value\n     * @param {Object} options  See import for a description of the options\n     * @private\n     */\n\n\n    function _import(name, value, options) {\n      // TODO: refactor this function, it's to complicated and contains duplicate code\n      if (options.wrap && typeof value === 'function') {\n        // create a wrapper around the function\n        value = _wrap(value);\n      }\n\n      if (isTypedFunction(math[name]) && isTypedFunction(value)) {\n        if (options.override) {\n          // give the typed function the right name\n          value = typed(name, value.signatures);\n        } else {\n          // merge the existing and typed function\n          value = typed(math[name], value);\n        }\n\n        math[name] = value;\n\n        _importTransform(name, value);\n\n        math.emit('import', name, function resolver() {\n          return value;\n        });\n        return;\n      }\n\n      if (math[name] === undefined || options.override) {\n        math[name] = value;\n\n        _importTransform(name, value);\n\n        math.emit('import', name, function resolver() {\n          return value;\n        });\n        return;\n      }\n\n      if (!options.silent) {\n        throw new Error('Cannot import \"' + name + '\": already exists');\n      }\n    }\n\n    function _importTransform(name, value) {\n      if (value && typeof value.transform === 'function') {\n        math.expression.transform[name] = value.transform;\n\n        if (allowedInExpressions(name)) {\n          math.expression.mathWithTransform[name] = value.transform;\n        }\n      } else {\n        // remove existing transform\n        delete math.expression.transform[name];\n\n        if (allowedInExpressions(name)) {\n          math.expression.mathWithTransform[name] = value;\n        }\n      }\n    }\n\n    function _deleteTransform(name) {\n      delete math.expression.transform[name];\n\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = math[name];\n      } else {\n        delete math.expression.mathWithTransform[name];\n      }\n    }\n    /**\n     * Create a wrapper a round an function which converts the arguments\n     * to their primitive values (like convert a Matrix to Array)\n     * @param {Function} fn\n     * @return {Function} Returns the wrapped function\n     * @private\n     */\n\n\n    function _wrap(fn) {\n      var wrapper = function wrapper() {\n        var args = [];\n\n        for (var i = 0, len = arguments.length; i < len; i++) {\n          var arg = arguments[i];\n          args[i] = arg && arg.valueOf();\n        }\n\n        return fn.apply(math, args);\n      };\n\n      if (fn.transform) {\n        wrapper.transform = fn.transform;\n      }\n\n      return wrapper;\n    }\n    /**\n     * Import an instance of a factory into math.js\n     * @param {{factory: Function, name: string, path: string, math: boolean}} factory\n     * @param {Object} options  See import for a description of the options\n     * @private\n     */\n\n\n    function _importFactory(factory, options) {\n      if (typeof factory.name === 'string') {\n        var name = factory.name;\n        var existingTransform = name in math.expression.transform;\n        var namespace = factory.path ? traverse(math, factory.path) : math;\n        var existing = namespace.hasOwnProperty(name) ? namespace[name] : undefined;\n\n        var resolver = function resolver() {\n          var instance = load(factory);\n\n          if (instance && typeof instance.transform === 'function') {\n            throw new Error('Transforms cannot be attached to factory functions. ' + 'Please create a separate function for it with exports.path=\"expression.transform\"');\n          }\n\n          if (isTypedFunction(existing) && isTypedFunction(instance)) {\n            if (options.override) ; else {\n              // merge the existing and new typed function\n              instance = typed(existing, instance);\n            }\n\n            return instance;\n          }\n\n          if (existing === undefined || options.override) {\n            return instance;\n          }\n\n          if (!options.silent) {\n            throw new Error('Cannot import \"' + name + '\": already exists');\n          }\n        };\n\n        if (factory.lazy !== false) {\n          lazy(namespace, name, resolver);\n\n          if (existingTransform) {\n            _deleteTransform(name);\n          } else {\n            if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n              lazy(math.expression.mathWithTransform, name, resolver);\n            }\n          }\n        } else {\n          namespace[name] = resolver();\n\n          if (existingTransform) {\n            _deleteTransform(name);\n          } else {\n            if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n              math.expression.mathWithTransform[name] = resolver();\n            }\n          }\n        }\n\n        math.emit('import', name, resolver, factory.path);\n      } else {\n        // unnamed factory.\n        // no lazy loading\n        load(factory);\n      }\n    }\n    /**\n     * Check whether given object is a type which can be imported\n     * @param {Function | number | string | boolean | null | Unit | Complex} object\n     * @return {boolean}\n     * @private\n     */\n\n\n    function isSupportedType(object) {\n      return typeof object === 'function' || typeof object === 'number' || typeof object === 'string' || typeof object === 'boolean' || object === null || object && type.isUnit(object) || object && type.isComplex(object) || object && type.isBigNumber(object) || object && type.isFraction(object) || object && type.isMatrix(object) || object && Array.isArray(object);\n    }\n    /**\n     * Test whether a given thing is a typed-function\n     * @param {*} fn\n     * @return {boolean} Returns true when `fn` is a typed-function\n     */\n\n\n    function isTypedFunction(fn) {\n      return typeof fn === 'function' && _typeof$2(fn.signatures) === 'object';\n    }\n\n    function allowedInExpressions(name) {\n      return !unsafe.hasOwnProperty(name);\n    }\n\n    function factoryAllowedInExpressions(factory) {\n      return factory.path === undefined && !unsafe.hasOwnProperty(factory.name);\n    } // namespaces and functions not available in the parser for safety reasons\n\n\n    var unsafe = {\n      'expression': true,\n      'type': true,\n      'docs': true,\n      'error': true,\n      'json': true,\n      'chain': true // chain method not supported. Note that there is a unit chain too.\n\n    };\n    return mathImport;\n  }\n\n  var math = true; // request access to the math namespace as 5th argument of the factory function\n\n  var name = 'import';\n  var factory_1 = factory;\n  var lazy_1 = true;\n\n  var _import = {\n  \tmath: math,\n  \tname: name,\n  \tfactory: factory_1,\n  \tlazy: lazy_1\n  };\n\n  function factory$1(type, config, load, typed, math) {\n    var MATRIX = ['Matrix', 'Array']; // valid values for option matrix\n\n    var NUMBER = ['number', 'BigNumber', 'Fraction']; // valid values for option number\n\n    /**\n     * Set configuration options for math.js, and get current options.\n     * Will emit a 'config' event, with arguments (curr, prev, changes).\n     *\n     * Syntax:\n     *\n     *     math.config(config: Object): Object\n     *\n     * Examples:\n     *\n     *     math.config().number                // outputs 'number'\n     *     math.eval('0.4')                    // outputs number 0.4\n     *     math.config({number: 'Fraction'})\n     *     math.eval('0.4')                    // outputs Fraction 2/5\n     *\n     * @param {Object} [options] Available options:\n     *                            {number} epsilon\n     *                              Minimum relative difference between two\n     *                              compared values, used by all comparison functions.\n     *                            {string} matrix\n     *                              A string 'Matrix' (default) or 'Array'.\n     *                            {string} number\n     *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n     *                            {number} precision\n     *                              The number of significant digits for BigNumbers.\n     *                              Not applicable for Numbers.\n     *                            {string} parenthesis\n     *                              How to display parentheses in LaTeX and string\n     *                              output.\n     *                            {string} randomSeed\n     *                              Random seed for seeded pseudo random number generator.\n     *                              Set to null to randomly seed.\n     * @return {Object} Returns the current configuration\n     */\n\n    function _config(options) {\n      if (options) {\n        var prev = object.map(config, object.clone); // validate some of the options\n\n        validateOption(options, 'matrix', MATRIX);\n        validateOption(options, 'number', NUMBER); // merge options\n\n        object.deepExtend(config, options);\n        var curr = object.map(config, object.clone);\n        var changes = object.map(options, object.clone); // emit 'config' event\n\n        math.emit('config', curr, prev, changes);\n        return curr;\n      } else {\n        return object.map(config, object.clone);\n      }\n    } // attach the valid options to the function so they can be extended\n\n\n    _config.MATRIX = MATRIX;\n    _config.NUMBER = NUMBER;\n    return _config;\n  }\n  /**\n   * Test whether an Array contains a specific item.\n   * @param {Array.<string>} array\n   * @param {string} item\n   * @return {boolean}\n   */\n\n\n  function contains(array, item) {\n    return array.indexOf(item) !== -1;\n  }\n  /**\n   * Find a string in an array. Case insensitive search\n   * @param {Array.<string>} array\n   * @param {string} item\n   * @return {number} Returns the index when found. Returns -1 when not found\n   */\n\n\n  function findIndex(array, item) {\n    return array.map(function (i) {\n      return i.toLowerCase();\n    }).indexOf(item.toLowerCase());\n  }\n  /**\n   * Validate an option\n   * @param {Object} options         Object with options\n   * @param {string} name            Name of the option to validate\n   * @param {Array.<string>} values  Array with valid values for this option\n   */\n\n\n  function validateOption(options, name, values) {\n    if (options[name] !== undefined && !contains(values, options[name])) {\n      var index = findIndex(values, options[name]);\n\n      if (index !== -1) {\n        // right value, wrong casing\n        // TODO: lower case values are deprecated since v3, remove this warning some day.\n        console.warn('Warning: Wrong casing for configuration option \"' + name + '\", should be \"' + values[index] + '\" instead of \"' + options[name] + '\".');\n        options[name] = values[index]; // change the option to the right casing\n      } else {\n        // unknown value\n        console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". Available options: ' + values.map(JSON.stringify).join(', ') + '.');\n      }\n    }\n  }\n\n  var name$1 = 'config';\n  var math$1 = true; // request the math namespace as fifth argument\n\n  var factory_1$1 = factory$1;\n\n  var config = {\n  \tname: name$1,\n  \tmath: math$1,\n  \tfactory: factory_1$1\n  };\n\n  var isFactory$1 = object.isFactory;\n\n\n\n\n\n\n\n\n  /**\n   * Math.js core. Creates a new, empty math.js instance\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {boolean} predictable\n   *                              Predictable output type of functions. When true,\n   *                              output type depends only on the input types. When\n   *                              false (default), output type can vary depending\n   *                              on input values. For example `math.sqrt(-4)`\n   *                              returns `complex('2i')` when predictable is false, and\n   *                              returns `NaN` when true.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @returns {Object} Returns a bare-bone math.js instance containing\n   *                   functions:\n   *                   - `import` to add new functions\n   *                   - `config` to change configuration\n   *                   - `on`, `off`, `once`, `emit` for events\n   */\n\n\n  var create$1 = function create(options) {\n    // simple test for ES5 support\n    if (typeof Object.create !== 'function') {\n      throw new Error('ES5 not supported by this JavaScript engine. ' + 'Please load the es5-shim and es5-sham library for compatibility.');\n    } // cached factories and instances\n\n\n    var factories = [];\n    var instances = []; // create a namespace for the mathjs instance, and attach emitter functions\n\n    var math = emitter.mixin({});\n    math.type = {};\n    math.expression = {\n      transform: {},\n      mathWithTransform: {} // create a new typed instance\n\n    };\n    math.typed = typed.create(math.type); // create configuration options. These are private\n\n    var _config = {\n      // minimum relative difference between two compared values,\n      // used by all comparison functions\n      epsilon: 1e-12,\n      // type of default matrix output. Choose 'matrix' (default) or 'array'\n      matrix: 'Matrix',\n      // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n      number: 'number',\n      // number of significant digits in BigNumbers\n      precision: 64,\n      // predictable output type of functions. When true, output type depends only\n      // on the input types. When false (default), output type can vary depending\n      // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n      // predictable is false, and returns `NaN` when true.\n      predictable: false,\n      // random seed for seeded pseudo random number generation\n      // null = randomly seed\n      randomSeed: null\n      /**\n       * Load a function or data type from a factory.\n       * If the function or data type already exists, the existing instance is\n       * returned.\n       * @param {{type: string, name: string, factory: Function}} factory\n       * @returns {*}\n       */\n\n    };\n\n    function load(factory) {\n      if (!isFactory$1(factory)) {\n        throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n      }\n\n      var index = factories.indexOf(factory);\n      var instance;\n\n      if (index === -1) {\n        // doesn't yet exist\n        if (factory.math === true) {\n          // pass with math namespace\n          instance = factory.factory(math.type, _config, load, math.typed, math);\n        } else {\n          instance = factory.factory(math.type, _config, load, math.typed);\n        } // append to the cache\n\n\n        factories.push(factory);\n        instances.push(instance);\n      } else {\n        // already existing function, return the cached instance\n        instance = instances[index];\n      }\n\n      return instance;\n    } // load the import and config functions\n\n\n    math['import'] = load(_import);\n    math['config'] = load(config);\n    math.expression.mathWithTransform['config'] = math['config']; // apply options\n\n    if (options) {\n      math.config(options);\n    }\n\n    return math;\n  };\n\n  var core = {\n  \tcreate: create$1\n  };\n\n  var core$1 = core;\n\n  /**\n   * Execute the callback function element wise for each element in array and any\n   * nested array\n   * Returns an array with the results\n   * @param {Array | Matrix} array\n   * @param {Function} callback   The callback is called with two parameters:\n   *                              value1 and value2, which contain the current\n   *                              element of both arrays.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Array | Matrix} res\n   */\n\n  var deepMap = function deepMap(array, callback, skipZeros) {\n    if (array && typeof array.map === 'function') {\n      // TODO: replace array.map with a for loop to improve performance\n      return array.map(function (x) {\n        return deepMap(x, callback);\n      });\n    } else {\n      return callback(array);\n    }\n  };\n\n  function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\n  function factory$2(type, config, load, typed) {\n    /**\n     * Determine the type of a variable.\n     *\n     * Function `typeof` recognizes the following types of objects:\n     *\n     * Object                 | Returns       | Example\n     * ---------------------- | ------------- | ------------------------------------------\n     * null                   | `'null'`      | `math.typeof(null)`\n     * number                 | `'number'`    | `math.typeof(3.5)`\n     * boolean                | `'boolean'`   | `math.typeof(true)`\n     * string                 | `'string'`    | `math.typeof('hello world')`\n     * Array                  | `'Array'`     | `math.typeof([1, 2, 3])`\n     * Date                   | `'Date'`      | `math.typeof(new Date())`\n     * Function               | `'Function'`  | `math.typeof(function () {})`\n     * Object                 | `'Object'`    | `math.typeof({a: 2, b: 3})`\n     * RegExp                 | `'RegExp'`    | `math.typeof(/a regexp/)`\n     * undefined              | `'undefined'` | `math.typeof(undefined)`\n     * math.type.BigNumber    | `'BigNumber'` | `math.typeof(math.bignumber('2.3e500'))`\n     * math.type.Chain        | `'Chain'`     | `math.typeof(math.chain(2))`\n     * math.type.Complex      | `'Complex'`   | `math.typeof(math.complex(2, 3))`\n     * math.type.Fraction     | `'Fraction'`  | `math.typeof(math.fraction(1, 3))`\n     * math.type.Help         | `'Help'`      | `math.typeof(math.help('sqrt'))`\n     * math.type.Help         | `'Help'`      | `math.typeof(math.help('sqrt'))`\n     * math.type.Index        | `'Index'`     | `math.typeof(math.index(1, 3))`\n     * math.type.Matrix       | `'Matrix'`    | `math.typeof(math.matrix([[1,2], [3, 4]]))`\n     * math.type.Range        | `'Range'`     | `math.typeof(math.range(0, 10))`\n     * math.type.ResultSet    | `'ResultSet'` | `math.typeof(math.eval('a=2\\nb=3'))`\n     * math.type.Unit         | `'Unit'`      | `math.typeof(math.unit('45 deg'))`\n     * math.expression.node&#8203;.AccessorNode            | `'AccessorNode'`            | `math.typeof(math.parse('A[2]'))`\n     * math.expression.node&#8203;.ArrayNode               | `'ArrayNode'`               | `math.typeof(math.parse('[1,2,3]'))`\n     * math.expression.node&#8203;.AssignmentNode          | `'AssignmentNode'`          | `math.typeof(math.parse('x=2'))`\n     * math.expression.node&#8203;.BlockNode               | `'BlockNode'`               | `math.typeof(math.parse('a=2; b=3'))`\n     * math.expression.node&#8203;.ConditionalNode         | `'ConditionalNode'`         | `math.typeof(math.parse('x<0 ? -x : x'))`\n     * math.expression.node&#8203;.ConstantNode            | `'ConstantNode'`            | `math.typeof(math.parse('2.3'))`\n     * math.expression.node&#8203;.FunctionAssignmentNode  | `'FunctionAssignmentNode'`  | `math.typeof(math.parse('f(x)=x^2'))`\n     * math.expression.node&#8203;.FunctionNode            | `'FunctionNode'`            | `math.typeof(math.parse('sqrt(4)'))`\n     * math.expression.node&#8203;.IndexNode               | `'IndexNode'`               | `math.typeof(math.parse('A[2]').index)`\n     * math.expression.node&#8203;.ObjectNode              | `'ObjectNode'`              | `math.typeof(math.parse('{a:2}'))`\n     * math.expression.node&#8203;.ParenthesisNode         | `'ParenthesisNode'`         | `math.typeof(math.parse('(2+3)'))`\n     * math.expression.node&#8203;.RangeNode               | `'RangeNode'`               | `math.typeof(math.parse('1:10'))`\n     * math.expression.node&#8203;.SymbolNode              | `'SymbolNode'`              | `math.typeof(math.parse('x'))`\n     *\n     * Syntax:\n     *\n     *    math.typeof(x)\n     *\n     * Examples:\n     *\n     *    math.typeof(3.5)                     // returns 'number'\n     *    math.typeof(math.complex('2-4i'))    // returns 'Complex'\n     *    math.typeof(math.unit('45 deg'))     // returns 'Unit'\n     *    math.typeof('hello world')           // returns 'string'\n     *\n     * @param {*} x     The variable for which to test the type.\n     * @return {string} Returns the name of the type. Primitive types are lower case,\n     *                  non-primitive types are upper-camel-case.\n     *                  For example 'number', 'string', 'Array', 'Date'.\n     */\n    var _typeof = typed('_typeof', {\n      'any': function any(x) {\n        var t = _typeof2(x);\n\n        if (t === 'object') {\n          // JavaScript types\n          if (x === null) return 'null';\n          if (Array.isArray(x)) return 'Array';\n          if (x instanceof Date) return 'Date';\n          if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n          if (type.isBigNumber(x)) return 'BigNumber';\n          if (type.isComplex(x)) return 'Complex';\n          if (type.isFraction(x)) return 'Fraction';\n          if (type.isMatrix(x)) return 'Matrix';\n          if (type.isUnit(x)) return 'Unit';\n          if (type.isIndex(x)) return 'Index';\n          if (type.isRange(x)) return 'Range';\n          if (type.isResultSet(x)) return 'ResultSet';\n          if (type.isNode(x)) return x.type;\n          if (type.isChain(x)) return 'Chain';\n          if (type.isHelp(x)) return 'Help';\n          return 'Object';\n        }\n\n        if (t === 'function') return 'Function';\n        return t; // can be 'string', 'number', 'boolean', ...\n      }\n    });\n\n    _typeof.toTex = undefined; // use default template\n\n    return _typeof;\n  }\n\n  var name$2 = 'typeof';\n  var factory_1$2 = factory$2;\n\n  var _typeof$3 = {\n  \tname: name$2,\n  \tfactory: factory_1$2\n  };\n\n  function factory$3(type, config, load, typed) {\n    /**\n     * Create a number or convert a string, boolean, or unit to a number.\n     * When value is a matrix, all elements will be converted to number.\n     *\n     * Syntax:\n     *\n     *    math.number(value)\n     *    math.number(unit, valuelessUnit)\n     *\n     * Examples:\n     *\n     *    math.number(2)                         // returns number 2\n     *    math.number('7.2')                     // returns number 7.2\n     *    math.number(true)                      // returns number 1\n     *    math.number([true, false, true, true]) // returns [1, 0, 1, 1]\n     *    math.number(math.unit('52cm'), 'm')    // returns 0.52\n     *\n     * See also:\n     *\n     *    bignumber, boolean, complex, index, matrix, string, unit\n     *\n     * @param {string | number | BigNumber | Fraction | boolean | Array | Matrix | Unit | null} [value]  Value to be converted\n     * @param {Unit | string} [valuelessUnit] A valueless unit, used to convert a unit to a number\n     * @return {number | Array | Matrix} The created number\n     */\n    var number = typed('number', {\n      '': function _() {\n        return 0;\n      },\n      'number': function number(x) {\n        return x;\n      },\n      'string': function string(x) {\n        if (x === 'NaN') return NaN;\n        var num = Number(x);\n\n        if (isNaN(num)) {\n          throw new SyntaxError('String \"' + x + '\" is no valid number');\n        }\n\n        return num;\n      },\n      'BigNumber': function BigNumber(x) {\n        return x.toNumber();\n      },\n      'Fraction': function Fraction(x) {\n        return x.valueOf();\n      },\n      'Unit': function Unit(x) {\n        throw new Error('Second argument with valueless unit expected');\n      },\n      'null': function _null(x) {\n        return 0;\n      },\n      'Unit, string | Unit': function UnitStringUnit(unit, valuelessUnit) {\n        return unit.toNumber(valuelessUnit);\n      },\n      'Array | Matrix': function ArrayMatrix(x) {\n        return deepMap(x, number);\n      }\n    });\n    number.toTex = {\n      0: \"0\",\n      1: \"\\\\left(${args[0]}\\\\right)\",\n      2: \"\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)\"\n    };\n    return number;\n  }\n\n  var name$3 = 'number';\n  var factory_1$3 = factory$3;\n\n  var number$1 = {\n  \tname: name$3,\n  \tfactory: factory_1$3\n  };\n\n  function factory$4(type, config, load, typed) {\n    /**\n     * Create a BigNumber, which can store numbers with arbitrary precision.\n     * When a matrix is provided, all elements will be converted to BigNumber.\n     *\n     * Syntax:\n     *\n     *    math.bignumber(x)\n     *\n     * Examples:\n     *\n     *    0.1 + 0.2                                  // returns number 0.30000000000000004\n     *    math.bignumber(0.1) + math.bignumber(0.2)  // returns BigNumber 0.3\n     *\n     *\n     *    7.2e500                                    // returns number Infinity\n     *    math.bignumber('7.2e500')                  // returns BigNumber 7.2e500\n     *\n     * See also:\n     *\n     *    boolean, complex, index, matrix, string, unit\n     *\n     * @param {number | string | Fraction | BigNumber | Array | Matrix | boolean | null} [value]  Value for the big number,\n     *                                                    0 by default.\n     * @returns {BigNumber} The created bignumber\n     */\n    var bignumber = typed('bignumber', {\n      '': function _() {\n        return new type.BigNumber(0);\n      },\n      'number': function number(x) {\n        // convert to string to prevent errors in case of >15 digits\n        return new type.BigNumber(x + '');\n      },\n      'string': function string(x) {\n        return new type.BigNumber(x);\n      },\n      'BigNumber': function BigNumber(x) {\n        // we assume a BigNumber is immutable\n        return x;\n      },\n      'Fraction': function Fraction(x) {\n        return new type.BigNumber(x.n).div(x.d).times(x.s);\n      },\n      'null': function _null(x) {\n        return new type.BigNumber(0);\n      },\n      'Array | Matrix': function ArrayMatrix(x) {\n        return deepMap(x, bignumber);\n      }\n    });\n    bignumber.toTex = {\n      0: '0',\n      1: \"\\\\left(${args[0]}\\\\right)\"\n    };\n    return bignumber;\n  }\n\n  var name$4 = 'bignumber';\n  var factory_1$4 = factory$4;\n\n  var bignumber = {\n  \tname: name$4,\n  \tfactory: factory_1$4\n  };\n\n  function factory$5(type, config, load, typed) {\n    /**\n     * Create a fraction convert a value to a fraction.\n     *\n     * Syntax:\n     *     math.fraction(numerator, denominator)\n     *     math.fraction({n: numerator, d: denominator})\n     *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries\n     *                                                   into fractions\n     *\n     * Examples:\n     *\n     *     math.fraction(1, 3)\n     *     math.fraction('2/3')\n     *     math.fraction({n: 2, d: 3})\n     *     math.fraction([0.2, 0.25, 1.25])\n     *\n     * See also:\n     *\n     *    bignumber, number, string, unit\n     *\n     * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]\n     *            Arguments specifying the numerator and denominator of\n     *            the fraction\n     * @return {Fraction | Array | Matrix} Returns a fraction\n     */\n    var fraction = typed('fraction', {\n      'number': function number(x) {\n        if (!isFinite(x) || isNaN(x)) {\n          throw new Error(x + ' cannot be represented as a fraction');\n        }\n\n        return new type.Fraction(x);\n      },\n      'string': function string(x) {\n        return new type.Fraction(x);\n      },\n      'number, number': function numberNumber(numerator, denominator) {\n        return new type.Fraction(numerator, denominator);\n      },\n      'null': function _null(x) {\n        return new type.Fraction(0);\n      },\n      'BigNumber': function BigNumber(x) {\n        return new type.Fraction(x.toString());\n      },\n      'Fraction': function Fraction(x) {\n        return x; // fractions are immutable\n      },\n      'Object': function Object(x) {\n        return new type.Fraction(x);\n      },\n      'Array | Matrix': function ArrayMatrix(x) {\n        return deepMap(x, fraction);\n      }\n    });\n    return fraction;\n  }\n\n  var name$5 = 'fraction';\n  var factory_1$5 = factory$5;\n\n  var fraction = {\n  \tname: name$5,\n  \tfactory: factory_1$5\n  };\n\n  function factory$6(type, config, load, typed) {\n    var getTypeOf = load(_typeof$3);\n    var validInputTypes = {\n      'string': true,\n      'number': true,\n      'BigNumber': true,\n      'Fraction': true // Load the conversion functions for each output type\n\n    };\n    var validOutputTypes = {\n      'number': load(number$1),\n      'BigNumber': load(bignumber),\n      'Fraction': load(fraction)\n      /**\n       * Convert a numeric value to a specific type: number, BigNumber, or Fraction\n       *\n       * @param {string | number | BigNumber | Fraction } value\n       * @param {'number' | 'BigNumber' | 'Fraction'} outputType\n       * @return {number | BigNumber | Fraction} Returns an instance of the\n       *                                         numeric in the requested type\n       */\n\n    };\n\n    var numeric = function numeric(value, outputType) {\n      var inputType = getTypeOf(value);\n\n      if (!(inputType in validInputTypes)) {\n        throw new TypeError('Cannot convert ' + value + ' of type \"' + inputType + '\"; valid input types are ' + Object.keys(validInputTypes).join(', '));\n      }\n\n      if (!(outputType in validOutputTypes)) {\n        throw new TypeError('Cannot convert ' + value + ' to type \"' + outputType + '\"; valid output types are ' + Object.keys(validOutputTypes).join(', '));\n      }\n\n      if (outputType === inputType) {\n        return value;\n      } else {\n        return validOutputTypes[outputType](value);\n      }\n    };\n\n    numeric.toTex = function (node, options) {\n      // Not sure if this is strictly right but should work correctly for the vast majority of use cases.\n      return node.args[0].toTex();\n    };\n\n    return numeric;\n  } // FIXME: expose numeric in the math namespace after we've decided on a name and have written proper docs for this function. See https://github.com/josdejong/mathjs/pull/1270\n  // exports.name = 'type._numeric'\n\n\n  var path = 'type';\n  var name$6 = '_numeric';\n  var factory_1$6 = factory$6;\n\n  var numeric = {\n  \tpath: path,\n  \tname: name$6,\n  \tfactory: factory_1$6\n  };\n\n  function _typeof$4(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$4 = function _typeof(obj) { return typeof obj; }; } else { _typeof$4 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$4(obj); }\n\n  var hasOwnProperty = object.hasOwnProperty;\n  /**\n   * Get a property of a plain object\n   * Throws an error in case the object is not a plain object or the\n   * property is not defined on the object itself\n   * @param {Object} object\n   * @param {string} prop\n   * @return {*} Returns the property value when safe\n   */\n\n\n  function getSafeProperty(object, prop) {\n    // only allow getting safe properties of a plain object\n    if (isPlainObject(object) && isSafeProperty(object, prop)) {\n      return object[prop];\n    }\n\n    if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n      throw new Error('Cannot access method \"' + prop + '\" as a property');\n    }\n\n    throw new Error('No access to property \"' + prop + '\"');\n  }\n  /**\n   * Set a property on a plain object.\n   * Throws an error in case the object is not a plain object or the\n   * property would override an inherited property like .constructor or .toString\n   * @param {Object} object\n   * @param {string} prop\n   * @param {*} value\n   * @return {*} Returns the value\n   */\n  // TODO: merge this function into access.js?\n\n\n  function setSafeProperty(object, prop, value) {\n    // only allow setting safe properties of a plain object\n    if (isPlainObject(object) && isSafeProperty(object, prop)) {\n      object[prop] = value;\n      return value;\n    }\n\n    throw new Error('No access to property \"' + prop + '\"');\n  }\n  /**\n   * Test whether a property is safe to use for an object.\n   * For example .toString and .constructor are not safe\n   * @param {string} prop\n   * @return {boolean} Returns true when safe\n   */\n\n\n  function isSafeProperty(object, prop) {\n    if (!object || _typeof$4(object) !== 'object') {\n      return false;\n    } // SAFE: whitelisted\n    // e.g length\n\n\n    if (hasOwnProperty(safeNativeProperties, prop)) {\n      return true;\n    } // UNSAFE: inherited from Object prototype\n    // e.g constructor\n\n\n    if (prop in Object.prototype) {\n      // 'in' is used instead of hasOwnProperty for nodejs v0.10\n      // which is inconsistent on root prototypes. It is safe\n      // here because Object.prototype is a root object\n      return false;\n    } // UNSAFE: inherited from Function prototype\n    // e.g call, apply\n\n\n    if (prop in Function.prototype) {\n      // 'in' is used instead of hasOwnProperty for nodejs v0.10\n      // which is inconsistent on root prototypes. It is safe\n      // here because Function.prototype is a root object\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Validate whether a method is safe.\n   * Throws an error when that's not the case.\n   * @param {Object} object\n   * @param {string} method\n   */\n  // TODO: merge this function into assign.js?\n\n\n  function validateSafeMethod(object, method) {\n    if (!isSafeMethod(object, method)) {\n      throw new Error('No access to method \"' + method + '\"');\n    }\n  }\n  /**\n   * Check whether a method is safe.\n   * Throws an error when that's not the case (for example for `constructor`).\n   * @param {Object} object\n   * @param {string} method\n   * @return {boolean} Returns true when safe, false otherwise\n   */\n\n\n  function isSafeMethod(object, method) {\n    if (!object || typeof object[method] !== 'function') {\n      return false;\n    } // UNSAFE: ghosted\n    // e.g overridden toString\n    // Note that IE10 doesn't support __proto__ and we can't do this check there.\n\n\n    if (hasOwnProperty(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\n      return false;\n    } // SAFE: whitelisted\n    // e.g toString\n\n\n    if (hasOwnProperty(safeNativeMethods, method)) {\n      return true;\n    } // UNSAFE: inherited from Object prototype\n    // e.g constructor\n\n\n    if (method in Object.prototype) {\n      // 'in' is used instead of hasOwnProperty for nodejs v0.10\n      // which is inconsistent on root prototypes. It is safe\n      // here because Object.prototype is a root object\n      return false;\n    } // UNSAFE: inherited from Function prototype\n    // e.g call, apply\n\n\n    if (method in Function.prototype) {\n      // 'in' is used instead of hasOwnProperty for nodejs v0.10\n      // which is inconsistent on root prototypes. It is safe\n      // here because Function.prototype is a root object\n      return false;\n    }\n\n    return true;\n  }\n\n  function isPlainObject(object) {\n    return _typeof$4(object) === 'object' && object && object.constructor === Object;\n  }\n\n  var safeNativeProperties = {\n    length: true,\n    name: true\n  };\n  var safeNativeMethods = {\n    toString: true,\n    valueOf: true,\n    toLocaleString: true\n  };\n  var getSafeProperty_1 = getSafeProperty;\n  var setSafeProperty_1 = setSafeProperty;\n  var isSafeProperty_1 = isSafeProperty;\n  var validateSafeMethod_1 = validateSafeMethod;\n  var isSafeMethod_1 = isSafeMethod;\n  var isPlainObject_1 = isPlainObject;\n\n  var customs = {\n  \tgetSafeProperty: getSafeProperty_1,\n  \tsetSafeProperty: setSafeProperty_1,\n  \tisSafeProperty: isSafeProperty_1,\n  \tvalidateSafeMethod: validateSafeMethod_1,\n  \tisSafeMethod: isSafeMethod_1,\n  \tisPlainObject: isPlainObject_1\n  };\n\n  var keywords = {\n    end: true\n  };\n\n  function _typeof$5(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$5 = function _typeof(obj) { return typeof obj; }; } else { _typeof$5 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$5(obj); }\n\n\n\n  var deepEqual = object.deepEqual;\n\n  var hasOwnProperty$1 = object.hasOwnProperty;\n\n  function factory$7(type, config, load, typed, math) {\n    /**\n     * Node\n     */\n    function Node() {\n      if (!(this instanceof Node)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n    }\n    /**\n     * Evaluate the node\n     * @param {Object} [scope]  Scope to read/write variables\n     * @return {*}              Returns the result\n     */\n\n\n    Node.prototype.eval = function (scope) {\n      return this.compile().eval(scope);\n    };\n\n    Node.prototype.type = 'Node';\n    Node.prototype.isNode = true;\n    Node.prototype.comment = '';\n    /**\n     * Compile the node into an optimized, evauatable JavaScript function\n     * @return {{eval: function([Object])}} expr  Returns an object with a function 'eval',\n     *                                  which can be invoked as expr.eval([scope: Object]),\n     *                                  where scope is an optional object with\n     *                                  variables.\n     */\n\n    Node.prototype.compile = function () {\n      var expr = this._compile(math.expression.mathWithTransform, {});\n\n      var args = {};\n      var context = null;\n      return {\n        eval: function evalNode(scope) {\n          var s = scope || {};\n\n          _validateScope(s);\n\n          return expr(s, args, context);\n        }\n      };\n    };\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n\n    Node.prototype._compile = function (math, argNames) {\n      throw new Error('Method _compile should be implemented by type ' + this.type);\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    Node.prototype.forEach = function (callback) {\n      // must be implemented by each of the Node implementations\n      throw new Error('Cannot run forEach on a Node interface');\n    };\n    /**\n     * Create a new Node having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {OperatorNode} Returns a transformed copy of the node\n     */\n\n\n    Node.prototype.map = function (callback) {\n      // must be implemented by each of the Node implementations\n      throw new Error('Cannot run map on a Node interface');\n    };\n    /**\n     * Validate whether an object is a Node, for use with map\n     * @param {Node} node\n     * @returns {Node} Returns the input if it's a node, else throws an Error\n     * @protected\n     */\n\n\n    Node.prototype._ifNode = function (node) {\n      if (!type.isNode(node)) {\n        throw new TypeError('Callback function must return a Node');\n      }\n\n      return node;\n    };\n    /**\n     * Recursively traverse all nodes in a node tree. Executes given callback for\n     * this node and each of its child nodes.\n     * @param {function(node: Node, path: string, parent: Node)} callback\n     *          A callback called for every node in the node tree.\n     */\n\n\n    Node.prototype.traverse = function (callback) {\n      // execute callback for itself\n      callback(this, null, null); // eslint-disable-line standard/no-callback-literal\n      // recursively traverse over all childs of a node\n\n      function _traverse(node, callback) {\n        node.forEach(function (child, path, parent) {\n          callback(child, path, parent);\n\n          _traverse(child, callback);\n        });\n      }\n\n      _traverse(this, callback);\n    };\n    /**\n     * Recursively transform a node tree via a transform function.\n     *\n     * For example, to replace all nodes of type SymbolNode having name 'x' with a\n     * ConstantNode with value 2:\n     *\n     *     const res = Node.transform(function (node, path, parent) {\n     *       if (node && node.isSymbolNode) && (node.name === 'x')) {\n     *         return new ConstantNode(2)\n     *       }\n     *       else {\n     *         return node\n     *       }\n     *     })\n     *\n     * @param {function(node: Node, path: string, parent: Node) : Node} callback\n     *          A mapping function accepting a node, and returning\n     *          a replacement for the node or the original node.\n     *          Signature: callback(node: Node, index: string, parent: Node) : Node\n     * @return {Node} Returns the original node or its replacement\n     */\n\n\n    Node.prototype.transform = function (callback) {\n      // traverse over all childs\n      function _transform(node, callback) {\n        return node.map(function (child, path, parent) {\n          var replacement = callback(child, path, parent);\n          return _transform(replacement, callback);\n        });\n      }\n\n      var replacement = callback(this, null, null); // eslint-disable-line standard/no-callback-literal\n\n      return _transform(replacement, callback);\n    };\n    /**\n     * Find any node in the node tree matching given filter function. For example, to\n     * find all nodes of type SymbolNode having name 'x':\n     *\n     *     const results = Node.filter(function (node) {\n     *       return (node && node.isSymbolNode) && (node.name === 'x')\n     *     })\n     *\n     * @param {function(node: Node, path: string, parent: Node) : Node} callback\n     *            A test function returning true when a node matches, and false\n     *            otherwise. Function signature:\n     *            callback(node: Node, index: string, parent: Node) : boolean\n     * @return {Node[]} nodes       An array with nodes matching given filter criteria\n     */\n\n\n    Node.prototype.filter = function (callback) {\n      var nodes = [];\n      this.traverse(function (node, path, parent) {\n        if (callback(node, path, parent)) {\n          nodes.push(node);\n        }\n      });\n      return nodes;\n    }; // TODO: deprecated since version 1.1.0, remove this some day\n\n\n    Node.prototype.find = function () {\n      throw new Error('Function Node.find is deprecated. Use Node.filter instead.');\n    }; // TODO: deprecated since version 1.1.0, remove this some day\n\n\n    Node.prototype.match = function () {\n      throw new Error('Function Node.match is deprecated. See functions Node.filter, Node.transform, Node.traverse.');\n    };\n    /**\n     * Create a shallow clone of this node\n     * @return {Node}\n     */\n\n\n    Node.prototype.clone = function () {\n      // must be implemented by each of the Node implementations\n      throw new Error('Cannot clone a Node interface');\n    };\n    /**\n     * Create a deep clone of this node\n     * @return {Node}\n     */\n\n\n    Node.prototype.cloneDeep = function () {\n      return this.map(function (node) {\n        return node.cloneDeep();\n      });\n    };\n    /**\n     * Deep compare this node with another node.\n     * @param {Node} other\n     * @return {boolean} Returns true when both nodes are of the same type and\n     *                   contain the same values (as do their childs)\n     */\n\n\n    Node.prototype.equals = function (other) {\n      return other ? deepEqual(this, other) : false;\n    };\n    /**\n     * Get string representation. (wrapper function)\n     *\n     * This function can get an object of the following form:\n     * {\n     *    handler: //This can be a callback function of the form\n     *             // \"function callback(node, options)\"or\n     *             // a map that maps function names (used in FunctionNodes)\n     *             // to callbacks\n     *    parenthesis: \"keep\" //the parenthesis option (This is optional)\n     * }\n     *\n     * @param {Object} [options]\n     * @return {string}\n     */\n\n\n    Node.prototype.toString = function (options) {\n      var customString;\n\n      if (options && _typeof$5(options) === 'object') {\n        switch (_typeof$5(options.handler)) {\n          case 'object':\n          case 'undefined':\n            break;\n\n          case 'function':\n            customString = options.handler(this, options);\n            break;\n\n          default:\n            throw new TypeError('Object or function expected as callback');\n        }\n      }\n\n      if (typeof customString !== 'undefined') {\n        return customString;\n      }\n\n      return this._toString(options);\n    };\n    /**\n     * Get a JSON representation of the node\n     * Both .toJSON() and the static .fromJSON(json) should be implemented by all\n     * implementations of Node\n     * @returns {Object}\n     */\n\n\n    Node.prototype.toJSON = function () {\n      throw new Error('Cannot serialize object: toJSON not implemented by ' + this.type);\n    };\n    /**\n     * Get HTML representation. (wrapper function)\n     *\n     * This function can get an object of the following form:\n     * {\n     *    handler: //This can be a callback function of the form\n     *             // \"function callback(node, options)\" or\n     *             // a map that maps function names (used in FunctionNodes)\n     *             // to callbacks\n     *    parenthesis: \"keep\" //the parenthesis option (This is optional)\n     * }\n     *\n     * @param {Object} [options]\n     * @return {string}\n     */\n\n\n    Node.prototype.toHTML = function (options) {\n      var customString;\n\n      if (options && _typeof$5(options) === 'object') {\n        switch (_typeof$5(options.handler)) {\n          case 'object':\n          case 'undefined':\n            break;\n\n          case 'function':\n            customString = options.handler(this, options);\n            break;\n\n          default:\n            throw new TypeError('Object or function expected as callback');\n        }\n      }\n\n      if (typeof customString !== 'undefined') {\n        return customString;\n      }\n\n      return this.toHTML(options);\n    };\n    /**\n     * Internal function to generate the string output.\n     * This has to be implemented by every Node\n     *\n     * @throws {Error}\n     */\n\n\n    Node.prototype._toString = function () {\n      // must be implemented by each of the Node implementations\n      throw new Error('_toString not implemented for ' + this.type);\n    };\n    /**\n     * Get LaTeX representation. (wrapper function)\n     *\n     * This function can get an object of the following form:\n     * {\n     *    handler: //This can be a callback function of the form\n     *             // \"function callback(node, options)\"or\n     *             // a map that maps function names (used in FunctionNodes)\n     *             // to callbacks\n     *    parenthesis: \"keep\" //the parenthesis option (This is optional)\n     * }\n     *\n     * @param {Object} [options]\n     * @return {string}\n     */\n\n\n    Node.prototype.toTex = function (options) {\n      var customTex;\n\n      if (options && _typeof$5(options) === 'object') {\n        switch (_typeof$5(options.handler)) {\n          case 'object':\n          case 'undefined':\n            break;\n\n          case 'function':\n            customTex = options.handler(this, options);\n            break;\n\n          default:\n            throw new TypeError('Object or function expected as callback');\n        }\n      }\n\n      if (typeof customTex !== 'undefined') {\n        return customTex;\n      }\n\n      return this._toTex(options);\n    };\n    /**\n     * Internal function to generate the LaTeX output.\n     * This has to be implemented by every Node\n     *\n     * @param {Object} [options]\n     * @throws {Error}\n     */\n\n\n    Node.prototype._toTex = function (options) {\n      // must be implemented by each of the Node implementations\n      throw new Error('_toTex not implemented for ' + this.type);\n    };\n    /**\n     * Get identifier.\n     * @return {string}\n     */\n\n\n    Node.prototype.getIdentifier = function () {\n      return this.type;\n    };\n    /**\n     * Get the content of the current Node.\n     * @return {Node} node\n     **/\n\n\n    Node.prototype.getContent = function () {\n      return this;\n    };\n    /**\n     * Validate the symbol names of a scope.\n     * Throws an error when the scope contains an illegal symbol.\n     * @param {Object} scope\n     */\n\n\n    function _validateScope(scope) {\n      for (var symbol in scope) {\n        if (hasOwnProperty$1(scope, symbol)) {\n          if (symbol in keywords) {\n            throw new Error('Scope contains an illegal symbol, \"' + symbol + '\" is a reserved keyword');\n          }\n        }\n      }\n    }\n\n    return Node;\n  }\n\n  var name$7 = 'Node';\n  var path$1 = 'expression.node';\n  var math$2 = true; // request access to the math namespace as 5th argument of the factory function\n\n  var factory_1$7 = factory$7;\n\n  var Node = {\n  \tname: name$7,\n  \tpath: path$1,\n  \tmath: math$2,\n  \tfactory: factory_1$7\n  };\n\n  /**\n   * Create a range error with the message:\n   *     'Index out of range (index < min)'\n   *     'Index out of range (index < max)'\n   *\n   * @param {number} index     The actual index\n   * @param {number} [min=0]   Minimum index (included)\n   * @param {number} [max]     Maximum index (excluded)\n   * @extends RangeError\n   */\n\n  function IndexError(index, min, max) {\n    if (!(this instanceof IndexError)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.index = index;\n\n    if (arguments.length < 3) {\n      this.min = 0;\n      this.max = min;\n    } else {\n      this.min = min;\n      this.max = max;\n    }\n\n    if (this.min !== undefined && this.index < this.min) {\n      this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n    } else if (this.max !== undefined && this.index >= this.max) {\n      this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n    } else {\n      this.message = 'Index out of range (' + this.index + ')';\n    }\n\n    this.stack = new Error().stack;\n  }\n\n  IndexError.prototype = new RangeError();\n  IndexError.prototype.constructor = RangeError;\n  IndexError.prototype.name = 'IndexError';\n  IndexError.prototype.isIndexError = true;\n  var IndexError_1 = IndexError;\n\n  /**\n   * Transform zero-based indices to one-based indices in errors\n   * @param {Error} err\n   * @returns {Error} Returns the transformed error\n   */\n\n\n  var transform = function (err) {\n    if (err && err.isIndexError) {\n      return new IndexError_1(err.index + 1, err.min + 1, err.max !== undefined ? err.max + 1 : undefined);\n    }\n\n    return err;\n  };\n\n  var error_transform = {\n  \ttransform: transform\n  };\n\n  var formatter = createCommonjsModule(function (module, exports) {\n\n\n  /**\n   * Convert a BigNumber to a formatted string representation.\n   *\n   * Syntax:\n   *\n   *    format(value)\n   *    format(value, options)\n   *    format(value, precision)\n   *    format(value, fn)\n   *\n   * Where:\n   *\n   *    {number} value   The value to be formatted\n   *    {Object} options An object with formatting options. Available options:\n   *                     {string} notation\n   *                         Number notation. Choose from:\n   *                         'fixed'          Always use regular number notation.\n   *                                          For example '123.40' and '14000000'\n   *                         'exponential'    Always use exponential notation.\n   *                                          For example '1.234e+2' and '1.4e+7'\n   *                         'auto' (default) Regular number notation for numbers\n   *                                          having an absolute value between\n   *                                          `lower` and `upper` bounds, and uses\n   *                                          exponential notation elsewhere.\n   *                                          Lower bound is included, upper bound\n   *                                          is excluded.\n   *                                          For example '123.4' and '1.4e7'.\n   *                     {number} precision   A number between 0 and 16 to round\n   *                                          the digits of the number.\n   *                                          In case of notations 'exponential',\n   *                                          'engineering', and 'auto',\n   *                                          `precision` defines the total\n   *                                          number of significant digits returned.\n   *                                          In case of notation 'fixed',\n   *                                          `precision` defines the number of\n   *                                          significant digits after the decimal\n   *                                          point.\n   *                                          `precision` is undefined by default.\n   *                     {number} lowerExp    Exponent determining the lower boundary\n   *                                          for formatting a value with an exponent\n   *                                          when `notation='auto`.\n   *                                          Default value is `-3`.\n   *                     {number} upperExp    Exponent determining the upper boundary\n   *                                          for formatting a value with an exponent\n   *                                          when `notation='auto`.\n   *                                          Default value is `5`.\n   *    {Function} fn    A custom formatting function. Can be used to override the\n   *                     built-in notations. Function `fn` is called with `value` as\n   *                     parameter and must return a string. Is useful for example to\n   *                     format all values inside a matrix in a particular way.\n   *\n   * Examples:\n   *\n   *    format(6.4)                                        // '6.4'\n   *    format(1240000)                                    // '1.24e6'\n   *    format(1/3)                                        // '0.3333333333333333'\n   *    format(1/3, 3)                                     // '0.333'\n   *    format(21385, 2)                                   // '21000'\n   *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n   *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n   *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n   *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n   *\n   * @param {BigNumber} value\n   * @param {Object | Function | number} [options]\n   * @return {string} str The formatted value\n   */\n\n\n  exports.format = function (value, options) {\n    if (typeof options === 'function') {\n      // handle format(value, fn)\n      return options(value);\n    } // handle special cases\n\n\n    if (!value.isFinite()) {\n      return value.isNaN() ? 'NaN' : value.gt(0) ? 'Infinity' : '-Infinity';\n    } // default values for options\n\n\n    var notation = 'auto';\n    var precision;\n\n    if (options !== undefined) {\n      // determine notation from options\n      if (options.notation) {\n        notation = options.notation;\n      } // determine precision from options\n\n\n      if (typeof options === 'number') {\n        precision = options;\n      } else if (options.precision) {\n        precision = options.precision;\n      }\n    } // handle the various notations\n\n\n    switch (notation) {\n      case 'fixed':\n        return exports.toFixed(value, precision);\n\n      case 'exponential':\n        return exports.toExponential(value, precision);\n\n      case 'engineering':\n        return exports.toEngineering(value, precision);\n\n      case 'auto':\n        // TODO: clean up some day. Deprecated since: 2018-01-24\n        // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n        if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n          var fixedOptions = object.map(options, function (x) {\n            return x;\n          });\n          fixedOptions.exponential = undefined;\n\n          if (options.exponential.lower !== undefined) {\n            fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10);\n          }\n\n          if (options.exponential.upper !== undefined) {\n            fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10);\n          }\n\n          console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' + '(minimum and maximum value) ' + 'are replaced with exponential.lowerExp and exponential.upperExp ' + '(minimum and maximum exponent) since version 4.0.0. ' + 'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions));\n          return exports.format(value, fixedOptions);\n        } // determine lower and upper bound for exponential notation.\n        // TODO: implement support for upper and lower to be BigNumbers themselves\n\n\n        var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n        var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5; // handle special case zero\n\n        if (value.isZero()) return '0'; // determine whether or not to output exponential notation\n\n        var str;\n        var exp = value.e;\n\n        if (exp >= lowerExp && exp < upperExp) {\n          // normal number notation\n          str = value.toSignificantDigits(precision).toFixed();\n        } else {\n          // exponential notation\n          str = exports.toExponential(value, precision);\n        } // remove trailing zeros after the decimal point\n\n\n        return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          var digits = arguments[2];\n          var e = arguments[4];\n          return digits !== '.' ? digits + e : e;\n        });\n\n      default:\n        throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n    }\n  };\n  /**\n   * Format a BigNumber in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n   * @param {BigNumber | string} value\n   * @param {number} [precision]        Optional number of significant figures to return.\n   */\n\n\n  exports.toEngineering = function (value, precision) {\n    // find nearest lower multiple of 3 for exponent\n    var e = value.e;\n    var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3; // find difference in exponents, and calculate the value without exponent\n\n    var expDiff = Math.abs(e - newExp);\n    var valueWithoutExp = value.mul(Math.pow(10, expDiff - e));\n    return valueWithoutExp.toPrecision(precision).toString() + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  };\n  /**\n   * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n   * @param {BigNumber} value\n   * @param {number} [precision]  Number of digits in formatted output.\n   *                              If not provided, the maximum available digits\n   *                              is used.\n   * @returns {string} str\n   */\n\n\n  exports.toExponential = function (value, precision) {\n    if (precision !== undefined) {\n      return value.toExponential(precision - 1); // Note the offset of one\n    } else {\n      return value.toExponential();\n    }\n  };\n  /**\n   * Format a number with fixed notation.\n   * @param {BigNumber} value\n   * @param {number} [precision=undefined] Optional number of decimals after the\n   *                                       decimal point. Undefined by default.\n   */\n\n\n  exports.toFixed = function (value, precision) {\n    return value.toFixed(precision);\n  };\n  });\n  var formatter_1 = formatter.format;\n  var formatter_2 = formatter.toEngineering;\n  var formatter_3 = formatter.toExponential;\n  var formatter_4 = formatter.toFixed;\n\n  var string = createCommonjsModule(function (module, exports) {\n\n  function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var formatNumber = number.format;\n\n  var formatBigNumber = formatter.format;\n\n\n  /**\n   * Test whether value is a string\n   * @param {*} value\n   * @return {boolean} isString\n   */\n\n\n  exports.isString = function (value) {\n    return typeof value === 'string';\n  };\n  /**\n   * Check if a text ends with a certain string.\n   * @param {string} text\n   * @param {string} search\n   */\n\n\n  exports.endsWith = function (text, search) {\n    var start = text.length - search.length;\n    var end = text.length;\n    return text.substring(start, end) === search;\n  };\n  /**\n   * Format a value of any type into a string.\n   *\n   * Usage:\n   *     math.format(value)\n   *     math.format(value, precision)\n   *\n   * When value is a function:\n   *\n   * - When the function has a property `syntax`, it returns this\n   *   syntax description.\n   * - In other cases, a string `'function'` is returned.\n   *\n   * When `value` is an Object:\n   *\n   * - When the object contains a property `format` being a function, this\n   *   function is invoked as `value.format(options)` and the result is returned.\n   * - When the object has its own `toString` method, this method is invoked\n   *   and the result is returned.\n   * - In other cases the function will loop over all object properties and\n   *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n   *\n   * Example usage:\n   *     math.format(2/7)                // '0.2857142857142857'\n   *     math.format(math.pi, 3)         // '3.14'\n   *     math.format(new Complex(2, 3))  // '2 + 3i'\n   *     math.format('hello')            // '\"hello\"'\n   *\n   * @param {*} value             Value to be stringified\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string} str\n   */\n\n\n  exports.format = function (value, options) {\n    if (typeof value === 'number') {\n      return formatNumber(value, options);\n    }\n\n    if (isBigNumber(value)) {\n      return formatBigNumber(value, options);\n    } // note: we use unsafe duck-typing here to check for Fractions, this is\n    // ok here since we're only invoking toString or concatenating its values\n\n\n    if (looksLikeFraction(value)) {\n      if (!options || options.fraction !== 'decimal') {\n        // output as ratio, like '1/3'\n        return value.s * value.n + '/' + value.d;\n      } else {\n        // output as decimal, like '0.(3)'\n        return value.toString();\n      }\n    }\n\n    if (Array.isArray(value)) {\n      return formatArray(value, options);\n    }\n\n    if (exports.isString(value)) {\n      return '\"' + value + '\"';\n    }\n\n    if (typeof value === 'function') {\n      return value.syntax ? String(value.syntax) : 'function';\n    }\n\n    if (value && _typeof(value) === 'object') {\n      if (typeof value.format === 'function') {\n        return value.format(options);\n      } else if (value && value.toString() !== {}.toString()) {\n        // this object has a non-native toString method, use that one\n        return value.toString();\n      } else {\n        var entries = [];\n\n        for (var key in value) {\n          if (value.hasOwnProperty(key)) {\n            entries.push('\"' + key + '\": ' + exports.format(value[key], options));\n          }\n        }\n\n        return '{' + entries.join(', ') + '}';\n      }\n    }\n\n    return String(value);\n  };\n  /**\n   * Stringify a value into a string enclosed in double quotes.\n   * Unescaped double quotes and backslashes inside the value are escaped.\n   * @param {*} value\n   * @return {string}\n   */\n\n\n  exports.stringify = function (value) {\n    var text = String(value);\n    var escaped = '';\n    var i = 0;\n\n    while (i < text.length) {\n      var c = text.charAt(i);\n\n      if (c === '\\\\') {\n        escaped += c;\n        i++;\n        c = text.charAt(i);\n\n        if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n          escaped += '\\\\'; // no valid escape character -> escape it\n        }\n\n        escaped += c;\n      } else if (c === '\"') {\n        escaped += '\\\\\"';\n      } else {\n        escaped += c;\n      }\n\n      i++;\n    }\n\n    return '\"' + escaped + '\"';\n  };\n  /**\n   * Escape special HTML characters\n   * @param {*} value\n   * @return {string}\n   */\n\n\n  exports.escape = function (value) {\n    var text = String(value);\n    text = text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    return text;\n  };\n  /**\n   * Recursively format an n-dimensional matrix\n   * Example output: \"[[1, 2], [3, 4]]\"\n   * @param {Array} array\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  function formatArray(array, options) {\n    if (Array.isArray(array)) {\n      var str = '[';\n      var len = array.length;\n\n      for (var i = 0; i < len; i++) {\n        if (i !== 0) {\n          str += ', ';\n        }\n\n        str += formatArray(array[i], options);\n      }\n\n      str += ']';\n      return str;\n    } else {\n      return exports.format(array, options);\n    }\n  }\n  /**\n   * Check whether a value looks like a Fraction (unsafe duck-type check)\n   * @param {*} value\n   * @return {boolean}\n   */\n\n\n  function looksLikeFraction(value) {\n    return value && _typeof(value) === 'object' && typeof value.s === 'number' && typeof value.n === 'number' && typeof value.d === 'number' || false;\n  }\n  });\n  var string_1 = string.isString;\n  var string_2 = string.endsWith;\n  var string_3 = string.format;\n  var string_4 = string.stringify;\n  var string_5 = string.escape;\n\n  /**\n   * Create a range error with the message:\n   *     'Dimension mismatch (<actual size> != <expected size>)'\n   * @param {number | number[]} actual        The actual size\n   * @param {number | number[]} expected      The expected size\n   * @param {string} [relation='!=']          Optional relation between actual\n   *                                          and expected size: '!=', '<', etc.\n   * @extends RangeError\n   */\n\n  function DimensionError(actual, expected, relation) {\n    if (!(this instanceof DimensionError)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.actual = actual;\n    this.expected = expected;\n    this.relation = relation;\n    this.message = 'Dimension mismatch (' + (Array.isArray(actual) ? '[' + actual.join(', ') + ']' : actual) + ' ' + (this.relation || '!=') + ' ' + (Array.isArray(expected) ? '[' + expected.join(', ') + ']' : expected) + ')';\n    this.stack = new Error().stack;\n  }\n\n  DimensionError.prototype = new RangeError();\n  DimensionError.prototype.constructor = RangeError;\n  DimensionError.prototype.name = 'DimensionError';\n  DimensionError.prototype.isDimensionError = true;\n  var DimensionError_1 = DimensionError;\n\n  var array = createCommonjsModule(function (module, exports) {\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.size = size;\n  exports.validate = validate;\n  exports.validateIndex = validateIndex;\n  exports.resize = resize;\n  exports.reshape = reshape;\n  exports.squeeze = squeeze;\n  exports.unsqueeze = unsqueeze;\n  exports.flatten = flatten;\n  exports.map = map;\n  exports.forEach = forEach;\n  exports.filter = filter;\n  exports.filterRegExp = filterRegExp;\n  exports.join = join;\n  exports.identify = identify;\n  exports.generalize = generalize;\n\n  var _number = _interopRequireDefault(number);\n\n  var _string = _interopRequireDefault(string);\n\n  var _DimensionError = _interopRequireDefault(DimensionError_1);\n\n  var _IndexError = _interopRequireDefault(IndexError_1);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  /**\n   * Calculate the size of a multi dimensional array.\n   * This function checks the size of the first entry, it does not validate\n   * whether all dimensions match. (use function `validate` for that)\n   * @param {Array} x\n   * @Return {Number[]} size\n   */\n  function size(x) {\n    var s = [];\n\n    while (Array.isArray(x)) {\n      s.push(x.length);\n      x = x[0];\n    }\n\n    return s;\n  }\n  /**\n   * Recursively validate whether each element in a multi dimensional array\n   * has a size corresponding to the provided size array.\n   * @param {Array} array    Array to be validated\n   * @param {number[]} size  Array with the size of each dimension\n   * @param {number} dim   Current dimension\n   * @throws DimensionError\n   * @private\n   */\n\n\n  function _validate(array, size, dim) {\n    var i;\n    var len = array.length;\n\n    if (len !== size[dim]) {\n      throw new _DimensionError[\"default\"](len, size[dim]);\n    }\n\n    if (dim < size.length - 1) {\n      // recursively validate each child array\n      var dimNext = dim + 1;\n\n      for (i = 0; i < len; i++) {\n        var child = array[i];\n\n        if (!Array.isArray(child)) {\n          throw new _DimensionError[\"default\"](size.length - 1, size.length, '<');\n        }\n\n        _validate(array[i], size, dimNext);\n      }\n    } else {\n      // last dimension. none of the childs may be an array\n      for (i = 0; i < len; i++) {\n        if (Array.isArray(array[i])) {\n          throw new _DimensionError[\"default\"](size.length + 1, size.length, '>');\n        }\n      }\n    }\n  }\n  /**\n   * Validate whether each element in a multi dimensional array has\n   * a size corresponding to the provided size array.\n   * @param {Array} array    Array to be validated\n   * @param {number[]} size  Array with the size of each dimension\n   * @throws DimensionError\n   */\n\n\n  function validate(array, size) {\n    var isScalar = size.length === 0;\n\n    if (isScalar) {\n      // scalar\n      if (Array.isArray(array)) {\n        throw new _DimensionError[\"default\"](array.length, 0);\n      }\n    } else {\n      // array\n      _validate(array, size, 0);\n    }\n  }\n  /**\n   * Test whether index is an integer number with index >= 0 and index < length\n   * when length is provided\n   * @param {number} index    Zero-based index\n   * @param {number} [length] Length of the array\n   */\n\n\n  function validateIndex(index, length) {\n    if (!_number[\"default\"].isNumber(index) || !_number[\"default\"].isInteger(index)) {\n      throw new TypeError('Index must be an integer (value: ' + index + ')');\n    }\n\n    if (index < 0 || typeof length === 'number' && index >= length) {\n      throw new _IndexError[\"default\"](index, length);\n    }\n  }\n  /**\n   * Resize a multi dimensional array. The resized array is returned.\n   * @param {Array} array         Array to be resized\n   * @param {Array.<number>} size Array with the size of each dimension\n   * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n   *                              zero by default. Specify for example `null`,\n   *                              to clearly see entries that are not explicitly\n   *                              set.\n   * @return {Array} array         The resized array\n   */\n\n\n  function resize(array, size, defaultValue) {\n    // TODO: add support for scalars, having size=[] ?\n    // check the type of the arguments\n    if (!Array.isArray(array) || !Array.isArray(size)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (size.length === 0) {\n      throw new Error('Resizing to scalar is not supported');\n    } // check whether size contains positive integers\n\n\n    size.forEach(function (value) {\n      if (!_number[\"default\"].isNumber(value) || !_number[\"default\"].isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + _string[\"default\"].format(size) + ')');\n      }\n    }); // recursively resize the array\n\n    var _defaultValue = defaultValue !== undefined ? defaultValue : 0;\n\n    _resize(array, size, 0, _defaultValue);\n\n    return array;\n  }\n  /**\n   * Recursively resize a multi dimensional array\n   * @param {Array} array         Array to be resized\n   * @param {number[]} size       Array with the size of each dimension\n   * @param {number} dim          Current dimension\n   * @param {*} [defaultValue]    Value to be filled in in new entries,\n   *                              undefined by default.\n   * @private\n   */\n\n\n  function _resize(array, size, dim, defaultValue) {\n    var i;\n    var elem;\n    var oldLen = array.length;\n    var newLen = size[dim];\n    var minLen = Math.min(oldLen, newLen); // apply new length\n\n    array.length = newLen;\n\n    if (dim < size.length - 1) {\n      // non-last dimension\n      var dimNext = dim + 1; // resize existing child arrays\n\n      for (i = 0; i < minLen; i++) {\n        // resize child array\n        elem = array[i];\n\n        if (!Array.isArray(elem)) {\n          elem = [elem]; // add a dimension\n\n          array[i] = elem;\n        }\n\n        _resize(elem, size, dimNext, defaultValue);\n      } // create new child arrays\n\n\n      for (i = minLen; i < newLen; i++) {\n        // get child array\n        elem = [];\n        array[i] = elem; // resize new child array\n\n        _resize(elem, size, dimNext, defaultValue);\n      }\n    } else {\n      // last dimension\n      // remove dimensions of existing values\n      for (i = 0; i < minLen; i++) {\n        while (Array.isArray(array[i])) {\n          array[i] = array[i][0];\n        }\n      } // fill new elements with the default value\n\n\n      for (i = minLen; i < newLen; i++) {\n        array[i] = defaultValue;\n      }\n    }\n  }\n  /**\n   * Re-shape a multi dimensional array to fit the specified dimensions\n   * @param {Array} array           Array to be reshaped\n   * @param {Array.<number>} sizes  List of sizes for each dimension\n   * @returns {Array}               Array whose data has been formatted to fit the\n   *                                specified dimensions\n   *\n   * @throws {DimensionError}       If the product of the new dimension sizes does\n   *                                not equal that of the old ones\n   */\n\n\n  function reshape(array, sizes) {\n    var flatArray = flatten(array);\n    var newArray;\n\n    function product(arr) {\n      return arr.reduce(function (prev, curr) {\n        return prev * curr;\n      });\n    }\n\n    if (!Array.isArray(array) || !Array.isArray(sizes)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (sizes.length === 0) {\n      throw new _DimensionError[\"default\"](0, product(size(array)), '!=');\n    }\n\n    var totalSize = 1;\n\n    for (var sizeIndex = 0; sizeIndex < sizes.length; sizeIndex++) {\n      totalSize *= sizes[sizeIndex];\n    }\n\n    if (flatArray.length !== totalSize) {\n      throw new _DimensionError[\"default\"](product(sizes), product(size(array)), '!=');\n    }\n\n    try {\n      newArray = _reshape(flatArray, sizes);\n    } catch (e) {\n      if (e instanceof _DimensionError[\"default\"]) {\n        throw new _DimensionError[\"default\"](product(sizes), product(size(array)), '!=');\n      }\n\n      throw e;\n    }\n\n    return newArray;\n  }\n  /**\n   * Iteratively re-shape a multi dimensional array to fit the specified dimensions\n   * @param {Array} array           Array to be reshaped\n   * @param {Array.<number>} sizes  List of sizes for each dimension\n   * @returns {Array}               Array whose data has been formatted to fit the\n   *                                specified dimensions\n   */\n\n\n  function _reshape(array, sizes) {\n    // testing if there are enough elements for the requested shape\n    var tmpArray = array;\n    var tmpArray2; // for each dimensions starting by the last one and ignoring the first one\n\n    for (var sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {\n      var size = sizes[sizeIndex];\n      tmpArray2 = []; // aggregate the elements of the current tmpArray in elements of the requested size\n\n      var length = tmpArray.length / size;\n\n      for (var i = 0; i < length; i++) {\n        tmpArray2.push(tmpArray.slice(i * size, (i + 1) * size));\n      } // set it as the new tmpArray for the next loop turn or for return\n\n\n      tmpArray = tmpArray2;\n    }\n\n    return tmpArray;\n  }\n  /**\n   * Squeeze a multi dimensional array\n   * @param {Array} array\n   * @param {Array} [arraySize]\n   * @returns {Array} returns the array itself\n   */\n\n\n  function squeeze(array, arraySize) {\n    var s = arraySize || size(array); // squeeze outer dimensions\n\n    while (Array.isArray(array) && array.length === 1) {\n      array = array[0];\n      s.shift();\n    } // find the first dimension to be squeezed\n\n\n    var dims = s.length;\n\n    while (s[dims - 1] === 1) {\n      dims--;\n    } // squeeze inner dimensions\n\n\n    if (dims < s.length) {\n      array = _squeeze(array, dims, 0);\n      s.length = dims;\n    }\n\n    return array;\n  }\n  /**\n   * Recursively squeeze a multi dimensional array\n   * @param {Array} array\n   * @param {number} dims Required number of dimensions\n   * @param {number} dim  Current dimension\n   * @returns {Array | *} Returns the squeezed array\n   * @private\n   */\n\n\n  function _squeeze(array, dims, dim) {\n    var i, ii;\n\n    if (dim < dims) {\n      var next = dim + 1;\n\n      for (i = 0, ii = array.length; i < ii; i++) {\n        array[i] = _squeeze(array[i], dims, next);\n      }\n    } else {\n      while (Array.isArray(array)) {\n        array = array[0];\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Unsqueeze a multi dimensional array: add dimensions when missing\n   *\n   * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n   *\n   * @param {Array} array\n   * @param {number} dims       Desired number of dimensions of the array\n   * @param {number} [outer]    Number of outer dimensions to be added\n   * @param {Array} [arraySize] Current size of array.\n   * @returns {Array} returns the array itself\n   * @private\n   */\n\n\n  function unsqueeze(array, dims, outer, arraySize) {\n    var s = arraySize || size(array); // unsqueeze outer dimensions\n\n    if (outer) {\n      for (var i = 0; i < outer; i++) {\n        array = [array];\n        s.unshift(1);\n      }\n    } // unsqueeze inner dimensions\n\n\n    array = _unsqueeze(array, dims, 0);\n\n    while (s.length < dims) {\n      s.push(1);\n    }\n\n    return array;\n  }\n  /**\n   * Recursively unsqueeze a multi dimensional array\n   * @param {Array} array\n   * @param {number} dims Required number of dimensions\n   * @param {number} dim  Current dimension\n   * @returns {Array | *} Returns the squeezed array\n   * @private\n   */\n\n\n  function _unsqueeze(array, dims, dim) {\n    var i, ii;\n\n    if (Array.isArray(array)) {\n      var next = dim + 1;\n\n      for (i = 0, ii = array.length; i < ii; i++) {\n        array[i] = _unsqueeze(array[i], dims, next);\n      }\n    } else {\n      for (var d = dim; d < dims; d++) {\n        array = [array];\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Flatten a multi dimensional array, put all elements in a one dimensional\n   * array\n   * @param {Array} array   A multi dimensional array\n   * @return {Array}        The flattened array (1 dimensional)\n   */\n\n\n  function flatten(array) {\n    if (!Array.isArray(array)) {\n      // if not an array, return as is\n      return array;\n    }\n\n    var flat = [];\n    array.forEach(function callback(value) {\n      if (Array.isArray(value)) {\n        value.forEach(callback); // traverse through sub-arrays recursively\n      } else {\n        flat.push(value);\n      }\n    });\n    return flat;\n  }\n  /**\n   * A safe map\n   * @param {Array} array\n   * @param {function} callback\n   */\n\n\n  function map(array, callback) {\n    return Array.prototype.map.call(array, callback);\n  }\n  /**\n   * A safe forEach\n   * @param {Array} array\n   * @param {function} callback\n   */\n\n\n  function forEach(array, callback) {\n    Array.prototype.forEach.call(array, callback);\n  }\n  /**\n   * A safe filter\n   * @param {Array} array\n   * @param {function} callback\n   */\n\n\n  function filter(array, callback) {\n    if (size(array).length !== 1) {\n      throw new Error('Only one dimensional matrices supported');\n    }\n\n    return Array.prototype.filter.call(array, callback);\n  }\n  /**\n   * Filter values in a callback given a regular expression\n   * @param {Array} array\n   * @param {RegExp} regexp\n   * @return {Array} Returns the filtered array\n   * @private\n   */\n\n\n  function filterRegExp(array, regexp) {\n    if (size(array).length !== 1) {\n      throw new Error('Only one dimensional matrices supported');\n    }\n\n    return Array.prototype.filter.call(array, function (entry) {\n      return regexp.test(entry);\n    });\n  }\n  /**\n   * A safe join\n   * @param {Array} array\n   * @param {string} separator\n   */\n\n\n  function join(array, separator) {\n    return Array.prototype.join.call(array, separator);\n  }\n  /**\n   * Assign a numeric identifier to every element of a sorted array\n   * @param {Array} a  An array\n   * @return {Array} An array of objects containing the original value and its identifier\n   */\n\n\n  function identify(a) {\n    if (!Array.isArray(a)) {\n      throw new TypeError('Array input expected');\n    }\n\n    if (a.length === 0) {\n      return a;\n    }\n\n    var b = [];\n    var count = 0;\n    b[0] = {\n      value: a[0],\n      identifier: 0\n    };\n\n    for (var i = 1; i < a.length; i++) {\n      if (a[i] === a[i - 1]) {\n        count++;\n      } else {\n        count = 0;\n      }\n\n      b.push({\n        value: a[i],\n        identifier: count\n      });\n    }\n\n    return b;\n  }\n  /**\n   * Remove the numeric identifier from the elements\n   * @param {array} a  An array\n   * @return {array} An array of values without identifiers\n   */\n\n\n  function generalize(a) {\n    if (!Array.isArray(a)) {\n      throw new TypeError('Array input expected');\n    }\n\n    if (a.length === 0) {\n      return a;\n    }\n\n    var b = [];\n\n    for (var i = 0; i < a.length; i++) {\n      b.push(a[i].value);\n    }\n\n    return b;\n  }\n  });\n\n  unwrapExports(array);\n  var array_1 = array.size;\n  var array_2 = array.validate;\n  var array_3 = array.validateIndex;\n  var array_4 = array.resize;\n  var array_5 = array.reshape;\n  var array_6 = array.squeeze;\n  var array_7 = array.unsqueeze;\n  var array_8 = array.flatten;\n  var array_9 = array.map;\n  var array_10 = array.forEach;\n  var array_11 = array.filter;\n  var array_12 = array.filterRegExp;\n  var array_13 = array.join;\n  var array_14 = array.identify;\n  var array_15 = array.generalize;\n\n  function factory$8(type, config, load, typed) {\n    /**\n     * Create a Matrix. The function creates a new `math.type.Matrix` object from\n     * an `Array`. A Matrix has utility functions to manipulate the data in the\n     * matrix, like getting the size and getting or setting values in the matrix.\n     * Supported storage formats are 'dense' and 'sparse'.\n     *\n     * Syntax:\n     *\n     *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n     *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n     *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n     *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n     *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n     *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n     *\n     * Examples:\n     *\n     *    let m = math.matrix([[1, 2], [3, 4]])\n     *    m.size()                        // Array [2, 2]\n     *    m.resize([3, 2], 5)\n     *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]\n     *    m.get([1, 0])                    // number 3\n     *\n     * See also:\n     *\n     *    bignumber, boolean, complex, index, number, string, unit, sparse\n     *\n     * @param {Array | Matrix} [data]    A multi dimensional array\n     * @param {string} [format]          The Matrix storage format\n     *\n     * @return {Matrix} The created matrix\n     */\n    var matrix = typed('matrix', {\n      '': function _() {\n        return _create([]);\n      },\n      'string': function string(format) {\n        return _create([], format);\n      },\n      'string, string': function stringString(format, datatype) {\n        return _create([], format, datatype);\n      },\n      'Array': function Array(data) {\n        return _create(data);\n      },\n      'Matrix': function Matrix(data) {\n        return _create(data, data.storage());\n      },\n      'Array | Matrix, string': _create,\n      'Array | Matrix, string, string': _create\n    });\n    matrix.toTex = {\n      0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n      1: \"\\\\left(${args[0]}\\\\right)\",\n      2: \"\\\\left(${args[0]}\\\\right)\"\n    };\n    return matrix;\n    /**\n     * Create a new Matrix with given storage format\n     * @param {Array} data\n     * @param {string} [format]\n     * @param {string} [datatype]\n     * @returns {Matrix} Returns a new Matrix\n     * @private\n     */\n\n    function _create(data, format, datatype) {\n      // get storage format constructor\n      var M = type.Matrix.storage(format || 'default'); // create instance\n\n      return new M(data, datatype);\n    }\n  }\n\n  var name$8 = 'matrix';\n  var factory_1$8 = factory$8;\n\n  var matrix = {\n  \tname: name$8,\n  \tfactory: factory_1$8\n  };\n\n  var clone = object.clone;\n\n  var validateIndex = array.validateIndex;\n\n  var getSafeProperty$1 = customs.getSafeProperty;\n\n  var setSafeProperty$1 = customs.setSafeProperty;\n\n\n\n  function factory$9(type, config, load, typed) {\n    var matrix$1 = load(matrix);\n    /**\n     * Get or set a subset of a matrix or string.\n     *\n     * Syntax:\n     *     math.subset(value, index)                                // retrieve a subset\n     *     math.subset(value, index, replacement [, defaultValue])  // replace a subset\n     *\n     * Examples:\n     *\n     *     // get a subset\n     *     const d = [[1, 2], [3, 4]]\n     *     math.subset(d, math.index(1, 0))        // returns 3\n     *     math.subset(d, math.index([0, 1], 1))   // returns [[2], [4]]\n     *\n     *     // replace a subset\n     *     const e = []\n     *     const f = math.subset(e, math.index(0, [0, 2]), [5, 6])  // f = [[5, 6]]\n     *     const g = math.subset(f, math.index(1, 1), 7, 0)         // g = [[5, 6], [0, 7]]\n     *\n     * See also:\n     *\n     *     size, resize, squeeze, index\n     *\n     * @param {Array | Matrix | string} matrix  An array, matrix, or string\n     * @param {Index} index                     An index containing ranges for each\n     *                                          dimension\n     * @param {*} [replacement]                 An array, matrix, or scalar.\n     *                                          If provided, the subset is replaced with replacement.\n     *                                          If not provided, the subset is returned\n     * @param {*} [defaultValue=undefined]      Default value, filled in on new entries when\n     *                                          the matrix is resized. If not provided,\n     *                                          math.matrix elements will be left undefined.\n     * @return {Array | Matrix | string} Either the retrieved subset or the updated matrix.\n     */\n\n    var subset = typed('subset', {\n      // get subset\n      'Array, Index': function ArrayIndex(value, index) {\n        var m = matrix$1(value);\n        var subset = m.subset(index); // returns a Matrix\n\n        return index.isScalar() ? subset : subset.valueOf(); // return an Array (like the input)\n      },\n      'Matrix, Index': function MatrixIndex(value, index) {\n        return value.subset(index);\n      },\n      'Object, Index': _getObjectProperty,\n      'string, Index': _getSubstring,\n      // set subset\n      'Array, Index, any': function ArrayIndexAny(value, index, replacement) {\n        return matrix$1(clone(value)).subset(index, replacement, undefined).valueOf();\n      },\n      'Array, Index, any, any': function ArrayIndexAnyAny(value, index, replacement, defaultValue) {\n        return matrix$1(clone(value)).subset(index, replacement, defaultValue).valueOf();\n      },\n      'Matrix, Index, any': function MatrixIndexAny(value, index, replacement) {\n        return value.clone().subset(index, replacement);\n      },\n      'Matrix, Index, any, any': function MatrixIndexAnyAny(value, index, replacement, defaultValue) {\n        return value.clone().subset(index, replacement, defaultValue);\n      },\n      'string, Index, string': _setSubstring,\n      'string, Index, string, string': _setSubstring,\n      'Object, Index, any': _setObjectProperty\n    });\n    subset.toTex = undefined; // use default template\n\n    return subset;\n    /**\n     * Retrieve a subset of a string\n     * @param {string} str            string from which to get a substring\n     * @param {Index} index           An index containing ranges for each dimension\n     * @returns {string} substring\n     * @private\n     */\n\n    function _getSubstring(str, index) {\n      if (!type.isIndex(index)) {\n        // TODO: better error message\n        throw new TypeError('Index expected');\n      }\n\n      if (index.size().length !== 1) {\n        throw new DimensionError_1(index.size().length, 1);\n      } // validate whether the range is out of range\n\n\n      var strLen = str.length;\n      validateIndex(index.min()[0], strLen);\n      validateIndex(index.max()[0], strLen);\n      var range = index.dimension(0);\n      var substr = '';\n      range.forEach(function (v) {\n        substr += str.charAt(v);\n      });\n      return substr;\n    }\n    /**\n     * Replace a substring in a string\n     * @param {string} str            string to be replaced\n     * @param {Index} index           An index containing ranges for each dimension\n     * @param {string} replacement    Replacement string\n     * @param {string} [defaultValue] Default value to be uses when resizing\n     *                                the string. is ' ' by default\n     * @returns {string} result\n     * @private\n     */\n\n\n    function _setSubstring(str, index, replacement, defaultValue) {\n      if (!index || index.isIndex !== true) {\n        // TODO: better error message\n        throw new TypeError('Index expected');\n      }\n\n      if (index.size().length !== 1) {\n        throw new DimensionError_1(index.size().length, 1);\n      }\n\n      if (defaultValue !== undefined) {\n        if (typeof defaultValue !== 'string' || defaultValue.length !== 1) {\n          throw new TypeError('Single character expected as defaultValue');\n        }\n      } else {\n        defaultValue = ' ';\n      }\n\n      var range = index.dimension(0);\n      var len = range.size()[0];\n\n      if (len !== replacement.length) {\n        throw new DimensionError_1(range.size()[0], replacement.length);\n      } // validate whether the range is out of range\n\n\n      var strLen = str.length;\n      validateIndex(index.min()[0]);\n      validateIndex(index.max()[0]); // copy the string into an array with characters\n\n      var chars = [];\n\n      for (var i = 0; i < strLen; i++) {\n        chars[i] = str.charAt(i);\n      }\n\n      range.forEach(function (v, i) {\n        chars[v] = replacement.charAt(i[0]);\n      }); // initialize undefined characters with a space\n\n      if (chars.length > strLen) {\n        for (var _i = strLen - 1, _len = chars.length; _i < _len; _i++) {\n          if (!chars[_i]) {\n            chars[_i] = defaultValue;\n          }\n        }\n      }\n\n      return chars.join('');\n    }\n  }\n  /**\n   * Retrieve a property from an object\n   * @param {Object} object\n   * @param {Index} index\n   * @return {*} Returns the value of the property\n   * @private\n   */\n\n\n  function _getObjectProperty(object, index) {\n    if (index.size().length !== 1) {\n      throw new DimensionError_1(index.size(), 1);\n    }\n\n    var key = index.dimension(0);\n\n    if (typeof key !== 'string') {\n      throw new TypeError('String expected as index to retrieve an object property');\n    }\n\n    return getSafeProperty$1(object, key);\n  }\n  /**\n   * Set a property on an object\n   * @param {Object} object\n   * @param {Index} index\n   * @param {*} replacement\n   * @return {*} Returns the updated object\n   * @private\n   */\n\n\n  function _setObjectProperty(object, index, replacement) {\n    if (index.size().length !== 1) {\n      throw new DimensionError_1(index.size(), 1);\n    }\n\n    var key = index.dimension(0);\n\n    if (typeof key !== 'string') {\n      throw new TypeError('String expected as index to retrieve an object property');\n    } // clone the object, and apply the property to the clone\n\n\n    var updated = clone(object);\n    setSafeProperty$1(updated, key, replacement);\n    return updated;\n  }\n\n  var name$9 = 'subset';\n  var factory_1$9 = factory$9;\n\n  var subset = {\n  \tname: name$9,\n  \tfactory: factory_1$9\n  };\n\n  function _typeof$6(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$6 = function _typeof(obj) { return typeof obj; }; } else { _typeof$6 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$6(obj); }\n\n  var errorTransform = error_transform.transform;\n\n  var getSafeProperty$2 = customs.getSafeProperty;\n\n  function factory$a(type, config, load, typed) {\n    var subset$1 = load(subset);\n    /**\n     * Retrieve part of an object:\n     *\n     * - Retrieve a property from an object\n     * - Retrieve a part of a string\n     * - Retrieve a matrix subset\n     *\n     * @param {Object | Array | Matrix | string} object\n     * @param {Index} index\n     * @return {Object | Array | Matrix | string} Returns the subset\n     */\n\n    return function access(object, index) {\n      try {\n        if (Array.isArray(object)) {\n          return subset$1(object, index);\n        } else if (object && typeof object.subset === 'function') {\n          // Matrix\n          return object.subset(index);\n        } else if (typeof object === 'string') {\n          // TODO: move getStringSubset into a separate util file, use that\n          return subset$1(object, index);\n        } else if (_typeof$6(object) === 'object') {\n          if (!index.isObjectProperty()) {\n            throw new TypeError('Cannot apply a numeric index as object property');\n          }\n\n          return getSafeProperty$2(object, index.getObjectProperty());\n        } else {\n          throw new TypeError('Cannot apply index: unsupported type of object');\n        }\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    };\n  }\n\n  var factory_1$a = factory$a;\n\n  var access = {\n  \tfactory: factory_1$a\n  };\n\n  var getSafeProperty$3 = customs.getSafeProperty;\n\n  function factory$b(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var access$1 = load(access);\n    /**\n     * @constructor AccessorNode\n     * @extends {Node}\n     * Access an object property or get a matrix subset\n     *\n     * @param {Node} object                 The object from which to retrieve\n     *                                      a property or subset.\n     * @param {IndexNode} index             IndexNode containing ranges\n     */\n\n    function AccessorNode(object, index) {\n      if (!(this instanceof AccessorNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (!type.isNode(object)) {\n        throw new TypeError('Node expected for parameter \"object\"');\n      }\n\n      if (!type.isIndexNode(index)) {\n        throw new TypeError('IndexNode expected for parameter \"index\"');\n      }\n\n      this.object = object || null;\n      this.index = index; // readonly property name\n\n      Object.defineProperty(this, 'name', {\n        get: function () {\n          if (this.index) {\n            return this.index.isObjectProperty() ? this.index.getObjectProperty() : '';\n          } else {\n            return this.object.name || '';\n          }\n        }.bind(this),\n        set: function set() {\n          throw new Error('Cannot assign a new name, name is read-only');\n        }\n      });\n    }\n\n    AccessorNode.prototype = new Node$1();\n    AccessorNode.prototype.type = 'AccessorNode';\n    AccessorNode.prototype.isAccessorNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    AccessorNode.prototype._compile = function (math, argNames) {\n      var evalObject = this.object._compile(math, argNames);\n\n      var evalIndex = this.index._compile(math, argNames);\n\n      if (this.index.isObjectProperty()) {\n        var prop = this.index.getObjectProperty();\n        return function evalAccessorNode(scope, args, context) {\n          return getSafeProperty$3(evalObject(scope, args, context), prop);\n        };\n      } else {\n        return function evalAccessorNode(scope, args, context) {\n          var object = evalObject(scope, args, context);\n          var index = evalIndex(scope, args, object); // we pass object here instead of context\n\n          return access$1(object, index);\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    AccessorNode.prototype.forEach = function (callback) {\n      callback(this.object, 'object', this);\n      callback(this.index, 'index', this);\n    };\n    /**\n     * Create a new AccessorNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {AccessorNode} Returns a transformed copy of the node\n     */\n\n\n    AccessorNode.prototype.map = function (callback) {\n      return new AccessorNode(this._ifNode(callback(this.object, 'object', this)), this._ifNode(callback(this.index, 'index', this)));\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {AccessorNode}\n     */\n\n\n    AccessorNode.prototype.clone = function () {\n      return new AccessorNode(this.object, this.index);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AccessorNode.prototype._toString = function (options) {\n      var object = this.object.toString(options);\n\n      if (needParenthesis(this.object)) {\n        object = '(' + object + ')';\n      }\n\n      return object + this.index.toString(options);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AccessorNode.prototype.toHTML = function (options) {\n      var object = this.object.toHTML(options);\n\n      if (needParenthesis(this.object)) {\n        object = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + object + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      return object + this.index.toHTML(options);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AccessorNode.prototype._toTex = function (options) {\n      var object = this.object.toTex(options);\n\n      if (needParenthesis(this.object)) {\n        object = \"\\\\left(' + object + '\\\\right)\";\n      }\n\n      return object + this.index.toTex(options);\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    AccessorNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'AccessorNode',\n        object: this.object,\n        index: this.index\n      };\n    };\n    /**\n     * Instantiate an AccessorNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"AccessorNode\", object: ..., index: ...}`,\n     *                       where mathjs is optional\n     * @returns {AccessorNode}\n     */\n\n\n    AccessorNode.fromJSON = function (json) {\n      return new AccessorNode(json.object, json.index);\n    };\n    /**\n     * Are parenthesis needed?\n     * @private\n     */\n\n\n    function needParenthesis(node) {\n      // TODO: maybe make a method on the nodes which tells whether they need parenthesis?\n      return !(type.isAccessorNode(node) || type.isArrayNode(node) || type.isConstantNode(node) || type.isFunctionNode(node) || type.isObjectNode(node) || type.isParenthesisNode(node) || type.isSymbolNode(node));\n    }\n\n    return AccessorNode;\n  }\n\n  var name$a = 'AccessorNode';\n  var path$2 = 'expression.node';\n  var factory_1$b = factory$b;\n\n  var AccessorNode = {\n  \tname: name$a,\n  \tpath: path$2,\n  \tfactory: factory_1$b\n  };\n\n  var map = array.map;\n\n  function factory$c(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor ArrayNode\n     * @extends {Node}\n     * Holds an 1-dimensional array with items\n     * @param {Node[]} [items]   1 dimensional array with items\n     */\n\n    function ArrayNode(items) {\n      if (!(this instanceof ArrayNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.items = items || []; // validate input\n\n      if (!Array.isArray(this.items) || !this.items.every(type.isNode)) {\n        throw new TypeError('Array containing Nodes expected');\n      } // TODO: deprecated since v3, remove some day\n\n\n      var deprecated = function deprecated() {\n        throw new Error('Property `ArrayNode.nodes` is deprecated, use `ArrayNode.items` instead');\n      };\n\n      Object.defineProperty(this, 'nodes', {\n        get: deprecated,\n        set: deprecated\n      });\n    }\n\n    ArrayNode.prototype = new Node$1();\n    ArrayNode.prototype.type = 'ArrayNode';\n    ArrayNode.prototype.isArrayNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ArrayNode.prototype._compile = function (math, argNames) {\n      var evalItems = map(this.items, function (item) {\n        return item._compile(math, argNames);\n      });\n      var asMatrix = math.config().matrix !== 'Array';\n\n      if (asMatrix) {\n        var matrix = math.matrix;\n        return function evalArrayNode(scope, args, context) {\n          return matrix(map(evalItems, function (evalItem) {\n            return evalItem(scope, args, context);\n          }));\n        };\n      } else {\n        return function evalArrayNode(scope, args, context) {\n          return map(evalItems, function (evalItem) {\n            return evalItem(scope, args, context);\n          });\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ArrayNode.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.items.length; i++) {\n        var node = this.items[i];\n        callback(node, 'items[' + i + ']', this);\n      }\n    };\n    /**\n     * Create a new ArrayNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {ArrayNode} Returns a transformed copy of the node\n     */\n\n\n    ArrayNode.prototype.map = function (callback) {\n      var items = [];\n\n      for (var i = 0; i < this.items.length; i++) {\n        items[i] = this._ifNode(callback(this.items[i], 'items[' + i + ']', this));\n      }\n\n      return new ArrayNode(items);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ArrayNode}\n     */\n\n\n    ArrayNode.prototype.clone = function () {\n      return new ArrayNode(this.items.slice(0));\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ArrayNode.prototype._toString = function (options) {\n      var items = this.items.map(function (node) {\n        return node.toString(options);\n      });\n      return '[' + items.join(', ') + ']';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ArrayNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ArrayNode',\n        items: this.items\n      };\n    };\n    /**\n     * Instantiate an ArrayNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"ArrayNode\", items: [...]}`,\n     *                       where mathjs is optional\n     * @returns {ArrayNode}\n     */\n\n\n    ArrayNode.fromJSON = function (json) {\n      return new ArrayNode(json.items);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ArrayNode.prototype.toHTML = function (options) {\n      var items = this.items.map(function (node) {\n        return node.toHTML(options);\n      });\n      return '<span class=\"math-parenthesis math-square-parenthesis\">[</span>' + items.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-square-parenthesis\">]</span>';\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ArrayNode.prototype._toTex = function (options) {\n      var s = '\\\\begin{bmatrix}';\n      this.items.forEach(function (node) {\n        if (node.items) {\n          s += node.items.map(function (childNode) {\n            return childNode.toTex(options);\n          }).join('&');\n        } else {\n          s += node.toTex(options);\n        } // new line\n\n\n        s += '\\\\\\\\';\n      });\n      s += '\\\\end{bmatrix}';\n      return s;\n    };\n\n    return ArrayNode;\n  }\n\n  var name$b = 'ArrayNode';\n  var path$3 = 'expression.node';\n  var factory_1$c = factory$c;\n\n  var ArrayNode = {\n  \tname: name$b,\n  \tpath: path$3,\n  \tfactory: factory_1$c\n  };\n\n  function _typeof$7(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$7 = function _typeof(obj) { return typeof obj; }; } else { _typeof$7 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$7(obj); }\n\n  var errorTransform$1 = error_transform.transform;\n\n  var setSafeProperty$2 = customs.setSafeProperty;\n\n  function factory$d(type, config, load, typed) {\n    var subset$1 = load(subset);\n    var matrix$1 = load(matrix);\n    /**\n     * Replace part of an object:\n     *\n     * - Assign a property to an object\n     * - Replace a part of a string\n     * - Replace a matrix subset\n     *\n     * @param {Object | Array | Matrix | string} object\n     * @param {Index} index\n     * @param {*} value\n     * @return {Object | Array | Matrix | string} Returns the original object\n     *                                            except in case of a string\n     */\n    // TODO: change assign to return the value instead of the object\n\n    return function assign(object, index, value) {\n      try {\n        if (Array.isArray(object)) {\n          return matrix$1(object).subset(index, value).valueOf();\n        } else if (object && typeof object.subset === 'function') {\n          // Matrix\n          return object.subset(index, value);\n        } else if (typeof object === 'string') {\n          // TODO: move setStringSubset into a separate util file, use that\n          return subset$1(object, index, value);\n        } else if (_typeof$7(object) === 'object') {\n          if (!index.isObjectProperty()) {\n            throw TypeError('Cannot apply a numeric index as object property');\n          }\n\n          setSafeProperty$2(object, index.getObjectProperty(), value);\n          return object;\n        } else {\n          throw new TypeError('Cannot apply index: unsupported type of object');\n        }\n      } catch (err) {\n        throw errorTransform$1(err);\n      }\n    };\n  }\n\n  var factory_1$d = factory$d;\n\n  var assign = {\n  \tfactory: factory_1$d\n  };\n\n  // also contains information about left/right associativity\n  // and which other operator the operator is associative with\n  // Example:\n  // addition is associative with addition and subtraction, because:\n  // (a+b)+c=a+(b+c)\n  // (a+b)-c=a+(b-c)\n  //\n  // postfix operators are left associative, prefix operators\n  // are right associative\n  //\n  // It's also possible to set the following properties:\n  // latexParens: if set to false, this node doesn't need to be enclosed\n  //              in parentheses when using LaTeX\n  // latexLeftParens: if set to false, this !OperatorNode's!\n  //                  left argument doesn't need to be enclosed\n  //                  in parentheses\n  // latexRightParens: the same for the right argument\n\n  var properties = [{\n    // assignment\n    'AssignmentNode': {},\n    'FunctionAssignmentNode': {}\n  }, {\n    // conditional expression\n    'ConditionalNode': {\n      latexLeftParens: false,\n      latexRightParens: false,\n      latexParens: false // conditionals don't need parentheses in LaTeX because\n      // they are 2 dimensional\n\n    }\n  }, {\n    // logical or\n    'OperatorNode:or': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // logical xor\n    'OperatorNode:xor': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // logical and\n    'OperatorNode:and': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // bitwise or\n    'OperatorNode:bitOr': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // bitwise xor\n    'OperatorNode:bitXor': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // bitwise and\n    'OperatorNode:bitAnd': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // relational operators\n    'OperatorNode:equal': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:unequal': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:smaller': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:larger': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:smallerEq': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:largerEq': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'RelationalNode': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // bitshift operators\n    'OperatorNode:leftShift': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:rightArithShift': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:rightLogShift': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // unit conversion\n    'OperatorNode:to': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // range\n    'RangeNode': {}\n  }, {\n    // addition, subtraction\n    'OperatorNode:add': {\n      associativity: 'left',\n      associativeWith: ['OperatorNode:add', 'OperatorNode:subtract']\n    },\n    'OperatorNode:subtract': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // multiply, divide, modulus\n    'OperatorNode:multiply': {\n      associativity: 'left',\n      associativeWith: ['OperatorNode:multiply', 'OperatorNode:divide', 'Operator:dotMultiply', 'Operator:dotDivide']\n    },\n    'OperatorNode:divide': {\n      associativity: 'left',\n      associativeWith: [],\n      latexLeftParens: false,\n      latexRightParens: false,\n      latexParens: false // fractions don't require parentheses because\n      // they're 2 dimensional, so parens aren't needed\n      // in LaTeX\n\n    },\n    'OperatorNode:dotMultiply': {\n      associativity: 'left',\n      associativeWith: ['OperatorNode:multiply', 'OperatorNode:divide', 'OperatorNode:dotMultiply', 'OperatorNode:doDivide']\n    },\n    'OperatorNode:dotDivide': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:mod': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  }, {\n    // unary prefix operators\n    'OperatorNode:unaryPlus': {\n      associativity: 'right'\n    },\n    'OperatorNode:unaryMinus': {\n      associativity: 'right'\n    },\n    'OperatorNode:bitNot': {\n      associativity: 'right'\n    },\n    'OperatorNode:not': {\n      associativity: 'right'\n    }\n  }, {\n    // exponentiation\n    'OperatorNode:pow': {\n      associativity: 'right',\n      associativeWith: [],\n      latexRightParens: false // the exponent doesn't need parentheses in\n      // LaTeX because it's 2 dimensional\n      // (it's on top)\n\n    },\n    'OperatorNode:dotPow': {\n      associativity: 'right',\n      associativeWith: []\n    }\n  }, {\n    // factorial\n    'OperatorNode:factorial': {\n      associativity: 'left'\n    }\n  }, {\n    // matrix transpose\n    'OperatorNode:transpose': {\n      associativity: 'left'\n    }\n  }];\n  /**\n   * Get the precedence of a Node.\n   * Higher number for higher precedence, starting with 0.\n   * Returns null if the precedence is undefined.\n   *\n   * @param {Node}\n   * @param {string} parenthesis\n   * @return {number|null}\n   */\n\n  function getPrecedence(_node, parenthesis) {\n    var node = _node;\n\n    if (parenthesis !== 'keep') {\n      // ParenthesisNodes are only ignored when not in 'keep' mode\n      node = _node.getContent();\n    }\n\n    var identifier = node.getIdentifier();\n\n    for (var i = 0; i < properties.length; i++) {\n      if (identifier in properties[i]) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Get the associativity of an operator (left or right).\n   * Returns a string containing 'left' or 'right' or null if\n   * the associativity is not defined.\n   *\n   * @param {Node}\n   * @param {string} parenthesis\n   * @return {string|null}\n   * @throws {Error}\n   */\n\n\n  function getAssociativity(_node, parenthesis) {\n    var node = _node;\n\n    if (parenthesis !== 'keep') {\n      // ParenthesisNodes are only ignored when not in 'keep' mode\n      node = _node.getContent();\n    }\n\n    var identifier = node.getIdentifier();\n    var index = getPrecedence(node, parenthesis);\n\n    if (index === null) {\n      // node isn't in the list\n      return null;\n    }\n\n    var property = properties[index][identifier];\n\n    if (property.hasOwnProperty('associativity')) {\n      if (property.associativity === 'left') {\n        return 'left';\n      }\n\n      if (property.associativity === 'right') {\n        return 'right';\n      } // associativity is invalid\n\n\n      throw Error('\\'' + identifier + '\\' has the invalid associativity \\'' + property.associativity + '\\'.');\n    } // associativity is undefined\n\n\n    return null;\n  }\n  /**\n   * Check if an operator is associative with another operator.\n   * Returns either true or false or null if not defined.\n   *\n   * @param {Node} nodeA\n   * @param {Node} nodeB\n   * @param {string} parenthesis\n   * @return {bool|null}\n   */\n\n\n  function isAssociativeWith(nodeA, nodeB, parenthesis) {\n    // ParenthesisNodes are only ignored when not in 'keep' mode\n    var a = parenthesis !== 'keep' ? nodeA.getContent() : nodeA;\n    var b = parenthesis !== 'keep' ? nodeA.getContent() : nodeB;\n    var identifierA = a.getIdentifier();\n    var identifierB = b.getIdentifier();\n    var index = getPrecedence(a, parenthesis);\n\n    if (index === null) {\n      // node isn't in the list\n      return null;\n    }\n\n    var property = properties[index][identifierA];\n\n    if (property.hasOwnProperty('associativeWith') && property.associativeWith instanceof Array) {\n      for (var i = 0; i < property.associativeWith.length; i++) {\n        if (property.associativeWith[i] === identifierB) {\n          return true;\n        }\n      }\n\n      return false;\n    } // associativeWith is not defined\n\n\n    return null;\n  }\n\n  var properties_1 = properties;\n  var getPrecedence_1 = getPrecedence;\n  var getAssociativity_1 = getAssociativity;\n  var isAssociativeWith_1 = isAssociativeWith;\n\n  var operators = {\n  \tproperties: properties_1,\n  \tgetPrecedence: getPrecedence_1,\n  \tgetAssociativity: getAssociativity_1,\n  \tisAssociativeWith: isAssociativeWith_1\n  };\n\n  var getSafeProperty$4 = customs.getSafeProperty;\n\n  var setSafeProperty$3 = customs.setSafeProperty;\n\n  function factory$e(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var assign$1 = load(assign);\n    var access$1 = load(access);\n\n    var operators$1 = operators;\n    /**\n     * @constructor AssignmentNode\n     * @extends {Node}\n     *\n     * Define a symbol, like `a=3.2`, update a property like `a.b=3.2`, or\n     * replace a subset of a matrix like `A[2,2]=42`.\n     *\n     * Syntax:\n     *\n     *     new AssignmentNode(symbol, value)\n     *     new AssignmentNode(object, index, value)\n     *\n     * Usage:\n     *\n     *    new AssignmentNode(new SymbolNode('a'), new ConstantNode(2))                       // a=2\n     *    new AssignmentNode(new SymbolNode('a'), new IndexNode('b'), new ConstantNode(2))   // a.b=2\n     *    new AssignmentNode(new SymbolNode('a'), new IndexNode(1, 2), new ConstantNode(3))  // a[1,2]=3\n     *\n     * @param {SymbolNode | AccessorNode} object  Object on which to assign a value\n     * @param {IndexNode} [index=null]            Index, property name or matrix\n     *                                            index. Optional. If not provided\n     *                                            and `object` is a SymbolNode,\n     *                                            the property is assigned to the\n     *                                            global scope.\n     * @param {Node} value                        The value to be assigned\n     */\n\n\n    function AssignmentNode(object, index, value) {\n      if (!(this instanceof AssignmentNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.object = object;\n      this.index = value ? index : null;\n      this.value = value || index; // validate input\n\n      if (!type.isSymbolNode(object) && !type.isAccessorNode(object)) {\n        throw new TypeError('SymbolNode or AccessorNode expected as \"object\"');\n      }\n\n      if (type.isSymbolNode(object) && object.name === 'end') {\n        throw new Error('Cannot assign to symbol \"end\"');\n      }\n\n      if (this.index && !type.isIndexNode(this.index)) {\n        // index is optional\n        throw new TypeError('IndexNode expected as \"index\"');\n      }\n\n      if (!type.isNode(this.value)) {\n        throw new TypeError('Node expected as \"value\"');\n      } // readonly property name\n\n\n      Object.defineProperty(this, 'name', {\n        get: function () {\n          if (this.index) {\n            return this.index.isObjectProperty() ? this.index.getObjectProperty() : '';\n          } else {\n            return this.object.name || '';\n          }\n        }.bind(this),\n        set: function set() {\n          throw new Error('Cannot assign a new name, name is read-only');\n        }\n      });\n    }\n\n    AssignmentNode.prototype = new Node$1();\n    AssignmentNode.prototype.type = 'AssignmentNode';\n    AssignmentNode.prototype.isAssignmentNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    AssignmentNode.prototype._compile = function (math, argNames) {\n      var evalObject = this.object._compile(math, argNames);\n\n      var evalIndex = this.index ? this.index._compile(math, argNames) : null;\n\n      var evalValue = this.value._compile(math, argNames);\n\n      var name = this.object.name;\n\n      if (!this.index) {\n        // apply a variable to the scope, for example `a=2`\n        if (!type.isSymbolNode(this.object)) {\n          throw new TypeError('SymbolNode expected as object');\n        }\n\n        return function evalAssignmentNode(scope, args, context) {\n          return setSafeProperty$3(scope, name, evalValue(scope, args, context));\n        };\n      } else if (this.index.isObjectProperty()) {\n        // apply an object property for example `a.b=2`\n        var prop = this.index.getObjectProperty();\n        return function evalAssignmentNode(scope, args, context) {\n          var object = evalObject(scope, args, context);\n          var value = evalValue(scope, args, context);\n          return setSafeProperty$3(object, prop, value);\n        };\n      } else if (type.isSymbolNode(this.object)) {\n        // update a matrix subset, for example `a[2]=3`\n        return function evalAssignmentNode(scope, args, context) {\n          var childObject = evalObject(scope, args, context);\n          var value = evalValue(scope, args, context);\n          var index = evalIndex(scope, args, childObject); // Important:  we pass childObject instead of context\n\n          setSafeProperty$3(scope, name, assign$1(childObject, index, value));\n          return value;\n        };\n      } else {\n        // type.isAccessorNode(node.object) === true\n        // update a matrix subset, for example `a.b[2]=3`\n        // we will not use the compile function of the AccessorNode, but compile it\n        // ourselves here as we need the parent object of the AccessorNode:\n        // wee need to apply the updated object to parent object\n        var evalParentObject = this.object.object._compile(math, argNames);\n\n        if (this.object.index.isObjectProperty()) {\n          var parentProp = this.object.index.getObjectProperty();\n          return function evalAssignmentNode(scope, args, context) {\n            var parent = evalParentObject(scope, args, context);\n            var childObject = getSafeProperty$4(parent, parentProp);\n            var index = evalIndex(scope, args, childObject); // Important: we pass childObject instead of context\n\n            var value = evalValue(scope, args, context);\n            setSafeProperty$3(parent, parentProp, assign$1(childObject, index, value));\n            return value;\n          };\n        } else {\n          // if some parameters use the 'end' parameter, we need to calculate the size\n          var evalParentIndex = this.object.index._compile(math, argNames);\n\n          return function evalAssignmentNode(scope, args, context) {\n            var parent = evalParentObject(scope, args, context);\n            var parentIndex = evalParentIndex(scope, args, parent); // Important: we pass parent instead of context\n\n            var childObject = access$1(parent, parentIndex);\n            var index = evalIndex(scope, args, childObject); // Important:  we pass childObject instead of context\n\n            var value = evalValue(scope, args, context);\n            assign$1(parent, parentIndex, assign$1(childObject, index, value));\n            return value;\n          };\n        }\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    AssignmentNode.prototype.forEach = function (callback) {\n      callback(this.object, 'object', this);\n\n      if (this.index) {\n        callback(this.index, 'index', this);\n      }\n\n      callback(this.value, 'value', this);\n    };\n    /**\n     * Create a new AssignmentNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {AssignmentNode} Returns a transformed copy of the node\n     */\n\n\n    AssignmentNode.prototype.map = function (callback) {\n      var object = this._ifNode(callback(this.object, 'object', this));\n\n      var index = this.index ? this._ifNode(callback(this.index, 'index', this)) : null;\n\n      var value = this._ifNode(callback(this.value, 'value', this));\n\n      return new AssignmentNode(object, index, value);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {AssignmentNode}\n     */\n\n\n    AssignmentNode.prototype.clone = function () {\n      return new AssignmentNode(this.object, this.index, this.value);\n    };\n    /*\n     * Is parenthesis needed?\n     * @param {node} node\n     * @param {string} [parenthesis='keep']\n     * @private\n     */\n\n\n    function needParenthesis(node, parenthesis) {\n      if (!parenthesis) {\n        parenthesis = 'keep';\n      }\n\n      var precedence = operators$1.getPrecedence(node, parenthesis);\n      var exprPrecedence = operators$1.getPrecedence(node.value, parenthesis);\n      return parenthesis === 'all' || exprPrecedence !== null && exprPrecedence <= precedence;\n    }\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AssignmentNode.prototype._toString = function (options) {\n      var object = this.object.toString(options);\n      var index = this.index ? this.index.toString(options) : '';\n      var value = this.value.toString(options);\n\n      if (needParenthesis(this, options && options.parenthesis)) {\n        value = '(' + value + ')';\n      }\n\n      return object + index + ' = ' + value;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    AssignmentNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'AssignmentNode',\n        object: this.object,\n        index: this.index,\n        value: this.value\n      };\n    };\n    /**\n     * Instantiate an AssignmentNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"AssignmentNode\", object: ..., index: ..., value: ...}`,\n     *                       where mathjs is optional\n     * @returns {AssignmentNode}\n     */\n\n\n    AssignmentNode.fromJSON = function (json) {\n      return new AssignmentNode(json.object, json.index, json.value);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AssignmentNode.prototype.toHTML = function (options) {\n      var object = this.object.toHTML(options);\n      var index = this.index ? this.index.toHTML(options) : '';\n      var value = this.value.toHTML(options);\n\n      if (needParenthesis(this, options && options.parenthesis)) {\n        value = '<span class=\"math-paranthesis math-round-parenthesis\">(</span>' + value + '<span class=\"math-paranthesis math-round-parenthesis\">)</span>';\n      }\n\n      return object + index + '<span class=\"math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator\">=</span>' + value;\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string}\n     */\n\n\n    AssignmentNode.prototype._toTex = function (options) {\n      var object = this.object.toTex(options);\n      var index = this.index ? this.index.toTex(options) : '';\n      var value = this.value.toTex(options);\n\n      if (needParenthesis(this, options && options.parenthesis)) {\n        value = \"\\\\left(\".concat(value, \"\\\\right)\");\n      }\n\n      return object + index + ':=' + value;\n    };\n\n    return AssignmentNode;\n  }\n\n  var name$c = 'AssignmentNode';\n  var path$4 = 'expression.node';\n  var factory_1$e = factory$e;\n\n  var AssignmentNode = {\n  \tname: name$c,\n  \tpath: path$4,\n  \tfactory: factory_1$e\n  };\n\n  function factory$f(type, config, load, typed) {\n    /**\n     * A ResultSet contains a list or results\n     * @class ResultSet\n     * @param {Array} entries\n     * @constructor ResultSet\n     */\n    function ResultSet(entries) {\n      if (!(this instanceof ResultSet)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.entries = entries || [];\n    }\n    /**\n     * Attach type information\n     */\n\n\n    ResultSet.prototype.type = 'ResultSet';\n    ResultSet.prototype.isResultSet = true;\n    /**\n     * Returns the array with results hold by this ResultSet\n     * @memberof ResultSet\n     * @returns {Array} entries\n     */\n\n    ResultSet.prototype.valueOf = function () {\n      return this.entries;\n    };\n    /**\n     * Returns the stringified results of the ResultSet\n     * @memberof ResultSet\n     * @returns {string} string\n     */\n\n\n    ResultSet.prototype.toString = function () {\n      return '[' + this.entries.join(', ') + ']';\n    };\n    /**\n     * Get a JSON representation of the ResultSet\n     * @memberof ResultSet\n     * @returns {Object} Returns a JSON object structured as:\n     *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n     */\n\n\n    ResultSet.prototype.toJSON = function () {\n      return {\n        mathjs: 'ResultSet',\n        entries: this.entries\n      };\n    };\n    /**\n     * Instantiate a ResultSet from a JSON object\n     * @memberof ResultSet\n     * @param {Object} json  A JSON object structured as:\n     *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n     * @return {ResultSet}\n     */\n\n\n    ResultSet.fromJSON = function (json) {\n      return new ResultSet(json.entries);\n    };\n\n    return ResultSet;\n  }\n\n  var name$d = 'ResultSet';\n  var path$5 = 'type';\n  var factory_1$f = factory$f;\n\n  var ResultSet = {\n  \tname: name$d,\n  \tpath: path$5,\n  \tfactory: factory_1$f\n  };\n\n  var forEach = array.forEach;\n\n  var map$1 = array.map;\n\n  function factory$g(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var ResultSet$1 = load(ResultSet);\n    /**\n     * @constructor BlockNode\n     * @extends {Node}\n     * Holds a set with blocks\n     * @param {Array.<{node: Node} | {node: Node, visible: boolean}>} blocks\n     *            An array with blocks, where a block is constructed as an Object\n     *            with properties block, which is a Node, and visible, which is\n     *            a boolean. The property visible is optional and is true by default\n     */\n\n    function BlockNode(blocks) {\n      if (!(this instanceof BlockNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input, copy blocks\n\n\n      if (!Array.isArray(blocks)) throw new Error('Array expected');\n      this.blocks = blocks.map(function (block) {\n        var node = block && block.node;\n        var visible = block && block.visible !== undefined ? block.visible : true;\n        if (!type.isNode(node)) throw new TypeError('Property \"node\" must be a Node');\n        if (typeof visible !== 'boolean') throw new TypeError('Property \"visible\" must be a boolean');\n        return {\n          node: node,\n          visible: visible\n        };\n      });\n    }\n\n    BlockNode.prototype = new Node$1();\n    BlockNode.prototype.type = 'BlockNode';\n    BlockNode.prototype.isBlockNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    BlockNode.prototype._compile = function (math, argNames) {\n      var evalBlocks = map$1(this.blocks, function (block) {\n        return {\n          eval: block.node._compile(math, argNames),\n          visible: block.visible\n        };\n      });\n      return function evalBlockNodes(scope, args, context) {\n        var results = [];\n        forEach(evalBlocks, function evalBlockNode(block) {\n          var result = block.eval(scope, args, context);\n\n          if (block.visible) {\n            results.push(result);\n          }\n        });\n        return new ResultSet$1(results);\n      };\n    };\n    /**\n     * Execute a callback for each of the child blocks of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    BlockNode.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.blocks.length; i++) {\n        callback(this.blocks[i].node, 'blocks[' + i + '].node', this);\n      }\n    };\n    /**\n     * Create a new BlockNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {BlockNode} Returns a transformed copy of the node\n     */\n\n\n    BlockNode.prototype.map = function (callback) {\n      var blocks = [];\n\n      for (var i = 0; i < this.blocks.length; i++) {\n        var block = this.blocks[i];\n\n        var node = this._ifNode(callback(block.node, 'blocks[' + i + '].node', this));\n\n        blocks[i] = {\n          node: node,\n          visible: block.visible\n        };\n      }\n\n      return new BlockNode(blocks);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {BlockNode}\n     */\n\n\n    BlockNode.prototype.clone = function () {\n      var blocks = this.blocks.map(function (block) {\n        return {\n          node: block.node,\n          visible: block.visible\n        };\n      });\n      return new BlockNode(blocks);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    BlockNode.prototype._toString = function (options) {\n      return this.blocks.map(function (param) {\n        return param.node.toString(options) + (param.visible ? '' : ';');\n      }).join('\\n');\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    BlockNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'BlockNode',\n        blocks: this.blocks\n      };\n    };\n    /**\n     * Instantiate an BlockNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"BlockNode\", blocks: [{node: ..., visible: false}, ...]}`,\n     *                       where mathjs is optional\n     * @returns {BlockNode}\n     */\n\n\n    BlockNode.fromJSON = function (json) {\n      return new BlockNode(json.blocks);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    BlockNode.prototype.toHTML = function (options) {\n      return this.blocks.map(function (param) {\n        return param.node.toHTML(options) + (param.visible ? '' : '<span class=\"math-separator\">;</span>');\n      }).join('<span class=\"math-separator\"><br /></span>');\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    BlockNode.prototype._toTex = function (options) {\n      return this.blocks.map(function (param) {\n        return param.node.toTex(options) + (param.visible ? '' : ';');\n      }).join('\\\\;\\\\;\\n');\n    };\n\n    return BlockNode;\n  }\n\n  var name$e = 'BlockNode';\n  var path$6 = 'expression.node';\n  var factory_1$g = factory$g;\n\n  var BlockNode = {\n  \tname: name$e,\n  \tpath: path$6,\n  \tfactory: factory_1$g\n  };\n\n  function factory$h(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var mathTypeOf = load(_typeof$3);\n    /**\n     * A lazy evaluating conditional operator: 'condition ? trueExpr : falseExpr'\n     *\n     * @param {Node} condition   Condition, must result in a boolean\n     * @param {Node} trueExpr    Expression evaluated when condition is true\n     * @param {Node} falseExpr   Expression evaluated when condition is true\n     *\n     * @constructor ConditionalNode\n     * @extends {Node}\n     */\n\n    function ConditionalNode(condition, trueExpr, falseExpr) {\n      if (!(this instanceof ConditionalNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (!type.isNode(condition)) throw new TypeError('Parameter condition must be a Node');\n      if (!type.isNode(trueExpr)) throw new TypeError('Parameter trueExpr must be a Node');\n      if (!type.isNode(falseExpr)) throw new TypeError('Parameter falseExpr must be a Node');\n      this.condition = condition;\n      this.trueExpr = trueExpr;\n      this.falseExpr = falseExpr;\n    }\n\n    ConditionalNode.prototype = new Node$1();\n    ConditionalNode.prototype.type = 'ConditionalNode';\n    ConditionalNode.prototype.isConditionalNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ConditionalNode.prototype._compile = function (math, argNames) {\n      var evalCondition = this.condition._compile(math, argNames);\n\n      var evalTrueExpr = this.trueExpr._compile(math, argNames);\n\n      var evalFalseExpr = this.falseExpr._compile(math, argNames);\n\n      return function evalConditionalNode(scope, args, context) {\n        return testCondition(evalCondition(scope, args, context)) ? evalTrueExpr(scope, args, context) : evalFalseExpr(scope, args, context);\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ConditionalNode.prototype.forEach = function (callback) {\n      callback(this.condition, 'condition', this);\n      callback(this.trueExpr, 'trueExpr', this);\n      callback(this.falseExpr, 'falseExpr', this);\n    };\n    /**\n     * Create a new ConditionalNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {ConditionalNode} Returns a transformed copy of the node\n     */\n\n\n    ConditionalNode.prototype.map = function (callback) {\n      return new ConditionalNode(this._ifNode(callback(this.condition, 'condition', this)), this._ifNode(callback(this.trueExpr, 'trueExpr', this)), this._ifNode(callback(this.falseExpr, 'falseExpr', this)));\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ConditionalNode}\n     */\n\n\n    ConditionalNode.prototype.clone = function () {\n      return new ConditionalNode(this.condition, this.trueExpr, this.falseExpr);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConditionalNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis); // Enclose Arguments in parentheses if they are an OperatorNode\n      // or have lower or equal precedence\n      // NOTE: enclosing all OperatorNodes in parentheses is a decision\n      // purely based on aesthetics and readability\n\n      var condition = this.condition.toString(options);\n      var conditionPrecedence = operators.getPrecedence(this.condition, parenthesis);\n\n      if (parenthesis === 'all' || this.condition.type === 'OperatorNode' || conditionPrecedence !== null && conditionPrecedence <= precedence) {\n        condition = '(' + condition + ')';\n      }\n\n      var trueExpr = this.trueExpr.toString(options);\n      var truePrecedence = operators.getPrecedence(this.trueExpr, parenthesis);\n\n      if (parenthesis === 'all' || this.trueExpr.type === 'OperatorNode' || truePrecedence !== null && truePrecedence <= precedence) {\n        trueExpr = '(' + trueExpr + ')';\n      }\n\n      var falseExpr = this.falseExpr.toString(options);\n      var falsePrecedence = operators.getPrecedence(this.falseExpr, parenthesis);\n\n      if (parenthesis === 'all' || this.falseExpr.type === 'OperatorNode' || falsePrecedence !== null && falsePrecedence <= precedence) {\n        falseExpr = '(' + falseExpr + ')';\n      }\n\n      return condition + ' ? ' + trueExpr + ' : ' + falseExpr;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ConditionalNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ConditionalNode',\n        condition: this.condition,\n        trueExpr: this.trueExpr,\n        falseExpr: this.falseExpr\n      };\n    };\n    /**\n     * Instantiate an ConditionalNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"ConditionalNode\", \"condition\": ..., \"trueExpr\": ..., \"falseExpr\": ...}`,\n     *                       where mathjs is optional\n     * @returns {ConditionalNode}\n     */\n\n\n    ConditionalNode.fromJSON = function (json) {\n      return new ConditionalNode(json.condition, json.trueExpr, json.falseExpr);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConditionalNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis); // Enclose Arguments in parentheses if they are an OperatorNode\n      // or have lower or equal precedence\n      // NOTE: enclosing all OperatorNodes in parentheses is a decision\n      // purely based on aesthetics and readability\n\n      var condition = this.condition.toHTML(options);\n      var conditionPrecedence = operators.getPrecedence(this.condition, parenthesis);\n\n      if (parenthesis === 'all' || this.condition.type === 'OperatorNode' || conditionPrecedence !== null && conditionPrecedence <= precedence) {\n        condition = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + condition + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      var trueExpr = this.trueExpr.toHTML(options);\n      var truePrecedence = operators.getPrecedence(this.trueExpr, parenthesis);\n\n      if (parenthesis === 'all' || this.trueExpr.type === 'OperatorNode' || truePrecedence !== null && truePrecedence <= precedence) {\n        trueExpr = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + trueExpr + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      var falseExpr = this.falseExpr.toHTML(options);\n      var falsePrecedence = operators.getPrecedence(this.falseExpr, parenthesis);\n\n      if (parenthesis === 'all' || this.falseExpr.type === 'OperatorNode' || falsePrecedence !== null && falsePrecedence <= precedence) {\n        falseExpr = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + falseExpr + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      return condition + '<span class=\"math-operator math-conditional-operator\">?</span>' + trueExpr + '<span class=\"math-operator math-conditional-operator\">:</span>' + falseExpr;\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConditionalNode.prototype._toTex = function (options) {\n      return '\\\\begin{cases} {' + this.trueExpr.toTex(options) + '}, &\\\\quad{\\\\text{if }\\\\;' + this.condition.toTex(options) + '}\\\\\\\\{' + this.falseExpr.toTex(options) + '}, &\\\\quad{\\\\text{otherwise}}\\\\end{cases}';\n    };\n    /**\n     * Test whether a condition is met\n     * @param {*} condition\n     * @returns {boolean} true if condition is true or non-zero, else false\n     */\n\n\n    function testCondition(condition) {\n      if (typeof condition === 'number' || typeof condition === 'boolean' || typeof condition === 'string') {\n        return !!condition;\n      }\n\n      if (condition) {\n        if (type.isBigNumber(condition)) {\n          return !condition.isZero();\n        }\n\n        if (type.isComplex(condition)) {\n          return !!(condition.re || condition.im);\n        }\n\n        if (type.isUnit(condition)) {\n          return !!condition.value;\n        }\n      }\n\n      if (condition === null || condition === undefined) {\n        return false;\n      }\n\n      throw new TypeError('Unsupported type of condition \"' + mathTypeOf(condition) + '\"');\n    }\n\n    return ConditionalNode;\n  }\n\n  var name$f = 'ConditionalNode';\n  var path$7 = 'expression.node';\n  var factory_1$h = factory$h;\n\n  var ConditionalNode = {\n  \tname: name$f,\n  \tpath: path$7,\n  \tfactory: factory_1$h\n  };\n\n  // Map the characters to escape to their escaped values. The list is derived\n  // from http://www.cespedes.org/blog/85/how-to-escape-latex-special-characters\n\n  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n  var defaultEscapes = {\n    \"{\": \"\\\\{\",\n    \"}\": \"\\\\}\",\n    \"\\\\\": \"\\\\textbackslash{}\",\n    \"#\": \"\\\\#\",\n    $: \"\\\\$\",\n    \"%\": \"\\\\%\",\n    \"&\": \"\\\\&\",\n    \"^\": \"\\\\textasciicircum{}\",\n    _: \"\\\\_\",\n    \"~\": \"\\\\textasciitilde{}\"\n  };\n  var formatEscapes = {\n    \"\\u2013\": \"\\\\--\",\n    \"\\u2014\": \"\\\\---\",\n    \" \": \"~\",\n    \"\\t\": \"\\\\qquad{}\",\n    \"\\r\\n\": \"\\\\newline{}\",\n    \"\\n\": \"\\\\newline{}\"\n  };\n\n  var defaultEscapeMapFn = function defaultEscapeMapFn(defaultEscapes, formatEscapes) {\n    return _extends({}, defaultEscapes, formatEscapes);\n  };\n\n  /**\n   * Escape a string to be used in LaTeX documents.\n   * @param {string} str the string to be escaped.\n   * @param {boolean} params.preserveFormatting whether formatting escapes should\n   *  be performed (default: false).\n   * @param {function} params.escapeMapFn the function to modify the escape maps.\n   * @return {string} the escaped string, ready to be used in LaTeX.\n   */\n  var dist = function (str) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$preserveFormatti = _ref.preserveFormatting,\n        preserveFormatting = _ref$preserveFormatti === undefined ? false : _ref$preserveFormatti,\n        _ref$escapeMapFn = _ref.escapeMapFn,\n        escapeMapFn = _ref$escapeMapFn === undefined ? defaultEscapeMapFn : _ref$escapeMapFn;\n\n    var runningStr = String(str);\n    var result = \"\";\n\n    var escapes = escapeMapFn(_extends({}, defaultEscapes), preserveFormatting ? _extends({}, formatEscapes) : {});\n    var escapeKeys = Object.keys(escapes); // as it is reused later on\n\n    // Algorithm: Go through the string character by character, if it matches\n    // with one of the special characters then we'll replace it with the escaped\n    // version.\n\n    var _loop = function _loop() {\n      var specialCharFound = false;\n      escapeKeys.forEach(function (key, index) {\n        if (specialCharFound) {\n          return;\n        }\n        if (runningStr.length >= key.length && runningStr.slice(0, key.length) === key) {\n          result += escapes[escapeKeys[index]];\n          runningStr = runningStr.slice(key.length, runningStr.length);\n          specialCharFound = true;\n        }\n      });\n      if (!specialCharFound) {\n        result += runningStr.slice(0, 1);\n        runningStr = runningStr.slice(1, runningStr.length);\n      }\n    };\n\n    while (runningStr) {\n      _loop();\n    }\n    return result;\n  };\n\n  var latex = createCommonjsModule(function (module, exports) {\n\n\n\n  exports.symbols = {\n    // GREEK LETTERS\n    Alpha: 'A',\n    alpha: '\\\\alpha',\n    Beta: 'B',\n    beta: '\\\\beta',\n    Gamma: '\\\\Gamma',\n    gamma: '\\\\gamma',\n    Delta: '\\\\Delta',\n    delta: '\\\\delta',\n    Epsilon: 'E',\n    epsilon: '\\\\epsilon',\n    varepsilon: '\\\\varepsilon',\n    Zeta: 'Z',\n    zeta: '\\\\zeta',\n    Eta: 'H',\n    eta: '\\\\eta',\n    Theta: '\\\\Theta',\n    theta: '\\\\theta',\n    vartheta: '\\\\vartheta',\n    Iota: 'I',\n    iota: '\\\\iota',\n    Kappa: 'K',\n    kappa: '\\\\kappa',\n    varkappa: '\\\\varkappa',\n    Lambda: '\\\\Lambda',\n    lambda: '\\\\lambda',\n    Mu: 'M',\n    mu: '\\\\mu',\n    Nu: 'N',\n    nu: '\\\\nu',\n    Xi: '\\\\Xi',\n    xi: '\\\\xi',\n    Omicron: 'O',\n    omicron: 'o',\n    Pi: '\\\\Pi',\n    pi: '\\\\pi',\n    varpi: '\\\\varpi',\n    Rho: 'P',\n    rho: '\\\\rho',\n    varrho: '\\\\varrho',\n    Sigma: '\\\\Sigma',\n    sigma: '\\\\sigma',\n    varsigma: '\\\\varsigma',\n    Tau: 'T',\n    tau: '\\\\tau',\n    Upsilon: \"\\\\Upsilon\",\n    upsilon: \"\\\\upsilon\",\n    Phi: '\\\\Phi',\n    phi: '\\\\phi',\n    varphi: '\\\\varphi',\n    Chi: 'X',\n    chi: '\\\\chi',\n    Psi: '\\\\Psi',\n    psi: '\\\\psi',\n    Omega: '\\\\Omega',\n    omega: '\\\\omega',\n    // logic\n    'true': '\\\\mathrm{True}',\n    'false': '\\\\mathrm{False}',\n    // other\n    i: 'i',\n    // TODO use \\i ??\n    inf: '\\\\infty',\n    Inf: '\\\\infty',\n    infinity: '\\\\infty',\n    Infinity: '\\\\infty',\n    oo: '\\\\infty',\n    lim: '\\\\lim',\n    'undefined': '\\\\mathbf{?}'\n  };\n  exports.operators = {\n    'transpose': '^\\\\top',\n    'ctranspose': '^H',\n    'factorial': '!',\n    'pow': '^',\n    'dotPow': '.^\\\\wedge',\n    // TODO find ideal solution\n    'unaryPlus': '+',\n    'unaryMinus': '-',\n    'bitNot': '\\\\~',\n    // TODO find ideal solution\n    'not': '\\\\neg',\n    'multiply': '\\\\cdot',\n    'divide': '\\\\frac',\n    // TODO how to handle that properly?\n    'dotMultiply': '.\\\\cdot',\n    // TODO find ideal solution\n    'dotDivide': '.:',\n    // TODO find ideal solution\n    'mod': '\\\\mod',\n    'add': '+',\n    'subtract': '-',\n    'to': '\\\\rightarrow',\n    'leftShift': '<<',\n    'rightArithShift': '>>',\n    'rightLogShift': '>>>',\n    'equal': '=',\n    'unequal': '\\\\neq',\n    'smaller': '<',\n    'larger': '>',\n    'smallerEq': '\\\\leq',\n    'largerEq': '\\\\geq',\n    'bitAnd': '\\\\&',\n    'bitXor': \"\\\\underline{|}\",\n    'bitOr': '|',\n    'and': '\\\\wedge',\n    'xor': '\\\\veebar',\n    'or': '\\\\vee'\n  };\n  exports.defaultTemplate = \"\\\\mathrm{${name}}\\\\left(${args}\\\\right)\";\n  var units = {\n    deg: '^\\\\circ'\n  };\n\n  exports.escape = function (string) {\n    return dist(string, {\n      'preserveFormatting': true\n    });\n  }; // @param {string} name\n  // @param {boolean} isUnit\n\n\n  exports.toSymbol = function (name, isUnit) {\n    isUnit = typeof isUnit === 'undefined' ? false : isUnit;\n\n    if (isUnit) {\n      if (units.hasOwnProperty(name)) {\n        return units[name];\n      }\n\n      return '\\\\mathrm{' + exports.escape(name) + '}';\n    }\n\n    if (exports.symbols.hasOwnProperty(name)) {\n      return exports.symbols[name];\n    }\n\n    return exports.escape(name);\n  };\n  });\n  var latex_1 = latex.symbols;\n  var latex_2 = latex.operators;\n  var latex_3 = latex.defaultTemplate;\n  var latex_4 = latex.escape;\n  var latex_5 = latex.toSymbol;\n\n  var format = string.format;\n\n  var escapeLatex = latex.escape;\n\n  function factory$i(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var getType = load(_typeof$3);\n    /**\n     * A ConstantNode holds a constant value like a number or string.\n     *\n     * Usage:\n     *\n     *     new ConstantNode(2.3)\n     *     new ConstantNode('hello')\n     *\n     * @param {*} value    Value can be any type (number, BigNumber, string, ...)\n     * @constructor ConstantNode\n     * @extends {Node}\n     */\n\n    function ConstantNode(value) {\n      if (!(this instanceof ConstantNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (arguments.length === 2) {\n        // TODO: remove deprecation error some day (created 2018-01-23)\n        throw new SyntaxError('new ConstantNode(valueStr, valueType) is not supported anymore since math v4.0.0. Use new ConstantNode(value) instead, where value is a non-stringified value.');\n      }\n\n      this.value = value;\n    }\n\n    ConstantNode.prototype = new Node$1();\n    ConstantNode.prototype.type = 'ConstantNode';\n    ConstantNode.prototype.isConstantNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ConstantNode.prototype._compile = function (math, argNames) {\n      var value = this.value;\n      return function evalConstantNode() {\n        return value;\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ConstantNode.prototype.forEach = function (callback) {} // nothing to do, we don't have childs\n\n    /**\n     * Create a new ConstantNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node) : Node} callback\n     * @returns {ConstantNode} Returns a clone of the node\n     */\n    ;\n\n    ConstantNode.prototype.map = function (callback) {\n      return this.clone();\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ConstantNode}\n     */\n\n\n    ConstantNode.prototype.clone = function () {\n      return new ConstantNode(this.value);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConstantNode.prototype._toString = function (options) {\n      return format(this.value, options);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConstantNode.prototype.toHTML = function (options) {\n      var value = this._toString(options);\n\n      switch (getType(this.value)) {\n        case 'number':\n        case 'BigNumber':\n        case 'Fraction':\n          return '<span class=\"math-number\">' + value + '</span>';\n\n        case 'string':\n          return '<span class=\"math-string\">' + value + '</span>';\n\n        case 'boolean':\n          return '<span class=\"math-boolean\">' + value + '</span>';\n\n        case 'null':\n          return '<span class=\"math-null-symbol\">' + value + '</span>';\n\n        case 'undefined':\n          return '<span class=\"math-undefined\">' + value + '</span>';\n\n        default:\n          return '<span class=\"math-symbol\">' + value + '</span>';\n      }\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ConstantNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ConstantNode',\n        value: this.value\n      };\n    };\n    /**\n     * Instantiate a ConstantNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"SymbolNode\", value: 2.3}`,\n     *                       where mathjs is optional\n     * @returns {ConstantNode}\n     */\n\n\n    ConstantNode.fromJSON = function (json) {\n      return new ConstantNode(json.value);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ConstantNode.prototype._toTex = function (options) {\n      var value = this._toString(options);\n\n      switch (getType(this.value)) {\n        case 'string':\n          return '\\\\mathtt{' + escapeLatex(value) + '}';\n\n        case 'number':\n        case 'BigNumber':\n          var index = value.toLowerCase().indexOf('e');\n\n          if (index !== -1) {\n            return value.substring(0, index) + '\\\\cdot10^{' + value.substring(index + 1) + '}';\n          }\n\n          return value;\n\n        case 'Fraction':\n          return this.value.toLatex();\n\n        default:\n          return value;\n      }\n    };\n\n    return ConstantNode;\n  }\n\n  var name$g = 'ConstantNode';\n  var path$8 = 'expression.node';\n  var factory_1$i = factory$i;\n\n  var ConstantNode = {\n  \tname: name$g,\n  \tpath: path$8,\n  \tfactory: factory_1$i\n  };\n\n  var escape = string.escape;\n\n  var forEach$1 = array.forEach;\n\n  var join = array.join;\n\n\n\n\n\n  var setSafeProperty$4 = customs.setSafeProperty;\n\n  function factory$j(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor FunctionAssignmentNode\n     * @extends {Node}\n     * Function assignment\n     *\n     * @param {string} name           Function name\n     * @param {string[] | Array.<{name: string, type: string}>} params\n     *                                Array with function parameter names, or an\n     *                                array with objects containing the name\n     *                                and type of the parameter\n     * @param {Node} expr             The function expression\n     */\n\n    function FunctionAssignmentNode(name, params, expr) {\n      if (!(this instanceof FunctionAssignmentNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input\n\n\n      if (typeof name !== 'string') throw new TypeError('String expected for parameter \"name\"');\n      if (!Array.isArray(params)) throw new TypeError('Array containing strings or objects expected for parameter \"params\"');\n      if (!type.isNode(expr)) throw new TypeError('Node expected for parameter \"expr\"');\n      if (name in keywords) throw new Error('Illegal function name, \"' + name + '\" is a reserved keyword');\n      this.name = name;\n      this.params = params.map(function (param) {\n        return param && param.name || param;\n      });\n      this.types = params.map(function (param) {\n        return param && param.type || 'any';\n      });\n      this.expr = expr;\n    }\n\n    FunctionAssignmentNode.prototype = new Node$1();\n    FunctionAssignmentNode.prototype.type = 'FunctionAssignmentNode';\n    FunctionAssignmentNode.prototype.isFunctionAssignmentNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    FunctionAssignmentNode.prototype._compile = function (math, argNames) {\n      var childArgNames = Object.create(argNames);\n      forEach$1(this.params, function (param) {\n        childArgNames[param] = true;\n      }); // compile the function expression with the child args\n\n      var evalExpr = this.expr._compile(math, childArgNames);\n\n      var name = this.name;\n      var params = this.params;\n      var signature = join(this.types, ',');\n      var syntax = name + '(' + join(this.params, ', ') + ')';\n      return function evalFunctionAssignmentNode(scope, args, context) {\n        var signatures = {};\n\n        signatures[signature] = function () {\n          var childArgs = Object.create(args);\n\n          for (var i = 0; i < params.length; i++) {\n            childArgs[params[i]] = arguments[i];\n          }\n\n          return evalExpr(scope, childArgs, context);\n        };\n\n        var fn = typed(name, signatures);\n        fn.syntax = syntax;\n        setSafeProperty$4(scope, name, fn);\n        return fn;\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    FunctionAssignmentNode.prototype.forEach = function (callback) {\n      callback(this.expr, 'expr', this);\n    };\n    /**\n     * Create a new FunctionAssignmentNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {FunctionAssignmentNode} Returns a transformed copy of the node\n     */\n\n\n    FunctionAssignmentNode.prototype.map = function (callback) {\n      var expr = this._ifNode(callback(this.expr, 'expr', this));\n\n      return new FunctionAssignmentNode(this.name, this.params.slice(0), expr);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {FunctionAssignmentNode}\n     */\n\n\n    FunctionAssignmentNode.prototype.clone = function () {\n      return new FunctionAssignmentNode(this.name, this.params.slice(0), this.expr);\n    };\n    /**\n     * Is parenthesis needed?\n     * @param {Node} node\n     * @param {Object} parenthesis\n     * @private\n     */\n\n\n    function needParenthesis(node, parenthesis) {\n      var precedence = operators.getPrecedence(node, parenthesis);\n      var exprPrecedence = operators.getPrecedence(node.expr, parenthesis);\n      return parenthesis === 'all' || exprPrecedence !== null && exprPrecedence <= precedence;\n    }\n    /**\n     * get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionAssignmentNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var expr = this.expr.toString(options);\n\n      if (needParenthesis(this, parenthesis)) {\n        expr = '(' + expr + ')';\n      }\n\n      return this.name + '(' + this.params.join(', ') + ') = ' + expr;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    FunctionAssignmentNode.prototype.toJSON = function () {\n      var types = this.types;\n      return {\n        mathjs: 'FunctionAssignmentNode',\n        name: this.name,\n        params: this.params.map(function (param, index) {\n          return {\n            name: param,\n            type: types[index]\n          };\n        }),\n        expr: this.expr\n      };\n    };\n    /**\n     * Instantiate an FunctionAssignmentNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"FunctionAssignmentNode\", name: ..., params: ..., expr: ...}`,\n     *                       where mathjs is optional\n     * @returns {FunctionAssignmentNode}\n     */\n\n\n    FunctionAssignmentNode.fromJSON = function (json) {\n      return new FunctionAssignmentNode(json.name, json.params, json.expr);\n    };\n    /**\n     * get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionAssignmentNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var params = [];\n\n      for (var i = 0; i < this.params.length; i++) {\n        params.push('<span class=\"math-symbol math-parameter\">' + escape(this.params[i]) + '</span>');\n      }\n\n      var expr = this.expr.toHTML(options);\n\n      if (needParenthesis(this, parenthesis)) {\n        expr = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + expr + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      return '<span class=\"math-function\">' + escape(this.name) + '</span>' + '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + params.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-round-parenthesis\">)</span><span class=\"math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator\">=</span>' + expr;\n    };\n    /**\n     * get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionAssignmentNode.prototype._toTex = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var expr = this.expr.toTex(options);\n\n      if (needParenthesis(this, parenthesis)) {\n        expr = \"\\\\left(\".concat(expr, \"\\\\right)\");\n      }\n\n      return '\\\\mathrm{' + this.name + '}\\\\left(' + this.params.map(latex.toSymbol).join(',') + '\\\\right):=' + expr;\n    };\n\n    return FunctionAssignmentNode;\n  }\n\n  var name$h = 'FunctionAssignmentNode';\n  var path$9 = 'expression.node';\n  var factory_1$j = factory$j;\n\n  var FunctionAssignmentNode = {\n  \tname: name$h,\n  \tpath: path$9,\n  \tfactory: factory_1$j\n  };\n\n  function factory$k(type, config, load, typed) {\n    /**\n     * Create a range. A range has a start, step, and end, and contains functions\n     * to iterate over the range.\n     *\n     * A range can be constructed as:\n     *\n     *     const range = new Range(start, end)\n     *     const range = new Range(start, end, step)\n     *\n     * To get the result of the range:\n     *     range.forEach(function (x) {\n     *         console.log(x)\n     *     })\n     *     range.map(function (x) {\n     *         return math.sin(x)\n     *     })\n     *     range.toArray()\n     *\n     * Example usage:\n     *\n     *     const c = new Range(2, 6)       // 2:1:5\n     *     c.toArray()                     // [2, 3, 4, 5]\n     *     const d = new Range(2, -3, -1)  // 2:-1:-2\n     *     d.toArray()                     // [2, 1, 0, -1, -2]\n     *\n     * @class Range\n     * @constructor Range\n     * @param {number} start  included lower bound\n     * @param {number} end    excluded upper bound\n     * @param {number} [step] step size, default value is 1\n     */\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      var hasStart = start !== null && start !== undefined;\n      var hasEnd = end !== null && end !== undefined;\n      var hasStep = step !== null && step !== undefined;\n\n      if (hasStart) {\n        if (type.isBigNumber(start)) {\n          start = start.toNumber();\n        } else if (typeof start !== 'number') {\n          throw new TypeError('Parameter start must be a number');\n        }\n      }\n\n      if (hasEnd) {\n        if (type.isBigNumber(end)) {\n          end = end.toNumber();\n        } else if (typeof end !== 'number') {\n          throw new TypeError('Parameter end must be a number');\n        }\n      }\n\n      if (hasStep) {\n        if (type.isBigNumber(step)) {\n          step = step.toNumber();\n        } else if (typeof step !== 'number') {\n          throw new TypeError('Parameter step must be a number');\n        }\n      }\n\n      this.start = hasStart ? parseFloat(start) : 0;\n      this.end = hasEnd ? parseFloat(end) : 0;\n      this.step = hasStep ? parseFloat(step) : 1;\n    }\n    /**\n     * Attach type information\n     */\n\n\n    Range.prototype.type = 'Range';\n    Range.prototype.isRange = true;\n    /**\n     * Parse a string into a range,\n     * The string contains the start, optional step, and end, separated by a colon.\n     * If the string does not contain a valid range, null is returned.\n     * For example str='0:2:11'.\n     * @memberof Range\n     * @param {string} str\n     * @return {Range | null} range\n     */\n\n    Range.parse = function (str) {\n      if (typeof str !== 'string') {\n        return null;\n      }\n\n      var args = str.split(':');\n      var nums = args.map(function (arg) {\n        return parseFloat(arg);\n      });\n      var invalid = nums.some(function (num) {\n        return isNaN(num);\n      });\n\n      if (invalid) {\n        return null;\n      }\n\n      switch (nums.length) {\n        case 2:\n          return new Range(nums[0], nums[1]);\n\n        case 3:\n          return new Range(nums[0], nums[2], nums[1]);\n\n        default:\n          return null;\n      }\n    };\n    /**\n     * Create a clone of the range\n     * @return {Range} clone\n     */\n\n\n    Range.prototype.clone = function () {\n      return new Range(this.start, this.end, this.step);\n    };\n    /**\n     * Retrieve the size of the range.\n     * Returns an array containing one number, the number of elements in the range.\n     * @memberof Range\n     * @returns {number[]} size\n     */\n\n\n    Range.prototype.size = function () {\n      var len = 0;\n      var start = this.start;\n      var step = this.step;\n      var end = this.end;\n      var diff = end - start;\n\n      if (number.sign(step) === number.sign(diff)) {\n        len = Math.ceil(diff / step);\n      } else if (diff === 0) {\n        len = 0;\n      }\n\n      if (isNaN(len)) {\n        len = 0;\n      }\n\n      return [len];\n    };\n    /**\n     * Calculate the minimum value in the range\n     * @memberof Range\n     * @return {number | undefined} min\n     */\n\n\n    Range.prototype.min = function () {\n      var size = this.size()[0];\n\n      if (size > 0) {\n        if (this.step > 0) {\n          // positive step\n          return this.start;\n        } else {\n          // negative step\n          return this.start + (size - 1) * this.step;\n        }\n      } else {\n        return undefined;\n      }\n    };\n    /**\n     * Calculate the maximum value in the range\n     * @memberof Range\n     * @return {number | undefined} max\n     */\n\n\n    Range.prototype.max = function () {\n      var size = this.size()[0];\n\n      if (size > 0) {\n        if (this.step > 0) {\n          // positive step\n          return this.start + (size - 1) * this.step;\n        } else {\n          // negative step\n          return this.start;\n        }\n      } else {\n        return undefined;\n      }\n    };\n    /**\n     * Execute a callback function for each value in the range.\n     * @memberof Range\n     * @param {function} callback   The callback method is invoked with three\n     *                              parameters: the value of the element, the index\n     *                              of the element, and the Range being traversed.\n     */\n\n\n    Range.prototype.forEach = function (callback) {\n      var x = this.start;\n      var step = this.step;\n      var end = this.end;\n      var i = 0;\n\n      if (step > 0) {\n        while (x < end) {\n          callback(x, [i], this);\n          x += step;\n          i++;\n        }\n      } else if (step < 0) {\n        while (x > end) {\n          callback(x, [i], this);\n          x += step;\n          i++;\n        }\n      }\n    };\n    /**\n     * Execute a callback function for each value in the Range, and return the\n     * results as an array\n     * @memberof Range\n     * @param {function} callback   The callback method is invoked with three\n     *                              parameters: the value of the element, the index\n     *                              of the element, and the Matrix being traversed.\n     * @returns {Array} array\n     */\n\n\n    Range.prototype.map = function (callback) {\n      var array = [];\n      this.forEach(function (value, index, obj) {\n        array[index[0]] = callback(value, index, obj);\n      });\n      return array;\n    };\n    /**\n     * Create an Array with a copy of the Ranges data\n     * @memberof Range\n     * @returns {Array} array\n     */\n\n\n    Range.prototype.toArray = function () {\n      var array = [];\n      this.forEach(function (value, index) {\n        array[index[0]] = value;\n      });\n      return array;\n    };\n    /**\n     * Get the primitive value of the Range, a one dimensional array\n     * @memberof Range\n     * @returns {Array} array\n     */\n\n\n    Range.prototype.valueOf = function () {\n      // TODO: implement a caching mechanism for range.valueOf()\n      return this.toArray();\n    };\n    /**\n     * Get a string representation of the range, with optional formatting options.\n     * Output is formatted as 'start:step:end', for example '2:6' or '0:0.2:11'\n     * @memberof Range\n     * @param {Object | number | function} [options]  Formatting options. See\n     *                                                lib/utils/number:format for a\n     *                                                description of the available\n     *                                                options.\n     * @returns {string} str\n     */\n\n\n    Range.prototype.format = function (options) {\n      var str = number.format(this.start, options);\n\n      if (this.step !== 1) {\n        str += ':' + number.format(this.step, options);\n      }\n\n      str += ':' + number.format(this.end, options);\n      return str;\n    };\n    /**\n     * Get a string representation of the range.\n     * @memberof Range\n     * @returns {string}\n     */\n\n\n    Range.prototype.toString = function () {\n      return this.format();\n    };\n    /**\n     * Get a JSON representation of the range\n     * @memberof Range\n     * @returns {Object} Returns a JSON object structured as:\n     *                   `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n     */\n\n\n    Range.prototype.toJSON = function () {\n      return {\n        mathjs: 'Range',\n        start: this.start,\n        end: this.end,\n        step: this.step\n      };\n    };\n    /**\n     * Instantiate a Range from a JSON object\n     * @memberof Range\n     * @param {Object} json A JSON object structured as:\n     *                      `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n     * @return {Range}\n     */\n\n\n    Range.fromJSON = function (json) {\n      return new Range(json.start, json.end, json.step);\n    };\n\n    return Range;\n  }\n\n  var name$i = 'Range';\n  var path$a = 'type';\n  var factory_1$k = factory$k;\n\n  var Range = {\n  \tname: name$i,\n  \tpath: path$a,\n  \tfactory: factory_1$k\n  };\n\n  var map$2 = array.map;\n\n  var escape$1 = string.escape;\n\n  function factory$l(type, config, load, typed) {\n    var Node$1 = load(Node);\n    var Range$1 = load(Range);\n    var isArray = Array.isArray;\n    /**\n     * @constructor IndexNode\n     * @extends Node\n     *\n     * Describes a subset of a matrix or an object property.\n     * Cannot be used on its own, needs to be used within an AccessorNode or\n     * AssignmentNode.\n     *\n     * @param {Node[]} dimensions\n     * @param {boolean} [dotNotation=false]  Optional property describing whether\n     *                                       this index was written using dot\n     *                                       notation like `a.b`, or using bracket\n     *                                       notation like `a[\"b\"]` (default).\n     *                                       Used to stringify an IndexNode.\n     */\n\n    function IndexNode(dimensions, dotNotation) {\n      if (!(this instanceof IndexNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.dimensions = dimensions;\n      this.dotNotation = dotNotation || false; // validate input\n\n      if (!isArray(dimensions) || !dimensions.every(type.isNode)) {\n        throw new TypeError('Array containing Nodes expected for parameter \"dimensions\"');\n      }\n\n      if (this.dotNotation && !this.isObjectProperty()) {\n        throw new Error('dotNotation only applicable for object properties');\n      } // TODO: deprecated since v3, remove some day\n\n\n      var deprecated = function deprecated() {\n        throw new Error('Property `IndexNode.object` is deprecated, use `IndexNode.fn` instead');\n      };\n\n      Object.defineProperty(this, 'object', {\n        get: deprecated,\n        set: deprecated\n      });\n    }\n\n    IndexNode.prototype = new Node$1();\n    IndexNode.prototype.type = 'IndexNode';\n    IndexNode.prototype.isIndexNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    IndexNode.prototype._compile = function (math, argNames) {\n      // TODO: implement support for bignumber (currently bignumbers are silently\n      //       reduced to numbers when changing the value to zero-based)\n      // TODO: Optimization: when the range values are ConstantNodes,\n      //       we can beforehand resolve the zero-based value\n      // optimization for a simple object property\n      var evalDimensions = map$2(this.dimensions, function (range, i) {\n        if (type.isRangeNode(range)) {\n          if (range.needsEnd()) {\n            // create a range containing end (like '4:end')\n            var childArgNames = Object.create(argNames);\n            childArgNames['end'] = true;\n\n            var evalStart = range.start._compile(math, childArgNames);\n\n            var evalEnd = range.end._compile(math, childArgNames);\n\n            var evalStep = range.step ? range.step._compile(math, childArgNames) : function () {\n              return 1;\n            };\n            return function evalDimension(scope, args, context) {\n              var size = math.size(context).valueOf();\n              var childArgs = Object.create(args);\n              childArgs['end'] = size[i];\n              return createRange(evalStart(scope, childArgs, context), evalEnd(scope, childArgs, context), evalStep(scope, childArgs, context));\n            };\n          } else {\n            // create range\n            var _evalStart = range.start._compile(math, argNames);\n\n            var _evalEnd = range.end._compile(math, argNames);\n\n            var _evalStep = range.step ? range.step._compile(math, argNames) : function () {\n              return 1;\n            };\n\n            return function evalDimension(scope, args, context) {\n              return createRange(_evalStart(scope, args, context), _evalEnd(scope, args, context), _evalStep(scope, args, context));\n            };\n          }\n        } else if (type.isSymbolNode(range) && range.name === 'end') {\n          // SymbolNode 'end'\n          var _childArgNames = Object.create(argNames);\n\n          _childArgNames['end'] = true;\n\n          var evalRange = range._compile(math, _childArgNames);\n\n          return function evalDimension(scope, args, context) {\n            var size = math.size(context).valueOf();\n            var childArgs = Object.create(args);\n            childArgs['end'] = size[i];\n            return evalRange(scope, childArgs, context);\n          };\n        } else {\n          // ConstantNode\n          var _evalRange = range._compile(math, argNames);\n\n          return function evalDimension(scope, args, context) {\n            return _evalRange(scope, args, context);\n          };\n        }\n      });\n      return function evalIndexNode(scope, args, context) {\n        var dimensions = map$2(evalDimensions, function (evalDimension) {\n          return evalDimension(scope, args, context);\n        });\n        return math.index.apply(math, dimensions);\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    IndexNode.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.dimensions.length; i++) {\n        callback(this.dimensions[i], 'dimensions[' + i + ']', this);\n      }\n    };\n    /**\n     * Create a new IndexNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {IndexNode} Returns a transformed copy of the node\n     */\n\n\n    IndexNode.prototype.map = function (callback) {\n      var dimensions = [];\n\n      for (var i = 0; i < this.dimensions.length; i++) {\n        dimensions[i] = this._ifNode(callback(this.dimensions[i], 'dimensions[' + i + ']', this));\n      }\n\n      return new IndexNode(dimensions);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {IndexNode}\n     */\n\n\n    IndexNode.prototype.clone = function () {\n      return new IndexNode(this.dimensions.slice(0));\n    };\n    /**\n     * Test whether this IndexNode contains a single property name\n     * @return {boolean}\n     */\n\n\n    IndexNode.prototype.isObjectProperty = function () {\n      return this.dimensions.length === 1 && type.isConstantNode(this.dimensions[0]) && typeof this.dimensions[0].value === 'string';\n    };\n    /**\n     * Returns the property name if IndexNode contains a property.\n     * If not, returns null.\n     * @return {string | null}\n     */\n\n\n    IndexNode.prototype.getObjectProperty = function () {\n      return this.isObjectProperty() ? this.dimensions[0].value : null;\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    IndexNode.prototype._toString = function (options) {\n      // format the parameters like \"[1, 0:5]\"\n      return this.dotNotation ? '.' + this.getObjectProperty() : '[' + this.dimensions.join(', ') + ']';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    IndexNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'IndexNode',\n        dimensions: this.dimensions,\n        dotNotation: this.dotNotation\n      };\n    };\n    /**\n     * Instantiate an IndexNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"IndexNode\", dimensions: [...], dotNotation: false}`,\n     *                       where mathjs is optional\n     * @returns {IndexNode}\n     */\n\n\n    IndexNode.fromJSON = function (json) {\n      return new IndexNode(json.dimensions, json.dotNotation);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    IndexNode.prototype.toHTML = function (options) {\n      // format the parameters like \"[1, 0:5]\"\n      var dimensions = [];\n\n      for (var i = 0; i < this.dimensions.length; i++) {\n        dimensions[i] = this.dimensions[i].toHTML();\n      }\n\n      if (this.dotNotation) {\n        return '<span class=\"math-operator math-accessor-operator\">.</span>' + '<span class=\"math-symbol math-property\">' + escape$1(this.getObjectProperty()) + '</span>';\n      } else {\n        return '<span class=\"math-parenthesis math-square-parenthesis\">[</span>' + dimensions.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-square-parenthesis\">]</span>';\n      }\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    IndexNode.prototype._toTex = function (options) {\n      var dimensions = this.dimensions.map(function (range) {\n        return range.toTex(options);\n      });\n      return this.dotNotation ? '.' + this.getObjectProperty() + '' : '_{' + dimensions.join(',') + '}';\n    }; // helper function to create a Range from start, step and end\n\n\n    function createRange(start, end, step) {\n      return new Range$1(type.isBigNumber(start) ? start.toNumber() : start, type.isBigNumber(end) ? end.toNumber() : end, type.isBigNumber(step) ? step.toNumber() : step);\n    }\n\n    return IndexNode;\n  }\n\n  var name$j = 'IndexNode';\n  var path$b = 'expression.node';\n  var factory_1$l = factory$l;\n\n  var IndexNode = {\n  \tname: name$j,\n  \tpath: path$b,\n  \tfactory: factory_1$l\n  };\n\n  function _typeof$8(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$8 = function _typeof(obj) { return typeof obj; }; } else { _typeof$8 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$8(obj); }\n\n  var stringify = string.stringify;\n\n  var escape$2 = string.escape;\n\n  var isSafeProperty$1 = customs.isSafeProperty;\n\n  var hasOwnProperty$2 = object.hasOwnProperty;\n\n  function factory$m(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor ObjectNode\n     * @extends {Node}\n     * Holds an object with keys/values\n     * @param {Object.<string, Node>} [properties]   object with key/value pairs\n     */\n\n    function ObjectNode(properties) {\n      if (!(this instanceof ObjectNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      this.properties = properties || {}; // validate input\n\n      if (properties) {\n        if (!(_typeof$8(properties) === 'object') || !Object.keys(properties).every(function (key) {\n          return type.isNode(properties[key]);\n        })) {\n          throw new TypeError('Object containing Nodes expected');\n        }\n      }\n    }\n\n    ObjectNode.prototype = new Node$1();\n    ObjectNode.prototype.type = 'ObjectNode';\n    ObjectNode.prototype.isObjectNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ObjectNode.prototype._compile = function (math, argNames) {\n      var evalEntries = {};\n\n      for (var key in this.properties) {\n        if (hasOwnProperty$2(this.properties, key)) {\n          // we stringify/parse the key here to resolve unicode characters,\n          // so you cannot create a key like {\"co\\\\u006Estructor\": null}\n          var stringifiedKey = stringify(key);\n          var parsedKey = JSON.parse(stringifiedKey);\n\n          if (!isSafeProperty$1(this.properties, parsedKey)) {\n            throw new Error('No access to property \"' + parsedKey + '\"');\n          }\n\n          evalEntries[parsedKey] = this.properties[key]._compile(math, argNames);\n        }\n      }\n\n      return function evalObjectNode(scope, args, context) {\n        var obj = {};\n\n        for (var _key in evalEntries) {\n          if (hasOwnProperty$2(evalEntries, _key)) {\n            obj[_key] = evalEntries[_key](scope, args, context);\n          }\n        }\n\n        return obj;\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ObjectNode.prototype.forEach = function (callback) {\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          callback(this.properties[key], 'properties[' + stringify(key) + ']', this);\n        }\n      }\n    };\n    /**\n     * Create a new ObjectNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {ObjectNode} Returns a transformed copy of the node\n     */\n\n\n    ObjectNode.prototype.map = function (callback) {\n      var properties = {};\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          properties[key] = this._ifNode(callback(this.properties[key], 'properties[' + stringify(key) + ']', this));\n        }\n      }\n\n      return new ObjectNode(properties);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ObjectNode}\n     */\n\n\n    ObjectNode.prototype.clone = function () {\n      var properties = {};\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          properties[key] = this.properties[key];\n        }\n      }\n\n      return new ObjectNode(properties);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ObjectNode.prototype._toString = function (options) {\n      var entries = [];\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          entries.push(stringify(key) + ': ' + this.properties[key].toString(options));\n        }\n      }\n\n      return '{' + entries.join(', ') + '}';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ObjectNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ObjectNode',\n        properties: this.properties\n      };\n    };\n    /**\n     * Instantiate an OperatorNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"ObjectNode\", \"properties\": {...}}`,\n     *                       where mathjs is optional\n     * @returns {ObjectNode}\n     */\n\n\n    ObjectNode.fromJSON = function (json) {\n      return new ObjectNode(json.properties);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ObjectNode.prototype.toHTML = function (options) {\n      var entries = [];\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          entries.push('<span class=\"math-symbol math-property\">' + escape$2(key) + '</span>' + '<span class=\"math-operator math-assignment-operator math-property-assignment-operator math-binary-operator\">:</span>' + this.properties[key].toHTML(options));\n        }\n      }\n\n      return '<span class=\"math-parenthesis math-curly-parenthesis\">{</span>' + entries.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-curly-parenthesis\">}</span>';\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    ObjectNode.prototype._toTex = function (options) {\n      var entries = [];\n\n      for (var key in this.properties) {\n        if (this.properties.hasOwnProperty(key)) {\n          entries.push('\\\\mathbf{' + key + ':} & ' + this.properties[key].toTex(options) + '\\\\\\\\');\n        }\n      }\n\n      return \"\\\\left\\\\{\\\\begin{array}{ll}\".concat(entries.join('\\n'), \"\\\\end{array}\\\\right\\\\}\");\n    };\n\n    return ObjectNode;\n  }\n\n  var name$k = 'ObjectNode';\n  var path$c = 'expression.node';\n  var factory_1$m = factory$m;\n\n  var ObjectNode = {\n  \tname: name$k,\n  \tpath: path$c,\n  \tfactory: factory_1$m\n  };\n\n  var map$3 = array.map;\n\n  var escape$3 = string.escape;\n\n  var isSafeMethod$1 = customs.isSafeMethod;\n\n  var getSafeProperty$5 = customs.getSafeProperty;\n\n\n\n  function factory$n(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor OperatorNode\n     * @extends {Node}\n     * An operator with two arguments, like 2+3\n     *\n     * @param {string} op           Operator name, for example '+'\n     * @param {string} fn           Function name, for example 'add'\n     * @param {Node[]} args         Operator arguments\n     * @param {boolean} [implicit]  Is this an implicit multiplication?\n     */\n\n    function OperatorNode(op, fn, args, implicit) {\n      if (!(this instanceof OperatorNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input\n\n\n      if (typeof op !== 'string') {\n        throw new TypeError('string expected for parameter \"op\"');\n      }\n\n      if (typeof fn !== 'string') {\n        throw new TypeError('string expected for parameter \"fn\"');\n      }\n\n      if (!Array.isArray(args) || !args.every(type.isNode)) {\n        throw new TypeError('Array containing Nodes expected for parameter \"args\"');\n      }\n\n      this.implicit = implicit === true;\n      this.op = op;\n      this.fn = fn;\n      this.args = args || [];\n    }\n\n    OperatorNode.prototype = new Node$1();\n    OperatorNode.prototype.type = 'OperatorNode';\n    OperatorNode.prototype.isOperatorNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    OperatorNode.prototype._compile = function (math, argNames) {\n      // validate fn\n      if (typeof this.fn !== 'string' || !isSafeMethod$1(math, this.fn)) {\n        if (!math[this.fn]) {\n          throw new Error('Function ' + this.fn + ' missing in provided namespace \"math\"');\n        } else {\n          throw new Error('No access to function \"' + this.fn + '\"');\n        }\n      }\n\n      var fn = getSafeProperty$5(math, this.fn);\n      var evalArgs = map$3(this.args, function (arg) {\n        return arg._compile(math, argNames);\n      });\n\n      if (evalArgs.length === 1) {\n        var evalArg0 = evalArgs[0];\n        return function evalOperatorNode(scope, args, context) {\n          return fn(evalArg0(scope, args, context));\n        };\n      } else if (evalArgs.length === 2) {\n        var _evalArg = evalArgs[0];\n        var evalArg1 = evalArgs[1];\n        return function evalOperatorNode(scope, args, context) {\n          return fn(_evalArg(scope, args, context), evalArg1(scope, args, context));\n        };\n      } else {\n        return function evalOperatorNode(scope, args, context) {\n          return fn.apply(null, map$3(evalArgs, function (evalArg) {\n            return evalArg(scope, args, context);\n          }));\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    OperatorNode.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.args.length; i++) {\n        callback(this.args[i], 'args[' + i + ']', this);\n      }\n    };\n    /**\n     * Create a new OperatorNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {OperatorNode} Returns a transformed copy of the node\n     */\n\n\n    OperatorNode.prototype.map = function (callback) {\n      var args = [];\n\n      for (var i = 0; i < this.args.length; i++) {\n        args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));\n      }\n\n      return new OperatorNode(this.op, this.fn, args, this.implicit);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {OperatorNode}\n     */\n\n\n    OperatorNode.prototype.clone = function () {\n      return new OperatorNode(this.op, this.fn, this.args.slice(0), this.implicit);\n    };\n    /**\n     * Check whether this is an unary OperatorNode:\n     * has exactly one argument, like `-a`.\n     * @return {boolean} Returns true when an unary operator node, false otherwise.\n     */\n\n\n    OperatorNode.prototype.isUnary = function () {\n      return this.args.length === 1;\n    };\n    /**\n     * Check whether this is a binary OperatorNode:\n     * has exactly two arguments, like `a + b`.\n     * @return {boolean} Returns true when a binary operator node, false otherwise.\n     */\n\n\n    OperatorNode.prototype.isBinary = function () {\n      return this.args.length === 2;\n    };\n    /**\n     * Calculate which parentheses are necessary. Gets an OperatorNode\n     * (which is the root of the tree) and an Array of Nodes\n     * (this.args) and returns an array where 'true' means that an argument\n     * has to be enclosed in parentheses whereas 'false' means the opposite.\n     *\n     * @param {OperatorNode} root\n     * @param {string} parenthesis\n     * @param {Node[]} args\n     * @param {boolean} latex\n     * @return {boolean[]}\n     * @private\n     */\n\n\n    function calculateNecessaryParentheses(root, parenthesis, implicit, args, latex) {\n      // precedence of the root OperatorNode\n      var precedence = operators.getPrecedence(root, parenthesis);\n      var associativity = operators.getAssociativity(root, parenthesis);\n\n      if (parenthesis === 'all' || args.length > 2 && root.getIdentifier() !== 'OperatorNode:add' && root.getIdentifier() !== 'OperatorNode:multiply') {\n        var parens = args.map(function (arg) {\n          switch (arg.getContent().type) {\n            // Nodes that don't need extra parentheses\n            case 'ArrayNode':\n            case 'ConstantNode':\n            case 'SymbolNode':\n            case 'ParenthesisNode':\n              return false;\n\n            default:\n              return true;\n          }\n        });\n        return parens;\n      }\n\n      var result;\n\n      switch (args.length) {\n        case 0:\n          result = [];\n          break;\n\n        case 1:\n          // unary operators\n          // precedence of the operand\n          var operandPrecedence = operators.getPrecedence(args[0], parenthesis); // handle special cases for LaTeX, where some of the parentheses aren't needed\n\n          if (latex && operandPrecedence !== null) {\n            var operandIdentifier;\n            var rootIdentifier;\n\n            if (parenthesis === 'keep') {\n              operandIdentifier = args[0].getIdentifier();\n              rootIdentifier = root.getIdentifier();\n            } else {\n              // Ignore Parenthesis Nodes when not in 'keep' mode\n              operandIdentifier = args[0].getContent().getIdentifier();\n              rootIdentifier = root.getContent().getIdentifier();\n            }\n\n            if (operators.properties[precedence][rootIdentifier].latexLeftParens === false) {\n              result = [false];\n              break;\n            }\n\n            if (operators.properties[operandPrecedence][operandIdentifier].latexParens === false) {\n              result = [false];\n              break;\n            }\n          }\n\n          if (operandPrecedence === null) {\n            // if the operand has no defined precedence, no parens are needed\n            result = [false];\n            break;\n          }\n\n          if (operandPrecedence <= precedence) {\n            // if the operands precedence is lower, parens are needed\n            result = [true];\n            break;\n          } // otherwise, no parens needed\n\n\n          result = [false];\n          break;\n\n        case 2:\n          // binary operators\n          var lhsParens; // left hand side needs parenthesis?\n          // precedence of the left hand side\n\n          var lhsPrecedence = operators.getPrecedence(args[0], parenthesis); // is the root node associative with the left hand side\n\n          var assocWithLhs = operators.isAssociativeWith(root, args[0], parenthesis);\n\n          if (lhsPrecedence === null) {\n            // if the left hand side has no defined precedence, no parens are needed\n            // FunctionNode for example\n            lhsParens = false;\n          } else if (lhsPrecedence === precedence && associativity === 'right' && !assocWithLhs) {\n            // In case of equal precedence, if the root node is left associative\n            // parens are **never** necessary for the left hand side.\n            // If it is right associative however, parens are necessary\n            // if the root node isn't associative with the left hand side\n            lhsParens = true;\n          } else if (lhsPrecedence < precedence) {\n            lhsParens = true;\n          } else {\n            lhsParens = false;\n          }\n\n          var rhsParens; // right hand side needs parenthesis?\n          // precedence of the right hand side\n\n          var rhsPrecedence = operators.getPrecedence(args[1], parenthesis); // is the root node associative with the right hand side?\n\n          var assocWithRhs = operators.isAssociativeWith(root, args[1], parenthesis);\n\n          if (rhsPrecedence === null) {\n            // if the right hand side has no defined precedence, no parens are needed\n            // FunctionNode for example\n            rhsParens = false;\n          } else if (rhsPrecedence === precedence && associativity === 'left' && !assocWithRhs) {\n            // In case of equal precedence, if the root node is right associative\n            // parens are **never** necessary for the right hand side.\n            // If it is left associative however, parens are necessary\n            // if the root node isn't associative with the right hand side\n            rhsParens = true;\n          } else if (rhsPrecedence < precedence) {\n            rhsParens = true;\n          } else {\n            rhsParens = false;\n          } // handle special cases for LaTeX, where some of the parentheses aren't needed\n\n\n          if (latex) {\n            var _rootIdentifier;\n\n            var lhsIdentifier;\n            var rhsIdentifier;\n\n            if (parenthesis === 'keep') {\n              _rootIdentifier = root.getIdentifier();\n              lhsIdentifier = root.args[0].getIdentifier();\n              rhsIdentifier = root.args[1].getIdentifier();\n            } else {\n              // Ignore ParenthesisNodes when not in 'keep' mode\n              _rootIdentifier = root.getContent().getIdentifier();\n              lhsIdentifier = root.args[0].getContent().getIdentifier();\n              rhsIdentifier = root.args[1].getContent().getIdentifier();\n            }\n\n            if (lhsPrecedence !== null) {\n              if (operators.properties[precedence][_rootIdentifier].latexLeftParens === false) {\n                lhsParens = false;\n              }\n\n              if (operators.properties[lhsPrecedence][lhsIdentifier].latexParens === false) {\n                lhsParens = false;\n              }\n            }\n\n            if (rhsPrecedence !== null) {\n              if (operators.properties[precedence][_rootIdentifier].latexRightParens === false) {\n                rhsParens = false;\n              }\n\n              if (operators.properties[rhsPrecedence][rhsIdentifier].latexParens === false) {\n                rhsParens = false;\n              }\n            }\n          }\n\n          result = [lhsParens, rhsParens];\n          break;\n\n        default:\n          if (root.getIdentifier() === 'OperatorNode:add' || root.getIdentifier() === 'OperatorNode:multiply') {\n            result = args.map(function (arg) {\n              var argPrecedence = operators.getPrecedence(arg, parenthesis);\n              var assocWithArg = operators.isAssociativeWith(root, arg, parenthesis);\n              var argAssociativity = operators.getAssociativity(arg, parenthesis);\n\n              if (argPrecedence === null) {\n                // if the argument has no defined precedence, no parens are needed\n                return false;\n              } else if (precedence === argPrecedence && associativity === argAssociativity && !assocWithArg) {\n                return true;\n              } else if (argPrecedence < precedence) {\n                return true;\n              }\n\n              return false;\n            });\n          }\n\n          break;\n      } // handles an edge case of 'auto' parentheses with implicit multiplication of ConstantNode\n      // In that case print parentheses for ParenthesisNodes even though they normally wouldn't be\n      // printed.\n\n\n      if (args.length >= 2 && root.getIdentifier() === 'OperatorNode:multiply' && root.implicit && parenthesis === 'auto' && implicit === 'hide') {\n        result = args.map(function (arg, index) {\n          var isParenthesisNode = arg.getIdentifier() === 'ParenthesisNode';\n\n          if (result[index] || isParenthesisNode) {\n            // put in parenthesis?\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      return result;\n    }\n    /**\n     * Get string representation.\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    OperatorNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var implicit = options && options.implicit ? options.implicit : 'hide';\n      var args = this.args;\n      var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);\n\n      if (args.length === 1) {\n        // unary operators\n        var assoc = operators.getAssociativity(this, parenthesis);\n        var operand = args[0].toString(options);\n\n        if (parens[0]) {\n          operand = '(' + operand + ')';\n        } // for example for \"not\", we want a space between operand and argument\n\n\n        var opIsNamed = /[a-zA-Z]+/.test(this.op);\n\n        if (assoc === 'right') {\n          // prefix operator\n          return this.op + (opIsNamed ? ' ' : '') + operand;\n        } else if (assoc === 'left') {\n          // postfix\n          return operand + (opIsNamed ? ' ' : '') + this.op;\n        } // fall back to postfix\n\n\n        return operand + this.op;\n      } else if (args.length === 2) {\n        var lhs = args[0].toString(options); // left hand side\n\n        var rhs = args[1].toString(options); // right hand side\n\n        if (parens[0]) {\n          // left hand side in parenthesis?\n          lhs = '(' + lhs + ')';\n        }\n\n        if (parens[1]) {\n          // right hand side in parenthesis?\n          rhs = '(' + rhs + ')';\n        }\n\n        if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n          return lhs + ' ' + rhs;\n        }\n\n        return lhs + ' ' + this.op + ' ' + rhs;\n      } else if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {\n        var stringifiedArgs = args.map(function (arg, index) {\n          arg = arg.toString(options);\n\n          if (parens[index]) {\n            // put in parenthesis?\n            arg = '(' + arg + ')';\n          }\n\n          return arg;\n        });\n\n        if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n          return stringifiedArgs.join(' ');\n        }\n\n        return stringifiedArgs.join(' ' + this.op + ' ');\n      } else {\n        // fallback to formatting as a function call\n        return this.fn + '(' + this.args.join(', ') + ')';\n      }\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    OperatorNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'OperatorNode',\n        op: this.op,\n        fn: this.fn,\n        args: this.args,\n        implicit: this.implicit\n      };\n    };\n    /**\n     * Instantiate an OperatorNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"OperatorNode\", \"op\": \"+\", \"fn\": \"add\", \"args\": [...], \"implicit\": false}`,\n     *                       where mathjs is optional\n     * @returns {OperatorNode}\n     */\n\n\n    OperatorNode.fromJSON = function (json) {\n      return new OperatorNode(json.op, json.fn, json.args, json.implicit);\n    };\n    /**\n     * Get HTML representation.\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    OperatorNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var implicit = options && options.implicit ? options.implicit : 'hide';\n      var args = this.args;\n      var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);\n\n      if (args.length === 1) {\n        // unary operators\n        var assoc = operators.getAssociativity(this, parenthesis);\n        var operand = args[0].toHTML(options);\n\n        if (parens[0]) {\n          operand = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + operand + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n        }\n\n        if (assoc === 'right') {\n          // prefix operator\n          return '<span class=\"math-operator math-unary-operator math-lefthand-unary-operator\">' + escape$3(this.op) + '</span>' + operand;\n        } else {\n          // postfix when assoc === 'left' or undefined\n          return operand + '<span class=\"math-operator math-unary-operator math-righthand-unary-operator\">' + escape$3(this.op) + '</span>';\n        }\n      } else if (args.length === 2) {\n        // binary operatoes\n        var lhs = args[0].toHTML(options); // left hand side\n\n        var rhs = args[1].toHTML(options); // right hand side\n\n        if (parens[0]) {\n          // left hand side in parenthesis?\n          lhs = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + lhs + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n        }\n\n        if (parens[1]) {\n          // right hand side in parenthesis?\n          rhs = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + rhs + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n        }\n\n        if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n          return lhs + '<span class=\"math-operator math-binary-operator math-implicit-binary-operator\"></span>' + rhs;\n        }\n\n        return lhs + '<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">' + escape$3(this.op) + '</span>' + rhs;\n      } else {\n        var stringifiedArgs = args.map(function (arg, index) {\n          arg = arg.toHTML(options);\n\n          if (parens[index]) {\n            // put in parenthesis?\n            arg = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + arg + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n          }\n\n          return arg;\n        });\n\n        if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {\n          if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n            return stringifiedArgs.join('<span class=\"math-operator math-binary-operator math-implicit-binary-operator\"></span>');\n          }\n\n          return stringifiedArgs.join('<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">' + escape$3(this.op) + '</span>');\n        } else {\n          // fallback to formatting as a function call\n          return '<span class=\"math-function\">' + escape$3(this.fn) + '</span><span class=\"math-paranthesis math-round-parenthesis\">(</span>' + stringifiedArgs.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-paranthesis math-round-parenthesis\">)</span>';\n        }\n      }\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    OperatorNode.prototype._toTex = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var implicit = options && options.implicit ? options.implicit : 'hide';\n      var args = this.args;\n      var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, true);\n      var op = latex.operators[this.fn];\n      op = typeof op === 'undefined' ? this.op : op; // fall back to using this.op\n\n      if (args.length === 1) {\n        // unary operators\n        var assoc = operators.getAssociativity(this, parenthesis);\n        var operand = args[0].toTex(options);\n\n        if (parens[0]) {\n          operand = \"\\\\left(\".concat(operand, \"\\\\right)\");\n        }\n\n        if (assoc === 'right') {\n          // prefix operator\n          return op + operand;\n        } else if (assoc === 'left') {\n          // postfix operator\n          return operand + op;\n        } // fall back to postfix\n\n\n        return operand + op;\n      } else if (args.length === 2) {\n        // binary operators\n        var lhs = args[0]; // left hand side\n\n        var lhsTex = lhs.toTex(options);\n\n        if (parens[0]) {\n          lhsTex = \"\\\\left(\".concat(lhsTex, \"\\\\right)\");\n        }\n\n        var rhs = args[1]; // right hand side\n\n        var rhsTex = rhs.toTex(options);\n\n        if (parens[1]) {\n          rhsTex = \"\\\\left(\".concat(rhsTex, \"\\\\right)\");\n        } // handle some exceptions (due to the way LaTeX works)\n\n\n        var lhsIdentifier;\n\n        if (parenthesis === 'keep') {\n          lhsIdentifier = lhs.getIdentifier();\n        } else {\n          // Ignore ParenthesisNodes if in 'keep' mode\n          lhsIdentifier = lhs.getContent().getIdentifier();\n        }\n\n        switch (this.getIdentifier()) {\n          case 'OperatorNode:divide':\n            // op contains '\\\\frac' at this point\n            return op + '{' + lhsTex + '}' + '{' + rhsTex + '}';\n\n          case 'OperatorNode:pow':\n            lhsTex = '{' + lhsTex + '}';\n            rhsTex = '{' + rhsTex + '}';\n\n            switch (lhsIdentifier) {\n              case 'ConditionalNode': //\n\n              case 'OperatorNode:divide':\n                lhsTex = \"\\\\left(\".concat(lhsTex, \"\\\\right)\");\n            }\n\n            break;\n\n          case 'OperatorNode:multiply':\n            if (this.implicit && implicit === 'hide') {\n              return lhsTex + '~' + rhsTex;\n            }\n\n        }\n\n        return lhsTex + op + rhsTex;\n      } else if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {\n        var texifiedArgs = args.map(function (arg, index) {\n          arg = arg.toTex(options);\n\n          if (parens[index]) {\n            arg = \"\\\\left(\".concat(arg, \"\\\\right)\");\n          }\n\n          return arg;\n        });\n\n        if (this.getIdentifier() === 'OperatorNode:multiply' && this.implicit) {\n          return texifiedArgs.join('~');\n        }\n\n        return texifiedArgs.join(op);\n      } else {\n        // fall back to formatting as a function call\n        // as this is a fallback, it doesn't use\n        // fancy function names\n        return '\\\\mathrm{' + this.fn + '}\\\\left(' + args.map(function (arg) {\n          return arg.toTex(options);\n        }).join(',') + '\\\\right)';\n      }\n    };\n    /**\n     * Get identifier.\n     * @return {string}\n     */\n\n\n    OperatorNode.prototype.getIdentifier = function () {\n      return this.type + ':' + this.fn;\n    };\n\n    return OperatorNode;\n  }\n\n  var name$l = 'OperatorNode';\n  var path$d = 'expression.node';\n  var factory_1$n = factory$n;\n\n  var OperatorNode = {\n  \tname: name$l,\n  \tpath: path$d,\n  \tfactory: factory_1$n\n  };\n\n  function factory$o(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor ParenthesisNode\n     * @extends {Node}\n     * A parenthesis node describes manual parenthesis from the user input\n     * @param {Node} content\n     * @extends {Node}\n     */\n\n    function ParenthesisNode(content) {\n      if (!(this instanceof ParenthesisNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input\n\n\n      if (!type.isNode(content)) {\n        throw new TypeError('Node expected for parameter \"content\"');\n      }\n\n      this.content = content;\n    }\n\n    ParenthesisNode.prototype = new Node$1();\n    ParenthesisNode.prototype.type = 'ParenthesisNode';\n    ParenthesisNode.prototype.isParenthesisNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    ParenthesisNode.prototype._compile = function (math, argNames) {\n      return this.content._compile(math, argNames);\n    };\n    /**\n     * Get the content of the current Node.\n     * @return {Node} content\n     * @override\n     **/\n\n\n    ParenthesisNode.prototype.getContent = function () {\n      return this.content.getContent();\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    ParenthesisNode.prototype.forEach = function (callback) {\n      callback(this.content, 'content', this);\n    };\n    /**\n     * Create a new ParenthesisNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node) : Node} callback\n     * @returns {ParenthesisNode} Returns a clone of the node\n     */\n\n\n    ParenthesisNode.prototype.map = function (callback) {\n      var content = callback(this.content, 'content', this);\n      return new ParenthesisNode(content);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {ParenthesisNode}\n     */\n\n\n    ParenthesisNode.prototype.clone = function () {\n      return new ParenthesisNode(this.content);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ParenthesisNode.prototype._toString = function (options) {\n      if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {\n        return '(' + this.content.toString(options) + ')';\n      }\n\n      return this.content.toString(options);\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    ParenthesisNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'ParenthesisNode',\n        content: this.content\n      };\n    };\n    /**\n     * Instantiate an ParenthesisNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"ParenthesisNode\", \"content\": ...}`,\n     *                       where mathjs is optional\n     * @returns {ParenthesisNode}\n     */\n\n\n    ParenthesisNode.fromJSON = function (json) {\n      return new ParenthesisNode(json.content);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ParenthesisNode.prototype.toHTML = function (options) {\n      if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {\n        return '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + this.content.toHTML(options) + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      return this.content.toHTML(options);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    ParenthesisNode.prototype._toTex = function (options) {\n      if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {\n        return \"\\\\left(\".concat(this.content.toTex(options), \"\\\\right)\");\n      }\n\n      return this.content.toTex(options);\n    };\n\n    return ParenthesisNode;\n  }\n\n  var name$m = 'ParenthesisNode';\n  var path$e = 'expression.node';\n  var factory_1$o = factory$o;\n\n  var ParenthesisNode = {\n  \tname: name$m,\n  \tpath: path$e,\n  \tfactory: factory_1$o\n  };\n\n  var escape$4 = string.escape;\n\n  var hasOwnProperty$3 = object.hasOwnProperty;\n\n  var getSafeProperty$6 = customs.getSafeProperty;\n\n  function factory$p(type, config, load, typed, math) {\n    var Node$1 = load(Node);\n    /**\n     * Check whether some name is a valueless unit like \"inch\".\n     * @param {string} name\n     * @return {boolean}\n     */\n\n    function isValuelessUnit(name) {\n      return type.Unit ? type.Unit.isValuelessUnit(name) : false;\n    }\n    /**\n     * @constructor SymbolNode\n     * @extends {Node}\n     * A symbol node can hold and resolve a symbol\n     * @param {string} name\n     * @extends {Node}\n     */\n\n\n    function SymbolNode(name) {\n      if (!(this instanceof SymbolNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate input\n\n\n      if (typeof name !== 'string') throw new TypeError('String expected for parameter \"name\"');\n      this.name = name;\n    }\n\n    SymbolNode.prototype = new Node$1();\n    SymbolNode.prototype.type = 'SymbolNode';\n    SymbolNode.prototype.isSymbolNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    SymbolNode.prototype._compile = function (math, argNames) {\n      var name = this.name;\n\n      if (hasOwnProperty$3(argNames, name)) {\n        // this is a FunctionAssignment argument\n        // (like an x when inside the expression of a function assignment `f(x) = ...`)\n        return function (scope, args, context) {\n          return args[name];\n        };\n      } else if (name in math) {\n        return function (scope, args, context) {\n          return name in scope ? getSafeProperty$6(scope, name) : getSafeProperty$6(math, name);\n        };\n      } else {\n        var isUnit = isValuelessUnit(name);\n        return function (scope, args, context) {\n          return name in scope ? getSafeProperty$6(scope, name) : isUnit ? new type.Unit(null, name) : undef(name);\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    SymbolNode.prototype.forEach = function (callback) {} // nothing to do, we don't have childs\n\n    /**\n     * Create a new SymbolNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node) : Node} callback\n     * @returns {SymbolNode} Returns a clone of the node\n     */\n    ;\n\n    SymbolNode.prototype.map = function (callback) {\n      return this.clone();\n    };\n    /**\n     * Throws an error 'Undefined symbol {name}'\n     * @param {string} name\n     */\n\n\n    function undef(name) {\n      throw new Error('Undefined symbol ' + name);\n    }\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {SymbolNode}\n     */\n\n\n    SymbolNode.prototype.clone = function () {\n      return new SymbolNode(this.name);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    SymbolNode.prototype._toString = function (options) {\n      return this.name;\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    SymbolNode.prototype.toHTML = function (options) {\n      var name = escape$4(this.name);\n\n      if (name === 'true' || name === 'false') {\n        return '<span class=\"math-symbol math-boolean\">' + name + '</span>';\n      } else if (name === 'i') {\n        return '<span class=\"math-symbol math-imaginary-symbol\">' + name + '</span>';\n      } else if (name === 'Infinity') {\n        return '<span class=\"math-symbol math-infinity-symbol\">' + name + '</span>';\n      } else if (name === 'NaN') {\n        return '<span class=\"math-symbol math-nan-symbol\">' + name + '</span>';\n      } else if (name === 'null') {\n        return '<span class=\"math-symbol math-null-symbol\">' + name + '</span>';\n      } else if (name === 'undefined') {\n        return '<span class=\"math-symbol math-undefined-symbol\">' + name + '</span>';\n      }\n\n      return '<span class=\"math-symbol\">' + name + '</span>';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    SymbolNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'SymbolNode',\n        name: this.name\n      };\n    };\n    /**\n     * Instantiate a SymbolNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"SymbolNode\", name: \"x\"}`,\n     *                       where mathjs is optional\n     * @returns {SymbolNode}\n     */\n\n\n    SymbolNode.fromJSON = function (json) {\n      return new SymbolNode(json.name);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n\n    SymbolNode.prototype._toTex = function (options) {\n      var isUnit = false;\n\n      if (typeof math[this.name] === 'undefined' && isValuelessUnit(this.name)) {\n        isUnit = true;\n      }\n\n      var symbol = latex.toSymbol(this.name, isUnit);\n\n      if (symbol[0] === '\\\\') {\n        // no space needed if the symbol starts with '\\'\n        return symbol;\n      } // the space prevents symbols from breaking stuff like '\\cdot' if it's written right before the symbol\n\n\n      return ' ' + symbol;\n    };\n\n    return SymbolNode;\n  }\n\n  var name$n = 'SymbolNode';\n  var path$f = 'expression.node';\n  var math$3 = true; // request access to the math namespace as 5th argument of the factory function\n\n  var factory_1$p = factory$p;\n\n  var SymbolNode = {\n  \tname: name$n,\n  \tpath: path$f,\n  \tmath: math$3,\n  \tfactory: factory_1$p\n  };\n\n  function _typeof$9(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$9 = function _typeof(obj) { return typeof obj; }; } else { _typeof$9 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$9(obj); }\n\n  function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }\n\n  var latex$1 = latex;\n\n  var escape$5 = string.escape;\n\n  var hasOwnProperty$4 = object.hasOwnProperty;\n\n  var map$4 = array.map;\n\n  var validateSafeMethod$1 = customs.validateSafeMethod;\n\n  var getSafeProperty$7 = customs.getSafeProperty;\n\n  function factory$q(type, config, load, typed, math) {\n    var Node$1 = load(Node);\n    var SymbolNode$1 = load(SymbolNode);\n    /**\n     * @constructor FunctionNode\n     * @extends {./Node}\n     * invoke a list with arguments on a node\n     * @param {./Node | string} fn Node resolving with a function on which to invoke\n     *                             the arguments, typically a SymboNode or AccessorNode\n     * @param {./Node[]} args\n     */\n\n    function FunctionNode(fn, args) {\n      if (!(this instanceof FunctionNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (typeof fn === 'string') {\n        fn = new SymbolNode$1(fn);\n      } // validate input\n\n\n      if (!type.isNode(fn)) throw new TypeError('Node expected as parameter \"fn\"');\n\n      if (!Array.isArray(args) || !args.every(type.isNode)) {\n        throw new TypeError('Array containing Nodes expected for parameter \"args\"');\n      }\n\n      this.fn = fn;\n      this.args = args || []; // readonly property name\n\n      Object.defineProperty(this, 'name', {\n        get: function () {\n          return this.fn.name || '';\n        }.bind(this),\n        set: function set() {\n          throw new Error('Cannot assign a new name, name is read-only');\n        }\n      }); // TODO: deprecated since v3, remove some day\n\n      var deprecated = function deprecated() {\n        throw new Error('Property `FunctionNode.object` is deprecated, use `FunctionNode.fn` instead');\n      };\n\n      Object.defineProperty(this, 'object', {\n        get: deprecated,\n        set: deprecated\n      });\n    }\n\n    FunctionNode.prototype = new Node$1();\n    FunctionNode.prototype.type = 'FunctionNode';\n    FunctionNode.prototype.isFunctionNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    FunctionNode.prototype._compile = function (math, argNames) {\n      if (!(this instanceof FunctionNode)) {\n        throw new TypeError('No valid FunctionNode');\n      } // compile arguments\n\n\n      var evalArgs = map$4(this.args, function (arg) {\n        return arg._compile(math, argNames);\n      });\n\n      if (type.isSymbolNode(this.fn)) {\n        // we can statically determine whether the function has an rawArgs property\n        var name = this.fn.name;\n        var fn = name in math ? getSafeProperty$7(math, name) : undefined;\n        var isRaw = typeof fn === 'function' && fn.rawArgs === true;\n\n        if (isRaw) {\n          // pass unevaluated parameters (nodes) to the function\n          // \"raw\" evaluation\n          var rawArgs = this.args;\n          return function evalFunctionNode(scope, args, context) {\n            return (name in scope ? getSafeProperty$7(scope, name) : fn)(rawArgs, math, _extends$1({}, scope, args));\n          };\n        } else {\n          // \"regular\" evaluation\n          if (evalArgs.length === 1) {\n            var evalArg0 = evalArgs[0];\n            return function evalFunctionNode(scope, args, context) {\n              return (name in scope ? getSafeProperty$7(scope, name) : fn)(evalArg0(scope, args, context));\n            };\n          } else if (evalArgs.length === 2) {\n            var _evalArg = evalArgs[0];\n            var evalArg1 = evalArgs[1];\n            return function evalFunctionNode(scope, args, context) {\n              return (name in scope ? getSafeProperty$7(scope, name) : fn)(_evalArg(scope, args, context), evalArg1(scope, args, context));\n            };\n          } else {\n            return function evalFunctionNode(scope, args, context) {\n              return (name in scope ? getSafeProperty$7(scope, name) : fn).apply(null, map$4(evalArgs, function (evalArg) {\n                return evalArg(scope, args, context);\n              }));\n            };\n          }\n        }\n      } else if (type.isAccessorNode(this.fn) && type.isIndexNode(this.fn.index) && this.fn.index.isObjectProperty()) {\n        // execute the function with the right context: the object of the AccessorNode\n        var evalObject = this.fn.object._compile(math, argNames);\n\n        var prop = this.fn.index.getObjectProperty();\n        var _rawArgs = this.args;\n        return function evalFunctionNode(scope, args, context) {\n          var object = evalObject(scope, args, context);\n          validateSafeMethod$1(object, prop);\n          var isRaw = object[prop] && object[prop].rawArgs;\n          return isRaw ? object[prop](_rawArgs, math, _extends$1({}, scope, args)) // \"raw\" evaluation\n          : object[prop].apply(object, map$4(evalArgs, function (evalArg) {\n            // \"regular\" evaluation\n            return evalArg(scope, args, context);\n          }));\n        };\n      } else {\n        // node.fn.isAccessorNode && !node.fn.index.isObjectProperty()\n        // we have to dynamically determine whether the function has a rawArgs property\n        var evalFn = this.fn._compile(math, argNames);\n\n        var _rawArgs2 = this.args;\n        return function evalFunctionNode(scope, args, context) {\n          var fn = evalFn(scope, args, context);\n          var isRaw = fn && fn.rawArgs;\n          return isRaw ? fn(_rawArgs2, math, _extends$1({}, scope, args)) // \"raw\" evaluation\n          : fn.apply(fn, map$4(evalArgs, function (evalArg) {\n            // \"regular\" evaluation\n            return evalArg(scope, args, context);\n          }));\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    FunctionNode.prototype.forEach = function (callback) {\n      callback(this.fn, 'fn', this);\n\n      for (var i = 0; i < this.args.length; i++) {\n        callback(this.args[i], 'args[' + i + ']', this);\n      }\n    };\n    /**\n     * Create a new FunctionNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {FunctionNode} Returns a transformed copy of the node\n     */\n\n\n    FunctionNode.prototype.map = function (callback) {\n      var fn = this._ifNode(callback(this.fn, 'fn', this));\n\n      var args = [];\n\n      for (var i = 0; i < this.args.length; i++) {\n        args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));\n      }\n\n      return new FunctionNode(fn, args);\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {FunctionNode}\n     */\n\n\n    FunctionNode.prototype.clone = function () {\n      return new FunctionNode(this.fn, this.args.slice(0));\n    }; // backup Node's toString function\n    // @private\n\n\n    var nodeToString = FunctionNode.prototype.toString;\n    /**\n     * Get string representation. (wrapper function)\n     * This overrides parts of Node's toString function.\n     * If callback is an object containing callbacks, it\n     * calls the correct callback for the current node,\n     * otherwise it falls back to calling Node's toString\n     * function.\n     *\n     * @param {Object} options\n     * @return {string} str\n     * @override\n     */\n\n    FunctionNode.prototype.toString = function (options) {\n      var customString;\n      var name = this.fn.toString(options);\n\n      if (options && _typeof$9(options.handler) === 'object' && hasOwnProperty$4(options.handler, name)) {\n        // callback is a map of callback functions\n        customString = options.handler[name](this, options);\n      }\n\n      if (typeof customString !== 'undefined') {\n        return customString;\n      } // fall back to Node's toString\n\n\n      return nodeToString.call(this, options);\n    };\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionNode.prototype._toString = function (options) {\n      var args = this.args.map(function (arg) {\n        return arg.toString(options);\n      });\n      var fn = type.isFunctionAssignmentNode(this.fn) ? '(' + this.fn.toString(options) + ')' : this.fn.toString(options); // format the arguments like \"add(2, 4.2)\"\n\n      return fn + '(' + args.join(', ') + ')';\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    FunctionNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'FunctionNode',\n        fn: this.fn,\n        args: this.args\n      };\n    };\n    /**\n     * Instantiate an AssignmentNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"FunctionNode\", fn: ..., args: ...}`,\n     *                       where mathjs is optional\n     * @returns {FunctionNode}\n     */\n\n\n    FunctionNode.fromJSON = function (json) {\n      return new FunctionNode(json.fn, json.args);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionNode.prototype.toHTML = function (options) {\n      var args = this.args.map(function (arg) {\n        return arg.toHTML(options);\n      }); // format the arguments like \"add(2, 4.2)\"\n\n      return '<span class=\"math-function\">' + escape$5(this.fn) + '</span><span class=\"math-paranthesis math-round-parenthesis\">(</span>' + args.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-paranthesis math-round-parenthesis\">)</span>';\n    };\n    /*\n     * Expand a LaTeX template\n     *\n     * @param {string} template\n     * @param {Node} node\n     * @param {Object} options\n     * @private\n     **/\n\n\n    function expandTemplate(template, node, options) {\n      var latex = ''; // Match everything of the form ${identifier} or ${identifier[2]} or $$\n      // while submatching identifier and 2 (in the second case)\n\n      var regex = new RegExp('\\\\$(?:\\\\{([a-z_][a-z_0-9]*)(?:\\\\[([0-9]+)\\\\])?\\\\}|\\\\$)', 'ig');\n      var inputPos = 0; // position in the input string\n\n      var match;\n\n      while ((match = regex.exec(template)) !== null) {\n        // go through all matches\n        // add everything in front of the match to the LaTeX string\n        latex += template.substring(inputPos, match.index);\n        inputPos = match.index;\n\n        if (match[0] === '$$') {\n          // escaped dollar sign\n          latex += '$';\n          inputPos++;\n        } else {\n          // template parameter\n          inputPos += match[0].length;\n          var property = node[match[1]];\n\n          if (!property) {\n            throw new ReferenceError('Template: Property ' + match[1] + ' does not exist.');\n          }\n\n          if (match[2] === undefined) {\n            // no square brackets\n            switch (_typeof$9(property)) {\n              case 'string':\n                latex += property;\n                break;\n\n              case 'object':\n                if (type.isNode(property)) {\n                  latex += property.toTex(options);\n                } else if (Array.isArray(property)) {\n                  // make array of Nodes into comma separated list\n                  latex += property.map(function (arg, index) {\n                    if (type.isNode(arg)) {\n                      return arg.toTex(options);\n                    }\n\n                    throw new TypeError('Template: ' + match[1] + '[' + index + '] is not a Node.');\n                  }).join(',');\n                } else {\n                  throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');\n                }\n\n                break;\n\n              default:\n                throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');\n            }\n          } else {\n            // with square brackets\n            if (type.isNode(property[match[2]] && property[match[2]])) {\n              latex += property[match[2]].toTex(options);\n            } else {\n              throw new TypeError('Template: ' + match[1] + '[' + match[2] + '] is not a Node.');\n            }\n          }\n        }\n      }\n\n      latex += template.slice(inputPos); // append rest of the template\n\n      return latex;\n    } // backup Node's toTex function\n    // @private\n\n\n    var nodeToTex = FunctionNode.prototype.toTex;\n    /**\n     * Get LaTeX representation. (wrapper function)\n     * This overrides parts of Node's toTex function.\n     * If callback is an object containing callbacks, it\n     * calls the correct callback for the current node,\n     * otherwise it falls back to calling Node's toTex\n     * function.\n     *\n     * @param {Object} options\n     * @return {string}\n     */\n\n    FunctionNode.prototype.toTex = function (options) {\n      var customTex;\n\n      if (options && _typeof$9(options.handler) === 'object' && hasOwnProperty$4(options.handler, this.name)) {\n        // callback is a map of callback functions\n        customTex = options.handler[this.name](this, options);\n      }\n\n      if (typeof customTex !== 'undefined') {\n        return customTex;\n      } // fall back to Node's toTex\n\n\n      return nodeToTex.call(this, options);\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    FunctionNode.prototype._toTex = function (options) {\n      var args = this.args.map(function (arg) {\n        // get LaTeX of the arguments\n        return arg.toTex(options);\n      });\n      var latexConverter;\n\n      if (math[this.name] && (typeof math[this.name].toTex === 'function' || _typeof$9(math[this.name].toTex) === 'object' || typeof math[this.name].toTex === 'string')) {\n        // .toTex is a callback function\n        latexConverter = math[this.name].toTex;\n      }\n\n      var customToTex;\n\n      switch (_typeof$9(latexConverter)) {\n        case 'function':\n          // a callback function\n          customToTex = latexConverter(this, options);\n          break;\n\n        case 'string':\n          // a template string\n          customToTex = expandTemplate(latexConverter, this, options);\n          break;\n\n        case 'object':\n          // an object with different \"converters\" for different numbers of arguments\n          switch (_typeof$9(latexConverter[args.length])) {\n            case 'function':\n              customToTex = latexConverter[args.length](this, options);\n              break;\n\n            case 'string':\n              customToTex = expandTemplate(latexConverter[args.length], this, options);\n              break;\n          }\n\n      }\n\n      if (typeof customToTex !== 'undefined') {\n        return customToTex;\n      }\n\n      return expandTemplate(latex$1.defaultTemplate, this, options);\n    };\n    /**\n     * Get identifier.\n     * @return {string}\n     */\n\n\n    FunctionNode.prototype.getIdentifier = function () {\n      return this.type + ':' + this.name;\n    };\n\n    return FunctionNode;\n  }\n\n  var name$o = 'FunctionNode';\n  var path$g = 'expression.node';\n  var math$4 = true; // request access to the math namespace as 5th argument of the factory function\n\n  var factory_1$q = factory$q;\n\n  var FunctionNode = {\n  \tname: name$o,\n  \tpath: path$g,\n  \tmath: math$4,\n  \tfactory: factory_1$q\n  };\n\n  function factory$r(type, config, load, typed) {\n    var Node$1 = load(Node);\n    /**\n     * @constructor RangeNode\n     * @extends {Node}\n     * create a range\n     * @param {Node} start  included lower-bound\n     * @param {Node} end    included upper-bound\n     * @param {Node} [step] optional step\n     */\n\n    function RangeNode(start, end, step) {\n      if (!(this instanceof RangeNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      } // validate inputs\n\n\n      if (!type.isNode(start)) throw new TypeError('Node expected');\n      if (!type.isNode(end)) throw new TypeError('Node expected');\n      if (step && !type.isNode(step)) throw new TypeError('Node expected');\n      if (arguments.length > 3) throw new Error('Too many arguments');\n      this.start = start; // included lower-bound\n\n      this.end = end; // included upper-bound\n\n      this.step = step || null; // optional step\n    }\n\n    RangeNode.prototype = new Node$1();\n    RangeNode.prototype.type = 'RangeNode';\n    RangeNode.prototype.isRangeNode = true;\n    /**\n     * Check whether the RangeNode needs the `end` symbol to be defined.\n     * This end is the size of the Matrix in current dimension.\n     * @return {boolean}\n     */\n\n    RangeNode.prototype.needsEnd = function () {\n      // find all `end` symbols in this RangeNode\n      var endSymbols = this.filter(function (node) {\n        return type.isSymbolNode(node) && node.name === 'end';\n      });\n      return endSymbols.length > 0;\n    };\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n\n    RangeNode.prototype._compile = function (math, argNames) {\n      var range = math.range;\n\n      var evalStart = this.start._compile(math, argNames);\n\n      var evalEnd = this.end._compile(math, argNames);\n\n      if (this.step) {\n        var evalStep = this.step._compile(math, argNames);\n\n        return function evalRangeNode(scope, args, context) {\n          return range(evalStart(scope, args, context), evalEnd(scope, args, context), evalStep(scope, args, context));\n        };\n      } else {\n        return function evalRangeNode(scope, args, context) {\n          return range(evalStart(scope, args, context), evalEnd(scope, args, context));\n        };\n      }\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    RangeNode.prototype.forEach = function (callback) {\n      callback(this.start, 'start', this);\n      callback(this.end, 'end', this);\n\n      if (this.step) {\n        callback(this.step, 'step', this);\n      }\n    };\n    /**\n     * Create a new RangeNode having it's childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {RangeNode} Returns a transformed copy of the node\n     */\n\n\n    RangeNode.prototype.map = function (callback) {\n      return new RangeNode(this._ifNode(callback(this.start, 'start', this)), this._ifNode(callback(this.end, 'end', this)), this.step && this._ifNode(callback(this.step, 'step', this)));\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {RangeNode}\n     */\n\n\n    RangeNode.prototype.clone = function () {\n      return new RangeNode(this.start, this.end, this.step && this.step);\n    };\n    /**\n     * Calculate the necessary parentheses\n     * @param {Node} node\n     * @param {string} parenthesis\n     * @return {Object} parentheses\n     * @private\n     */\n\n\n    function calculateNecessaryParentheses(node, parenthesis) {\n      var precedence = operators.getPrecedence(node, parenthesis);\n      var parens = {};\n      var startPrecedence = operators.getPrecedence(node.start, parenthesis);\n      parens.start = startPrecedence !== null && startPrecedence <= precedence || parenthesis === 'all';\n\n      if (node.step) {\n        var stepPrecedence = operators.getPrecedence(node.step, parenthesis);\n        parens.step = stepPrecedence !== null && stepPrecedence <= precedence || parenthesis === 'all';\n      }\n\n      var endPrecedence = operators.getPrecedence(node.end, parenthesis);\n      parens.end = endPrecedence !== null && endPrecedence <= precedence || parenthesis === 'all';\n      return parens;\n    }\n    /**\n     * Get string representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RangeNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var parens = calculateNecessaryParentheses(this, parenthesis); // format string as start:step:stop\n\n      var str;\n      var start = this.start.toString(options);\n\n      if (parens.start) {\n        start = '(' + start + ')';\n      }\n\n      str = start;\n\n      if (this.step) {\n        var step = this.step.toString(options);\n\n        if (parens.step) {\n          step = '(' + step + ')';\n        }\n\n        str += ':' + step;\n      }\n\n      var end = this.end.toString(options);\n\n      if (parens.end) {\n        end = '(' + end + ')';\n      }\n\n      str += ':' + end;\n      return str;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    RangeNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'RangeNode',\n        start: this.start,\n        end: this.end,\n        step: this.step\n      };\n    };\n    /**\n     * Instantiate an RangeNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"RangeNode\", \"start\": ..., \"end\": ..., \"step\": ...}`,\n     *                       where mathjs is optional\n     * @returns {RangeNode}\n     */\n\n\n    RangeNode.fromJSON = function (json) {\n      return new RangeNode(json.start, json.end, json.step);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RangeNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var parens = calculateNecessaryParentheses(this, parenthesis); // format string as start:step:stop\n\n      var str;\n      var start = this.start.toHTML(options);\n\n      if (parens.start) {\n        start = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + start + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      str = start;\n\n      if (this.step) {\n        var step = this.step.toHTML(options);\n\n        if (parens.step) {\n          step = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + step + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n        }\n\n        str += '<span class=\"math-operator math-range-operator\">:</span>' + step;\n      }\n\n      var end = this.end.toHTML(options);\n\n      if (parens.end) {\n        end = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + end + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      str += '<span class=\"math-operator math-range-operator\">:</span>' + end;\n      return str;\n    };\n    /**\n     * Get LaTeX representation\n     * @params {Object} options\n     * @return {string} str\n     */\n\n\n    RangeNode.prototype._toTex = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var parens = calculateNecessaryParentheses(this, parenthesis);\n      var str = this.start.toTex(options);\n\n      if (parens.start) {\n        str = \"\\\\left(\".concat(str, \"\\\\right)\");\n      }\n\n      if (this.step) {\n        var step = this.step.toTex(options);\n\n        if (parens.step) {\n          step = \"\\\\left(\".concat(step, \"\\\\right)\");\n        }\n\n        str += ':' + step;\n      }\n\n      var end = this.end.toTex(options);\n\n      if (parens.end) {\n        end = \"\\\\left(\".concat(end, \"\\\\right)\");\n      }\n\n      str += ':' + end;\n      return str;\n    };\n\n    return RangeNode;\n  }\n\n  var name$p = 'RangeNode';\n  var path$h = 'expression.node';\n  var factory_1$r = factory$r;\n\n  var RangeNode = {\n  \tname: name$p,\n  \tpath: path$h,\n  \tfactory: factory_1$r\n  };\n\n  var escape$6 = string.escape;\n\n  function factory$s(type, config, load, typed) {\n    var Node$1 = load(Node);\n\n    var getSafeProperty = customs.getSafeProperty;\n    /**\n     * A node representing a chained conditional expression, such as 'x > y > z'\n     *\n     * @param {String[]} conditionals   An array of conditional operators used to compare the parameters\n     * @param {Node[]} params   The parameters that will be compared\n     *\n     * @constructor RelationalNode\n     * @extends {Node}\n     */\n\n\n    function RelationalNode(conditionals, params) {\n      if (!(this instanceof RelationalNode)) {\n        throw new SyntaxError('Constructor must be called with the new operator');\n      }\n\n      if (!Array.isArray(conditionals)) throw new TypeError('Parameter conditionals must be an array');\n      if (!Array.isArray(params)) throw new TypeError('Parameter params must be an array');\n      if (conditionals.length !== params.length - 1) throw new TypeError('Parameter params must contain exactly one more element than parameter conditionals');\n      this.conditionals = conditionals;\n      this.params = params;\n    }\n\n    RelationalNode.prototype = new Node$1();\n    RelationalNode.prototype.type = 'RelationalNode';\n    RelationalNode.prototype.isRelationalNode = true;\n    /**\n     * Compile a node into a JavaScript function.\n     * This basically pre-calculates as much as possible and only leaves open\n     * calculations which depend on a dynamic scope with variables.\n     * @param {Object} math     Math.js namespace with functions and constants.\n     * @param {Object} argNames An object with argument names as key and `true`\n     *                          as value. Used in the SymbolNode to optimize\n     *                          for arguments from user assigned functions\n     *                          (see FunctionAssignmentNode) or special symbols\n     *                          like `end` (see IndexNode).\n     * @return {function} Returns a function which can be called like:\n     *                        evalNode(scope: Object, args: Object, context: *)\n     */\n\n    RelationalNode.prototype._compile = function (math, argNames) {\n      var self = this;\n      var compiled = this.params.map(function (p) {\n        return p._compile(math, argNames);\n      });\n      return function evalRelationalNode(scope, args, context) {\n        var evalLhs;\n        var evalRhs = compiled[0](scope, args, context);\n\n        for (var i = 0; i < self.conditionals.length; i++) {\n          evalLhs = evalRhs;\n          evalRhs = compiled[i + 1](scope, args, context);\n          var condFn = getSafeProperty(math, self.conditionals[i]);\n\n          if (!condFn(evalLhs, evalRhs)) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n    };\n    /**\n     * Execute a callback for each of the child nodes of this node\n     * @param {function(child: Node, path: string, parent: Node)} callback\n     */\n\n\n    RelationalNode.prototype.forEach = function (callback) {\n      var _this = this;\n\n      this.params.forEach(function (n, i) {\n        return callback(n, 'params[' + i + ']', _this);\n      }, this);\n    };\n    /**\n     * Create a new RelationalNode having its childs be the results of calling\n     * the provided callback function for each of the childs of the original node.\n     * @param {function(child: Node, path: string, parent: Node): Node} callback\n     * @returns {RelationalNode} Returns a transformed copy of the node\n     */\n\n\n    RelationalNode.prototype.map = function (callback) {\n      var _this2 = this;\n\n      return new RelationalNode(this.conditionals.slice(), this.params.map(function (n, i) {\n        return _this2._ifNode(callback(n, 'params[' + i + ']', _this2));\n      }, this));\n    };\n    /**\n     * Create a clone of this node, a shallow copy\n     * @return {RelationalNode}\n     */\n\n\n    RelationalNode.prototype.clone = function () {\n      return new RelationalNode(this.conditionals, this.params);\n    };\n    /**\n     * Get string representation.\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RelationalNode.prototype._toString = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis);\n      var paramStrings = this.params.map(function (p, index) {\n        var paramPrecedence = operators.getPrecedence(p, parenthesis);\n        return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '(' + p.toString(options) + ')' : p.toString(options);\n      });\n      var operatorMap = {\n        'equal': '==',\n        'unequal': '!=',\n        'smaller': '<',\n        'larger': '>',\n        'smallerEq': '<=',\n        'largerEq': '>='\n      };\n      var ret = paramStrings[0];\n\n      for (var i = 0; i < this.conditionals.length; i++) {\n        ret += ' ' + operatorMap[this.conditionals[i]] + ' ' + paramStrings[i + 1];\n      }\n\n      return ret;\n    };\n    /**\n     * Get a JSON representation of the node\n     * @returns {Object}\n     */\n\n\n    RelationalNode.prototype.toJSON = function () {\n      return {\n        mathjs: 'RelationalNode',\n        conditionals: this.conditionals,\n        params: this.params\n      };\n    };\n    /**\n     * Instantiate a RelationalNode from its JSON representation\n     * @param {Object} json  An object structured like\n     *                       `{\"mathjs\": \"RelationalNode\", \"condition\": ..., \"trueExpr\": ..., \"falseExpr\": ...}`,\n     *                       where mathjs is optional\n     * @returns {RelationalNode}\n     */\n\n\n    RelationalNode.fromJSON = function (json) {\n      return new RelationalNode(json.conditionals, json.params);\n    };\n    /**\n     * Get HTML representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RelationalNode.prototype.toHTML = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis);\n      var paramStrings = this.params.map(function (p, index) {\n        var paramPrecedence = operators.getPrecedence(p, parenthesis);\n        return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + p.toHTML(options) + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>' : p.toHTML(options);\n      });\n      var operatorMap = {\n        'equal': '==',\n        'unequal': '!=',\n        'smaller': '<',\n        'larger': '>',\n        'smallerEq': '<=',\n        'largerEq': '>='\n      };\n      var ret = paramStrings[0];\n\n      for (var i = 0; i < this.conditionals.length; i++) {\n        ret += '<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">' + escape$6(operatorMap[this.conditionals[i]]) + '</span>' + paramStrings[i + 1];\n      }\n\n      return ret;\n    };\n    /**\n     * Get LaTeX representation\n     * @param {Object} options\n     * @return {string} str\n     */\n\n\n    RelationalNode.prototype._toTex = function (options) {\n      var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n      var precedence = operators.getPrecedence(this, parenthesis);\n      var paramStrings = this.params.map(function (p, index) {\n        var paramPrecedence = operators.getPrecedence(p, parenthesis);\n        return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '\\\\left(' + p.toTex(options) + '\\right)' : p.toTex(options);\n      });\n      var ret = paramStrings[0];\n\n      for (var i = 0; i < this.conditionals.length; i++) {\n        ret += latex.operators[this.conditionals[i]] + paramStrings[i + 1];\n      }\n\n      return ret;\n    };\n\n    return RelationalNode;\n  }\n\n  var name$q = 'RelationalNode';\n  var path$i = 'expression.node';\n  var factory_1$s = factory$s;\n\n  var RelationalNode = {\n  \tname: name$q,\n  \tpath: path$i,\n  \tfactory: factory_1$s\n  };\n\n  function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }\n\n\n\n\n\n  function factory$t(type, config, load, typed) {\n    var numeric$1 = load(numeric);\n    var AccessorNode$1 = load(AccessorNode);\n    var ArrayNode$1 = load(ArrayNode);\n    var AssignmentNode$1 = load(AssignmentNode);\n    var BlockNode$1 = load(BlockNode);\n    var ConditionalNode$1 = load(ConditionalNode);\n    var ConstantNode$1 = load(ConstantNode);\n    var FunctionAssignmentNode$1 = load(FunctionAssignmentNode);\n    var IndexNode$1 = load(IndexNode);\n    var ObjectNode$1 = load(ObjectNode);\n    var OperatorNode$1 = load(OperatorNode);\n    var ParenthesisNode$1 = load(ParenthesisNode);\n    var FunctionNode$1 = load(FunctionNode);\n    var RangeNode$1 = load(RangeNode);\n    var RelationalNode$1 = load(RelationalNode);\n    var SymbolNode$1 = load(SymbolNode);\n    /**\n     * Parse an expression. Returns a node tree, which can be evaluated by\n     * invoking node.eval().\n     *\n     * Syntax:\n     *\n     *     parse(expr)\n     *     parse(expr, options)\n     *     parse([expr1, expr2, expr3, ...])\n     *     parse([expr1, expr2, expr3, ...], options)\n     *\n     * Example:\n     *\n     *     const node = parse('sqrt(3^2 + 4^2)')\n     *     node.compile(math).eval() // 5\n     *\n     *     let scope = {a:3, b:4}\n     *     const node = parse('a * b') // 12\n     *     const code = node.compile(math)\n     *     code.eval(scope) // 12\n     *     scope.a = 5\n     *     code.eval(scope) // 20\n     *\n     *     const nodes = math.parse(['a = 3', 'b = 4', 'a * b'])\n     *     nodes[2].compile(math).eval() // 12\n     *\n     * @param {string | string[] | Matrix} expr\n     * @param {{nodes: Object<string, Node>}} [options]  Available options:\n     *                                                   - `nodes` a set of custom nodes\n     * @return {Node | Node[]} node\n     * @throws {Error}\n     */\n\n    function parse(expr, options) {\n      if (arguments.length !== 1 && arguments.length !== 2) {\n        throw new ArgumentsError_1('parse', arguments.length, 1, 2);\n      } // pass extra nodes\n\n\n      var extraNodes = options && options.nodes ? options.nodes : {};\n\n      if (typeof expr === 'string') {\n        // parse a single expression\n        return parseStart(expr, extraNodes);\n      } else if (Array.isArray(expr) || expr instanceof type.Matrix) {\n        // parse an array or matrix with expressions\n        return deepMap(expr, function (elem) {\n          if (typeof elem !== 'string') throw new TypeError('String expected');\n          return parseStart(elem, extraNodes);\n        });\n      } else {\n        // oops\n        throw new TypeError('String or matrix expected');\n      }\n    } // token types enumeration\n\n\n    var TOKENTYPE = {\n      NULL: 0,\n      DELIMITER: 1,\n      NUMBER: 2,\n      SYMBOL: 3,\n      UNKNOWN: 4 // map with all delimiters\n\n    };\n    var DELIMITERS = {\n      ',': true,\n      '(': true,\n      ')': true,\n      '[': true,\n      ']': true,\n      '{': true,\n      '}': true,\n      '\"': true,\n      '\\'': true,\n      ';': true,\n      '+': true,\n      '-': true,\n      '*': true,\n      '.*': true,\n      '/': true,\n      './': true,\n      '%': true,\n      '^': true,\n      '.^': true,\n      '~': true,\n      '!': true,\n      '&': true,\n      '|': true,\n      '^|': true,\n      '=': true,\n      ':': true,\n      '?': true,\n      '==': true,\n      '!=': true,\n      '<': true,\n      '>': true,\n      '<=': true,\n      '>=': true,\n      '<<': true,\n      '>>': true,\n      '>>>': true // map with all named delimiters\n\n    };\n    var NAMED_DELIMITERS = {\n      'mod': true,\n      'to': true,\n      'in': true,\n      'and': true,\n      'xor': true,\n      'or': true,\n      'not': true\n    };\n    var CONSTANTS = {\n      'true': true,\n      'false': false,\n      'null': null,\n      'undefined': undefined\n    };\n    var NUMERIC_CONSTANTS = ['NaN', 'Infinity'];\n\n    function initialState() {\n      return {\n        extraNodes: {},\n        // current extra nodes, must be careful not to mutate\n        expression: '',\n        // current expression\n        comment: '',\n        // last parsed comment\n        index: 0,\n        // current index in expr\n        token: '',\n        // current token\n        tokenType: TOKENTYPE.NULL,\n        // type of the token\n        nestingLevel: 0,\n        // level of nesting inside parameters, used to ignore newline characters\n        conditionalLevel: null // when a conditional is being parsed, the level of the conditional is stored here\n\n      };\n    }\n    /**\n     * View upto `length` characters of the expression starting at the current character.\n     *\n     * @param {State} state\n     * @param {number} [length=1] Number of characters to view\n     * @returns {string}\n     * @private\n     */\n\n\n    function currentString(state, length) {\n      return state.expression.substr(state.index, length);\n    }\n    /**\n     * View the current character. Returns '' if end of expression is reached.\n     *\n     * @param {State} state\n     * @returns {string}\n     * @private\n     */\n\n\n    function currentCharacter(state) {\n      return currentString(state, 1);\n    }\n    /**\n     * Get the next character from the expression.\n     * The character is stored into the char c. If the end of the expression is\n     * reached, the function puts an empty string in c.\n     * @private\n     */\n\n\n    function next(state) {\n      state.index++;\n    }\n    /**\n     * Preview the previous character from the expression.\n     * @return {string} cNext\n     * @private\n     */\n\n\n    function prevCharacter(state) {\n      return state.expression.charAt(state.index - 1);\n    }\n    /**\n     * Preview the next character from the expression.\n     * @return {string} cNext\n     * @private\n     */\n\n\n    function nextCharacter(state) {\n      return state.expression.charAt(state.index + 1);\n    }\n    /**\n     * Get next token in the current string expr.\n     * The token and token type are available as token and tokenType\n     * @private\n     */\n\n\n    function getToken(state) {\n      state.tokenType = TOKENTYPE.NULL;\n      state.token = '';\n      state.comment = ''; // skip over whitespaces\n      // space, tab, and newline when inside parameters\n\n      while (parse.isWhitespace(currentCharacter(state), state.nestingLevel)) {\n        next(state);\n      } // skip comment\n\n\n      if (currentCharacter(state) === '#') {\n        while (currentCharacter(state) !== '\\n' && currentCharacter(state) !== '') {\n          state.comment += currentCharacter(state);\n          next(state);\n        }\n      } // check for end of expression\n\n\n      if (currentCharacter(state) === '') {\n        // token is still empty\n        state.tokenType = TOKENTYPE.DELIMITER;\n        return;\n      } // check for new line character\n\n\n      if (currentCharacter(state) === '\\n' && !state.nestingLevel) {\n        state.tokenType = TOKENTYPE.DELIMITER;\n        state.token = currentCharacter(state);\n        next(state);\n        return;\n      }\n\n      var c1 = currentCharacter(state);\n      var c2 = currentString(state, 2);\n      var c3 = currentString(state, 3);\n\n      if (c3.length === 3 && DELIMITERS[c3]) {\n        state.tokenType = TOKENTYPE.DELIMITER;\n        state.token = c3;\n        next(state);\n        next(state);\n        next(state);\n        return;\n      } // check for delimiters consisting of 2 characters\n\n\n      if (c2.length === 2 && DELIMITERS[c2]) {\n        state.tokenType = TOKENTYPE.DELIMITER;\n        state.token = c2;\n        next(state);\n        next(state);\n        return;\n      } // check for delimiters consisting of 1 character\n\n\n      if (DELIMITERS[c1]) {\n        state.tokenType = TOKENTYPE.DELIMITER;\n        state.token = c1;\n        next(state);\n        return;\n      } // check for a number\n\n\n      if (parse.isDigitDot(c1)) {\n        state.tokenType = TOKENTYPE.NUMBER; // get number, can have a single dot\n\n        if (currentCharacter(state) === '.') {\n          state.token += currentCharacter(state);\n          next(state);\n\n          if (!parse.isDigit(currentCharacter(state))) {\n            // this is no number, it is just a dot (can be dot notation)\n            state.tokenType = TOKENTYPE.DELIMITER;\n          }\n        } else {\n          while (parse.isDigit(currentCharacter(state))) {\n            state.token += currentCharacter(state);\n            next(state);\n          }\n\n          if (parse.isDecimalMark(currentCharacter(state), nextCharacter(state))) {\n            state.token += currentCharacter(state);\n            next(state);\n          }\n        }\n\n        while (parse.isDigit(currentCharacter(state))) {\n          state.token += currentCharacter(state);\n          next(state);\n        } // check for exponential notation like \"2.3e-4\", \"1.23e50\" or \"2e+4\"\n\n\n        if (currentCharacter(state) === 'E' || currentCharacter(state) === 'e') {\n          if (parse.isDigit(nextCharacter(state)) || nextCharacter(state) === '-' || nextCharacter(state) === '+') {\n            state.token += currentCharacter(state);\n            next(state);\n\n            if (currentCharacter(state) === '+' || currentCharacter(state) === '-') {\n              state.token += currentCharacter(state);\n              next(state);\n            } // Scientific notation MUST be followed by an exponent\n\n\n            if (!parse.isDigit(currentCharacter(state))) {\n              throw createSyntaxError(state, 'Digit expected, got \"' + currentCharacter(state) + '\"');\n            }\n\n            while (parse.isDigit(currentCharacter(state))) {\n              state.token += currentCharacter(state);\n              next(state);\n            }\n\n            if (parse.isDecimalMark(currentCharacter(state), nextCharacter(state))) {\n              throw createSyntaxError(state, 'Digit expected, got \"' + currentCharacter(state) + '\"');\n            }\n          } else if (nextCharacter(state) === '.') {\n            next(state);\n            throw createSyntaxError(state, 'Digit expected, got \"' + currentCharacter(state) + '\"');\n          }\n        }\n\n        return;\n      } // check for variables, functions, named operators\n\n\n      if (parse.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state))) {\n        while (parse.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state)) || parse.isDigit(currentCharacter(state))) {\n          state.token += currentCharacter(state);\n          next(state);\n        }\n\n        if (NAMED_DELIMITERS.hasOwnProperty(state.token)) {\n          state.tokenType = TOKENTYPE.DELIMITER;\n        } else {\n          state.tokenType = TOKENTYPE.SYMBOL;\n        }\n\n        return;\n      } // something unknown is found, wrong characters -> a syntax error\n\n\n      state.tokenType = TOKENTYPE.UNKNOWN;\n\n      while (currentCharacter(state) !== '') {\n        state.token += currentCharacter(state);\n        next(state);\n      }\n\n      throw createSyntaxError(state, 'Syntax error in part \"' + state.token + '\"');\n    }\n    /**\n     * Get next token and skip newline tokens\n     */\n\n\n    function getTokenSkipNewline(state) {\n      do {\n        getToken(state);\n      } while (state.token === '\\n'); // eslint-disable-line no-unmodified-loop-condition\n\n    }\n    /**\n     * Open parameters.\n     * New line characters will be ignored until closeParams(state) is called\n     */\n\n\n    function openParams(state) {\n      state.nestingLevel++;\n    }\n    /**\n     * Close parameters.\n     * New line characters will no longer be ignored\n     */\n\n\n    function closeParams(state) {\n      state.nestingLevel--;\n    }\n    /**\n     * Checks whether the current character `c` is a valid alpha character:\n     *\n     * - A latin letter (upper or lower case) Ascii: a-z, A-Z\n     * - An underscore                        Ascii: _\n     * - A dollar sign                        Ascii: $\n     * - A latin letter with accents          Unicode: \\u00C0 - \\u02AF\n     * - A greek letter                       Unicode: \\u0370 - \\u03FF\n     * - A mathematical alphanumeric symbol   Unicode: \\u{1D400} - \\u{1D7FF} excluding invalid code points\n     *\n     * The previous and next characters are needed to determine whether\n     * this character is part of a unicode surrogate pair.\n     *\n     * @param {string} c      Current character in the expression\n     * @param {string} cPrev  Previous character\n     * @param {string} cNext  Next character\n     * @return {boolean}\n     */\n\n\n    parse.isAlpha = function isAlpha(c, cPrev, cNext) {\n      return parse.isValidLatinOrGreek(c) || parse.isValidMathSymbol(c, cNext) || parse.isValidMathSymbol(cPrev, c);\n    };\n    /**\n     * Test whether a character is a valid latin, greek, or letter-like character\n     * @param {string} c\n     * @return {boolean}\n     */\n\n\n    parse.isValidLatinOrGreek = function isValidLatinOrGreek(c) {\n      return /^[a-zA-Z_$\\u00C0-\\u02AF\\u0370-\\u03FF\\u2100-\\u214F]$/.test(c);\n    };\n    /**\n     * Test whether two given 16 bit characters form a surrogate pair of a\n     * unicode math symbol.\n     *\n     * https://unicode-table.com/en/\n     * https://www.wikiwand.com/en/Mathematical_operators_and_symbols_in_Unicode\n     *\n     * Note: In ES6 will be unicode aware:\n     * https://stackoverflow.com/questions/280712/javascript-unicode-regexes\n     * https://mathiasbynens.be/notes/es6-unicode-regex\n     *\n     * @param {string} high\n     * @param {string} low\n     * @return {boolean}\n     */\n\n\n    parse.isValidMathSymbol = function isValidMathSymbol(high, low) {\n      return /^[\\uD835]$/.test(high) && /^[\\uDC00-\\uDFFF]$/.test(low) && /^[^\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]$/.test(low);\n    };\n    /**\n     * Check whether given character c is a white space character: space, tab, or enter\n     * @param {string} c\n     * @param {number} nestingLevel\n     * @return {boolean}\n     */\n\n\n    parse.isWhitespace = function isWhitespace(c, nestingLevel) {\n      // TODO: also take '\\r' carriage return as newline? Or does that give problems on mac?\n      return c === ' ' || c === '\\t' || c === '\\n' && nestingLevel > 0;\n    };\n    /**\n     * Test whether the character c is a decimal mark (dot).\n     * This is the case when it's not the start of a delimiter '.*', './', or '.^'\n     * @param {string} c\n     * @param {string} cNext\n     * @return {boolean}\n     */\n\n\n    parse.isDecimalMark = function isDecimalMark(c, cNext) {\n      return c === '.' && cNext !== '/' && cNext !== '*' && cNext !== '^';\n    };\n    /**\n     * checks if the given char c is a digit or dot\n     * @param {string} c   a string with one character\n     * @return {boolean}\n     */\n\n\n    parse.isDigitDot = function isDigitDot(c) {\n      return c >= '0' && c <= '9' || c === '.';\n    };\n    /**\n     * checks if the given char c is a digit\n     * @param {string} c   a string with one character\n     * @return {boolean}\n     */\n\n\n    parse.isDigit = function isDigit(c) {\n      return c >= '0' && c <= '9';\n    };\n    /**\n     * Start of the parse levels below, in order of precedence\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseStart(expression, extraNodes) {\n      var state = initialState();\n\n      _extends$2(state, {\n        expression: expression,\n        extraNodes: extraNodes\n      });\n\n      getToken(state);\n      var node = parseBlock(state); // check for garbage at the end of the expression\n      // an expression ends with a empty character '' and tokenType DELIMITER\n\n      if (state.token !== '') {\n        if (state.tokenType === TOKENTYPE.DELIMITER) {\n          // user entered a not existing operator like \"//\"\n          // TODO: give hints for aliases, for example with \"<>\" give as hint \" did you mean !== ?\"\n          throw createError(state, 'Unexpected operator ' + state.token);\n        } else {\n          throw createSyntaxError(state, 'Unexpected part \"' + state.token + '\"');\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Parse a block with expressions. Expressions can be separated by a newline\n     * character '\\n', or by a semicolon ';'. In case of a semicolon, no output\n     * of the preceding line is returned.\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseBlock(state) {\n      var node;\n      var blocks = [];\n      var visible;\n\n      if (state.token !== '' && state.token !== '\\n' && state.token !== ';') {\n        node = parseAssignment(state);\n        node.comment = state.comment;\n      } // TODO: simplify this loop\n\n\n      while (state.token === '\\n' || state.token === ';') {\n        // eslint-disable-line no-unmodified-loop-condition\n        if (blocks.length === 0 && node) {\n          visible = state.token !== ';';\n          blocks.push({\n            node: node,\n            visible: visible\n          });\n        }\n\n        getToken(state);\n\n        if (state.token !== '\\n' && state.token !== ';' && state.token !== '') {\n          node = parseAssignment(state);\n          node.comment = state.comment;\n          visible = state.token !== ';';\n          blocks.push({\n            node: node,\n            visible: visible\n          });\n        }\n      }\n\n      if (blocks.length > 0) {\n        return new BlockNode$1(blocks);\n      } else {\n        if (!node) {\n          node = new ConstantNode$1(undefined);\n          node.comment = state.comment;\n        }\n\n        return node;\n      }\n    }\n    /**\n     * Assignment of a function or variable,\n     * - can be a variable like 'a=2.3'\n     * - or a updating an existing variable like 'matrix(2,3:5)=[6,7,8]'\n     * - defining a function like 'f(x) = x^2'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseAssignment(state) {\n      var name, args, value, valid;\n      var node = parseConditional(state);\n\n      if (state.token === '=') {\n        if (type.isSymbolNode(node)) {\n          // parse a variable assignment like 'a = 2/3'\n          name = node.name;\n          getTokenSkipNewline(state);\n          value = parseAssignment(state);\n          return new AssignmentNode$1(new SymbolNode$1(name), value);\n        } else if (type.isAccessorNode(node)) {\n          // parse a matrix subset assignment like 'A[1,2] = 4'\n          getTokenSkipNewline(state);\n          value = parseAssignment(state);\n          return new AssignmentNode$1(node.object, node.index, value);\n        } else if (type.isFunctionNode(node) && type.isSymbolNode(node.fn)) {\n          // parse function assignment like 'f(x) = x^2'\n          valid = true;\n          args = [];\n          name = node.name;\n          node.args.forEach(function (arg, index) {\n            if (type.isSymbolNode(arg)) {\n              args[index] = arg.name;\n            } else {\n              valid = false;\n            }\n          });\n\n          if (valid) {\n            getTokenSkipNewline(state);\n            value = parseAssignment(state);\n            return new FunctionAssignmentNode$1(name, args, value);\n          }\n        }\n\n        throw createSyntaxError(state, 'Invalid left hand side of assignment operator =');\n      }\n\n      return node;\n    }\n    /**\n     * conditional operation\n     *\n     *     condition ? truePart : falsePart\n     *\n     * Note: conditional operator is right-associative\n     *\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseConditional(state) {\n      var node = parseLogicalOr(state);\n\n      while (state.token === '?') {\n        // eslint-disable-line no-unmodified-loop-condition\n        // set a conditional level, the range operator will be ignored as long\n        // as conditionalLevel === state.nestingLevel.\n        var prev = state.conditionalLevel;\n        state.conditionalLevel = state.nestingLevel;\n        getTokenSkipNewline(state);\n        var condition = node;\n        var trueExpr = parseAssignment(state);\n        if (state.token !== ':') throw createSyntaxError(state, 'False part of conditional expression expected');\n        state.conditionalLevel = null;\n        getTokenSkipNewline(state);\n        var falseExpr = parseAssignment(state); // Note: check for conditional operator again, right associativity\n\n        node = new ConditionalNode$1(condition, trueExpr, falseExpr); // restore the previous conditional level\n\n        state.conditionalLevel = prev;\n      }\n\n      return node;\n    }\n    /**\n     * logical or, 'x or y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseLogicalOr(state) {\n      var node = parseLogicalXor(state);\n\n      while (state.token === 'or') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('or', 'or', [node, parseLogicalXor(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * logical exclusive or, 'x xor y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseLogicalXor(state) {\n      var node = parseLogicalAnd(state);\n\n      while (state.token === 'xor') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('xor', 'xor', [node, parseLogicalAnd(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * logical and, 'x and y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseLogicalAnd(state) {\n      var node = parseBitwiseOr(state);\n\n      while (state.token === 'and') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('and', 'and', [node, parseBitwiseOr(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * bitwise or, 'x | y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseBitwiseOr(state) {\n      var node = parseBitwiseXor(state);\n\n      while (state.token === '|') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('|', 'bitOr', [node, parseBitwiseXor(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * bitwise exclusive or (xor), 'x ^| y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseBitwiseXor(state) {\n      var node = parseBitwiseAnd(state);\n\n      while (state.token === '^|') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('^|', 'bitXor', [node, parseBitwiseAnd(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * bitwise and, 'x & y'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseBitwiseAnd(state) {\n      var node = parseRelational(state);\n\n      while (state.token === '&') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n        node = new OperatorNode$1('&', 'bitAnd', [node, parseRelational(state)]);\n      }\n\n      return node;\n    }\n    /**\n     * Parse a chained conditional, like 'a > b >= c'\n     * @return {Node} node\n     */\n\n\n    function parseRelational(state) {\n      var params = [parseShift(state)];\n      var conditionals = [];\n      var operators = {\n        '==': 'equal',\n        '!=': 'unequal',\n        '<': 'smaller',\n        '>': 'larger',\n        '<=': 'smallerEq',\n        '>=': 'largerEq'\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        // eslint-disable-line no-unmodified-loop-condition\n        var cond = {\n          name: state.token,\n          fn: operators[state.token]\n        };\n        conditionals.push(cond);\n        getTokenSkipNewline(state);\n        params.push(parseShift(state));\n      }\n\n      if (params.length === 1) {\n        return params[0];\n      } else if (params.length === 2) {\n        return new OperatorNode$1(conditionals[0].name, conditionals[0].fn, params);\n      } else {\n        return new RelationalNode$1(conditionals.map(function (c) {\n          return c.fn;\n        }), params);\n      }\n    }\n    /**\n     * Bitwise left shift, bitwise right arithmetic shift, bitwise right logical shift\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseShift(state) {\n      var node, operators, name, fn, params;\n      node = parseConversion(state);\n      operators = {\n        '<<': 'leftShift',\n        '>>': 'rightArithShift',\n        '>>>': 'rightLogShift'\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        name = state.token;\n        fn = operators[name];\n        getTokenSkipNewline(state);\n        params = [node, parseConversion(state)];\n        node = new OperatorNode$1(name, fn, params);\n      }\n\n      return node;\n    }\n    /**\n     * conversion operators 'to' and 'in'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseConversion(state) {\n      var node, operators, name, fn, params;\n      node = parseRange(state);\n      operators = {\n        'to': 'to',\n        'in': 'to' // alias of 'to'\n\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        name = state.token;\n        fn = operators[name];\n        getTokenSkipNewline(state);\n\n        if (name === 'in' && state.token === '') {\n          // end of expression -> this is the unit 'in' ('inch')\n          node = new OperatorNode$1('*', 'multiply', [node, new SymbolNode$1('in')], true);\n        } else {\n          // operator 'a to b' or 'a in b'\n          params = [node, parseRange(state)];\n          node = new OperatorNode$1(name, fn, params);\n        }\n      }\n\n      return node;\n    }\n    /**\n     * parse range, \"start:end\", \"start:step:end\", \":\", \"start:\", \":end\", etc\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseRange(state) {\n      var node;\n      var params = [];\n\n      if (state.token === ':') {\n        // implicit start=1 (one-based)\n        node = new ConstantNode$1(1);\n      } else {\n        // explicit start\n        node = parseAddSubtract(state);\n      }\n\n      if (state.token === ':' && state.conditionalLevel !== state.nestingLevel) {\n        // we ignore the range operator when a conditional operator is being processed on the same level\n        params.push(node); // parse step and end\n\n        while (state.token === ':' && params.length < 3) {\n          // eslint-disable-line no-unmodified-loop-condition\n          getTokenSkipNewline(state);\n\n          if (state.token === ')' || state.token === ']' || state.token === ',' || state.token === '') {\n            // implicit end\n            params.push(new SymbolNode$1('end'));\n          } else {\n            // explicit end\n            params.push(parseAddSubtract(state));\n          }\n        }\n\n        if (params.length === 3) {\n          // params = [start, step, end]\n          node = new RangeNode$1(params[0], params[2], params[1]); // start, end, step\n        } else {\n          // length === 2\n          // params = [start, end]\n          node = new RangeNode$1(params[0], params[1]); // start, end\n        }\n      }\n\n      return node;\n    }\n    /**\n     * add or subtract\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseAddSubtract(state) {\n      var node, operators, name, fn, params;\n      node = parseMultiplyDivide(state);\n      operators = {\n        '+': 'add',\n        '-': 'subtract'\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        name = state.token;\n        fn = operators[name];\n        getTokenSkipNewline(state);\n        params = [node, parseMultiplyDivide(state)];\n        node = new OperatorNode$1(name, fn, params);\n      }\n\n      return node;\n    }\n    /**\n     * multiply, divide, modulus\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseMultiplyDivide(state) {\n      var node, last, operators, name, fn;\n      node = parseImplicitMultiplication(state);\n      last = node;\n      operators = {\n        '*': 'multiply',\n        '.*': 'dotMultiply',\n        '/': 'divide',\n        './': 'dotDivide',\n        '%': 'mod',\n        'mod': 'mod'\n      };\n\n      while (true) {\n        if (operators.hasOwnProperty(state.token)) {\n          // explicit operators\n          name = state.token;\n          fn = operators[name];\n          getTokenSkipNewline(state);\n          last = parseImplicitMultiplication(state);\n          node = new OperatorNode$1(name, fn, [node, last]);\n        } else {\n          break;\n        }\n      }\n\n      return node;\n    }\n    /**\n     * implicit multiplication\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseImplicitMultiplication(state) {\n      var node, last;\n      node = parseRule2(state);\n      last = node;\n\n      while (true) {\n        if (state.tokenType === TOKENTYPE.SYMBOL || state.token === 'in' && type.isConstantNode(node) || state.tokenType === TOKENTYPE.NUMBER && !type.isConstantNode(last) && (!type.isOperatorNode(last) || last.op === '!') || state.token === '(') {\n          // parse implicit multiplication\n          //\n          // symbol:      implicit multiplication like '2a', '(2+3)a', 'a b'\n          // number:      implicit multiplication like '(2+3)2'\n          // parenthesis: implicit multiplication like '2(3+4)', '(3+4)(1+2)'\n          last = parseRule2(state);\n          node = new OperatorNode$1('*', 'multiply', [node, last], true\n          /* implicit */\n          );\n        } else {\n          break;\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Infamous \"rule 2\" as described in https://github.com/josdejong/mathjs/issues/792#issuecomment-361065370\n     * Explicit division gets higher precedence than implicit multiplication\n     * when the division matches this pattern: [number] / [number] [symbol]\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseRule2(state) {\n      var node = parseUnary(state);\n      var last = node;\n      var tokenStates = [];\n\n      while (true) {\n        // Match the \"number /\" part of the pattern \"number / number symbol\"\n        if (state.token === '/' && type.isConstantNode(last)) {\n          // Look ahead to see if the next token is a number\n          tokenStates.push(_extends$2({}, state));\n          getTokenSkipNewline(state); // Match the \"number / number\" part of the pattern\n\n          if (state.tokenType === TOKENTYPE.NUMBER) {\n            // Look ahead again\n            tokenStates.push(_extends$2({}, state));\n            getTokenSkipNewline(state); // Match the \"symbol\" part of the pattern, or a left parenthesis\n\n            if (state.tokenType === TOKENTYPE.SYMBOL || state.token === '(') {\n              // We've matched the pattern \"number / number symbol\".\n              // Rewind once and build the \"number / number\" node; the symbol will be consumed later\n              _extends$2(state, tokenStates.pop());\n\n              tokenStates.pop();\n              last = parseUnary(state);\n              node = new OperatorNode$1('/', 'divide', [node, last]);\n            } else {\n              // Not a match, so rewind\n              tokenStates.pop();\n\n              _extends$2(state, tokenStates.pop());\n\n              break;\n            }\n          } else {\n            // Not a match, so rewind\n            _extends$2(state, tokenStates.pop());\n\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Unary plus and minus, and logical and bitwise not\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseUnary(state) {\n      var name, params, fn;\n      var operators = {\n        '-': 'unaryMinus',\n        '+': 'unaryPlus',\n        '~': 'bitNot',\n        'not': 'not'\n      };\n\n      if (operators.hasOwnProperty(state.token)) {\n        fn = operators[state.token];\n        name = state.token;\n        getTokenSkipNewline(state);\n        params = [parseUnary(state)];\n        return new OperatorNode$1(name, fn, params);\n      }\n\n      return parsePow(state);\n    }\n    /**\n     * power\n     * Note: power operator is right associative\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parsePow(state) {\n      var node, name, fn, params;\n      node = parseLeftHandOperators(state);\n\n      if (state.token === '^' || state.token === '.^') {\n        name = state.token;\n        fn = name === '^' ? 'pow' : 'dotPow';\n        getTokenSkipNewline(state);\n        params = [node, parseUnary(state)]; // Go back to unary, we can have '2^-3'\n\n        node = new OperatorNode$1(name, fn, params);\n      }\n\n      return node;\n    }\n    /**\n     * Left hand operators: factorial x!, ctranspose x'\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseLeftHandOperators(state) {\n      var node, operators, name, fn, params;\n      node = parseCustomNodes(state);\n      operators = {\n        '!': 'factorial',\n        '\\'': 'ctranspose'\n      };\n\n      while (operators.hasOwnProperty(state.token)) {\n        name = state.token;\n        fn = operators[name];\n        getToken(state);\n        params = [node];\n        node = new OperatorNode$1(name, fn, params);\n        node = parseAccessors(state, node);\n      }\n\n      return node;\n    }\n    /**\n     * Parse a custom node handler. A node handler can be used to process\n     * nodes in a custom way, for example for handling a plot.\n     *\n     * A handler must be passed as second argument of the parse function.\n     * - must extend math.expression.node.Node\n     * - must contain a function _compile(defs: Object) : string\n     * - must contain a function find(filter: Object) : Node[]\n     * - must contain a function toString() : string\n     * - the constructor is called with a single argument containing all parameters\n     *\n     * For example:\n     *\n     *     nodes = {\n     *       'plot': PlotHandler\n     *     }\n     *\n     * The constructor of the handler is called as:\n     *\n     *     node = new PlotHandler(params)\n     *\n     * The handler will be invoked when evaluating an expression like:\n     *\n     *     node = math.parse('plot(sin(x), x)', nodes)\n     *\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseCustomNodes(state) {\n      var params = [];\n\n      if (state.tokenType === TOKENTYPE.SYMBOL && state.extraNodes.hasOwnProperty(state.token)) {\n        var CustomNode = state.extraNodes[state.token];\n        getToken(state); // parse parameters\n\n        if (state.token === '(') {\n          params = [];\n          openParams(state);\n          getToken(state);\n\n          if (state.token !== ')') {\n            params.push(parseAssignment(state)); // parse a list with parameters\n\n            while (state.token === ',') {\n              // eslint-disable-line no-unmodified-loop-condition\n              getToken(state);\n              params.push(parseAssignment(state));\n            }\n          }\n\n          if (state.token !== ')') {\n            throw createSyntaxError(state, 'Parenthesis ) expected');\n          }\n\n          closeParams(state);\n          getToken(state);\n        } // create a new custom node\n        // noinspection JSValidateTypes\n\n\n        return new CustomNode(params);\n      }\n\n      return parseSymbol(state);\n    }\n    /**\n     * parse symbols: functions, variables, constants, units\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseSymbol(state) {\n      var node, name;\n\n      if (state.tokenType === TOKENTYPE.SYMBOL || state.tokenType === TOKENTYPE.DELIMITER && state.token in NAMED_DELIMITERS) {\n        name = state.token;\n        getToken(state);\n\n        if (CONSTANTS.hasOwnProperty(name)) {\n          // true, false, null, ...\n          node = new ConstantNode$1(CONSTANTS[name]);\n        } else if (NUMERIC_CONSTANTS.indexOf(name) !== -1) {\n          // NaN, Infinity\n          node = new ConstantNode$1(numeric$1(name, 'number'));\n        } else {\n          node = new SymbolNode$1(name);\n        } // parse function parameters and matrix index\n\n\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseDoubleQuotesString(state);\n    }\n    /**\n     * parse accessors:\n     * - function invocation in round brackets (...), for example sqrt(2)\n     * - index enclosed in square brackets [...], for example A[2,3]\n     * - dot notation for properties, like foo.bar\n     * @param {Node} node    Node on which to apply the parameters. If there\n     *                       are no parameters in the expression, the node\n     *                       itself is returned\n     * @param {string[]} [types]  Filter the types of notations\n     *                            can be ['(', '[', '.']\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseAccessors(state, node, types) {\n      var params;\n\n      while ((state.token === '(' || state.token === '[' || state.token === '.') && (!types || types.indexOf(state.token) !== -1)) {\n        // eslint-disable-line no-unmodified-loop-condition\n        params = [];\n\n        if (state.token === '(') {\n          if (type.isSymbolNode(node) || type.isAccessorNode(node)) {\n            // function invocation like fn(2, 3) or obj.fn(2, 3)\n            openParams(state);\n            getToken(state);\n\n            if (state.token !== ')') {\n              params.push(parseAssignment(state)); // parse a list with parameters\n\n              while (state.token === ',') {\n                // eslint-disable-line no-unmodified-loop-condition\n                getToken(state);\n                params.push(parseAssignment(state));\n              }\n            }\n\n            if (state.token !== ')') {\n              throw createSyntaxError(state, 'Parenthesis ) expected');\n            }\n\n            closeParams(state);\n            getToken(state);\n            node = new FunctionNode$1(node, params);\n          } else {\n            // implicit multiplication like (2+3)(4+5) or sqrt(2)(1+2)\n            // don't parse it here but let it be handled by parseImplicitMultiplication\n            // with correct precedence\n            return node;\n          }\n        } else if (state.token === '[') {\n          // index notation like variable[2, 3]\n          openParams(state);\n          getToken(state);\n\n          if (state.token !== ']') {\n            params.push(parseAssignment(state)); // parse a list with parameters\n\n            while (state.token === ',') {\n              // eslint-disable-line no-unmodified-loop-condition\n              getToken(state);\n              params.push(parseAssignment(state));\n            }\n          }\n\n          if (state.token !== ']') {\n            throw createSyntaxError(state, 'Parenthesis ] expected');\n          }\n\n          closeParams(state);\n          getToken(state);\n          node = new AccessorNode$1(node, new IndexNode$1(params));\n        } else {\n          // dot notation like variable.prop\n          getToken(state);\n\n          if (state.tokenType !== TOKENTYPE.SYMBOL) {\n            throw createSyntaxError(state, 'Property name expected after dot');\n          }\n\n          params.push(new ConstantNode$1(state.token));\n          getToken(state);\n          var dotNotation = true;\n          node = new AccessorNode$1(node, new IndexNode$1(params, dotNotation));\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Parse a double quotes string.\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseDoubleQuotesString(state) {\n      var node, str;\n\n      if (state.token === '\"') {\n        str = parseDoubleQuotesStringToken(state); // create constant\n\n        node = new ConstantNode$1(str); // parse index parameters\n\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseSingleQuotesString(state);\n    }\n    /**\n     * Parse a string surrounded by double quotes \"...\"\n     * @return {string}\n     */\n\n\n    function parseDoubleQuotesStringToken(state) {\n      var str = '';\n\n      while (currentCharacter(state) !== '' && currentCharacter(state) !== '\"') {\n        if (currentCharacter(state) === '\\\\') {\n          // escape character, immediately process the next\n          // character to prevent stopping at a next '\\\"'\n          str += currentCharacter(state);\n          next(state);\n        }\n\n        str += currentCharacter(state);\n        next(state);\n      }\n\n      getToken(state);\n\n      if (state.token !== '\"') {\n        throw createSyntaxError(state, 'End of string \" expected');\n      }\n\n      getToken(state);\n      return JSON.parse('\"' + str + '\"'); // unescape escaped characters\n    }\n    /**\n     * Parse a single quotes string.\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseSingleQuotesString(state) {\n      var node, str;\n\n      if (state.token === '\\'') {\n        str = parseSingleQuotesStringToken(state); // create constant\n\n        node = new ConstantNode$1(str); // parse index parameters\n\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseMatrix(state);\n    }\n    /**\n     * Parse a string surrounded by single quotes '...'\n     * @return {string}\n     */\n\n\n    function parseSingleQuotesStringToken(state) {\n      var str = '';\n\n      while (currentCharacter(state) !== '' && currentCharacter(state) !== '\\'') {\n        if (currentCharacter(state) === '\\\\') {\n          // escape character, immediately process the next\n          // character to prevent stopping at a next '\\''\n          str += currentCharacter(state);\n          next(state);\n        }\n\n        str += currentCharacter(state);\n        next(state);\n      }\n\n      getToken(state);\n\n      if (state.token !== '\\'') {\n        throw createSyntaxError(state, 'End of string \\' expected');\n      }\n\n      getToken(state);\n      return JSON.parse('\"' + str + '\"'); // unescape escaped characters\n    }\n    /**\n     * parse the matrix\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseMatrix(state) {\n      var array, params, rows, cols;\n\n      if (state.token === '[') {\n        // matrix [...]\n        openParams(state);\n        getToken(state);\n\n        if (state.token !== ']') {\n          // this is a non-empty matrix\n          var row = parseRow(state);\n\n          if (state.token === ';') {\n            // 2 dimensional array\n            rows = 1;\n            params = [row]; // the rows of the matrix are separated by dot-comma's\n\n            while (state.token === ';') {\n              // eslint-disable-line no-unmodified-loop-condition\n              getToken(state);\n              params[rows] = parseRow(state);\n              rows++;\n            }\n\n            if (state.token !== ']') {\n              throw createSyntaxError(state, 'End of matrix ] expected');\n            }\n\n            closeParams(state);\n            getToken(state); // check if the number of columns matches in all rows\n\n            cols = params[0].items.length;\n\n            for (var r = 1; r < rows; r++) {\n              if (params[r].items.length !== cols) {\n                throw createError(state, 'Column dimensions mismatch ' + '(' + params[r].items.length + ' !== ' + cols + ')');\n              }\n            }\n\n            array = new ArrayNode$1(params);\n          } else {\n            // 1 dimensional vector\n            if (state.token !== ']') {\n              throw createSyntaxError(state, 'End of matrix ] expected');\n            }\n\n            closeParams(state);\n            getToken(state);\n            array = row;\n          }\n        } else {\n          // this is an empty matrix \"[ ]\"\n          closeParams(state);\n          getToken(state);\n          array = new ArrayNode$1([]);\n        }\n\n        return parseAccessors(state, array);\n      }\n\n      return parseObject(state);\n    }\n    /**\n     * Parse a single comma-separated row from a matrix, like 'a, b, c'\n     * @return {ArrayNode} node\n     */\n\n\n    function parseRow(state) {\n      var params = [parseAssignment(state)];\n      var len = 1;\n\n      while (state.token === ',') {\n        // eslint-disable-line no-unmodified-loop-condition\n        getToken(state); // parse expression\n\n        params[len] = parseAssignment(state);\n        len++;\n      }\n\n      return new ArrayNode$1(params);\n    }\n    /**\n     * parse an object, enclosed in angle brackets{...}, for example {value: 2}\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseObject(state) {\n      if (state.token === '{') {\n        openParams(state);\n        var key;\n        var properties = {};\n\n        do {\n          getToken(state);\n\n          if (state.token !== '}') {\n            // parse key\n            if (state.token === '\"') {\n              key = parseDoubleQuotesStringToken(state);\n            } else if (state.token === '\\'') {\n              key = parseSingleQuotesStringToken(state);\n            } else if (state.tokenType === TOKENTYPE.SYMBOL) {\n              key = state.token;\n              getToken(state);\n            } else {\n              throw createSyntaxError(state, 'Symbol or string expected as object key');\n            } // parse key/value separator\n\n\n            if (state.token !== ':') {\n              throw createSyntaxError(state, 'Colon : expected after object key');\n            }\n\n            getToken(state); // parse key\n\n            properties[key] = parseAssignment(state);\n          }\n        } while (state.token === ','); // eslint-disable-line no-unmodified-loop-condition\n\n\n        if (state.token !== '}') {\n          throw createSyntaxError(state, 'Comma , or bracket } expected after object value');\n        }\n\n        closeParams(state);\n        getToken(state);\n        var node = new ObjectNode$1(properties); // parse index parameters\n\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseNumber(state);\n    }\n    /**\n     * parse a number\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseNumber(state) {\n      var numberStr;\n\n      if (state.tokenType === TOKENTYPE.NUMBER) {\n        // this is a number\n        numberStr = state.token;\n        getToken(state);\n        return new ConstantNode$1(numeric$1(numberStr, config.number));\n      }\n\n      return parseParentheses(state);\n    }\n    /**\n     * parentheses\n     * @return {Node} node\n     * @private\n     */\n\n\n    function parseParentheses(state) {\n      var node; // check if it is a parenthesized expression\n\n      if (state.token === '(') {\n        // parentheses (...)\n        openParams(state);\n        getToken(state);\n        node = parseAssignment(state); // start again\n\n        if (state.token !== ')') {\n          throw createSyntaxError(state, 'Parenthesis ) expected');\n        }\n\n        closeParams(state);\n        getToken(state);\n        node = new ParenthesisNode$1(node);\n        node = parseAccessors(state, node);\n        return node;\n      }\n\n      return parseEnd(state);\n    }\n    /**\n     * Evaluated when the expression is not yet ended but expected to end\n     * @return {Node} res\n     * @private\n     */\n\n\n    function parseEnd(state) {\n      if (state.token === '') {\n        // syntax error or unexpected end of expression\n        throw createSyntaxError(state, 'Unexpected end of expression');\n      } else {\n        throw createSyntaxError(state, 'Value expected');\n      }\n    }\n    /**\n     * Shortcut for getting the current row value (one based)\n     * Returns the line of the currently handled expression\n     * @private\n     */\n\n    /* TODO: implement keeping track on the row number\n    function row () {\n      return null\n    }\n    */\n\n    /**\n     * Shortcut for getting the current col value (one based)\n     * Returns the column (position) where the last state.token starts\n     * @private\n     */\n\n\n    function col(state) {\n      return state.index - state.token.length + 1;\n    }\n    /**\n     * Create an error\n     * @param {string} message\n     * @return {SyntaxError} instantiated error\n     * @private\n     */\n\n\n    function createSyntaxError(state, message) {\n      var c = col(state);\n      var error = new SyntaxError(message + ' (char ' + c + ')');\n      error['char'] = c;\n      return error;\n    }\n    /**\n     * Create an error\n     * @param {string} message\n     * @return {Error} instantiated error\n     * @private\n     */\n\n\n    function createError(state, message) {\n      var c = col(state);\n      var error = new SyntaxError(message + ' (char ' + c + ')');\n      error['char'] = c;\n      return error;\n    }\n\n    return parse;\n  }\n\n  var name$r = 'parse';\n  var path$j = 'expression';\n  var factory_1$t = factory$t;\n\n  var parse = {\n  \tname: name$r,\n  \tpath: path$j,\n  \tfactory: factory_1$t\n  };\n\n  function factory$u(type, config, load, typed) {\n    var parse$1 = load(parse);\n    /**\n     * Parse an expression. Returns a node tree, which can be evaluated by\n     * invoking node.eval().\n     *\n     * Note the evaluating arbitrary expressions may involve security risks,\n     * see [https://mathjs.org/docs/expressions/security.html](https://mathjs.org/docs/expressions/security.html) for more information.\n     *\n     * Syntax:\n     *\n     *     math.parse(expr)\n     *     math.parse(expr, options)\n     *     math.parse([expr1, expr2, expr3, ...])\n     *     math.parse([expr1, expr2, expr3, ...], options)\n     *\n     * Example:\n     *\n     *     const node1 = math.parse('sqrt(3^2 + 4^2)')\n     *     node1.compile().eval() // 5\n     *\n     *     let scope = {a:3, b:4}\n     *     const node2 = math.parse('a * b') // 12\n     *     const code2 = node2.compile()\n     *     code2.eval(scope) // 12\n     *     scope.a = 5\n     *     code2.eval(scope) // 20\n     *\n     *     const nodes = math.parse(['a = 3', 'b = 4', 'a * b'])\n     *     nodes[2].compile().eval() // 12\n     *\n     * See also:\n     *\n     *     eval, compile\n     *\n     * @param {string | string[] | Matrix} expr          Expression to be parsed\n     * @param {{nodes: Object<string, Node>}} [options]  Available options:\n     *                                                   - `nodes` a set of custom nodes\n     * @return {Node | Node[]} node\n     * @throws {Error}\n     */\n\n    return typed('parse', {\n      'string | Array | Matrix': parse$1,\n      'string | Array | Matrix, Object': parse$1\n    });\n  }\n\n  var name$s = 'parse';\n  var factory_1$u = factory$u;\n\n  var parse$1 = {\n  \tname: name$s,\n  \tfactory: factory_1$u\n  };\n\n  function factory$v(type, config, load, typed) {\n    var parse$1 = load(parse);\n    /**\n     * Parse and compile an expression.\n     * Returns a an object with a function `eval([scope])` to evaluate the\n     * compiled expression.\n     *\n     * Syntax:\n     *\n     *     math.compile(expr)                       // returns one node\n     *     math.compile([expr1, expr2, expr3, ...]) // returns an array with nodes\n     *\n     * Examples:\n     *\n     *     const code1 = math.compile('sqrt(3^2 + 4^2)')\n     *     code1.eval() // 5\n     *\n     *     let scope = {a: 3, b: 4}\n     *     const code2 = math.compile('a * b') // 12\n     *     code2.eval(scope) // 12\n     *     scope.a = 5\n     *     code2.eval(scope) // 20\n     *\n     *     const nodes = math.compile(['a = 3', 'b = 4', 'a * b'])\n     *     nodes[2].eval() // 12\n     *\n     * See also:\n     *\n     *    parse, eval\n     *\n     * @param {string | string[] | Array | Matrix} expr\n     *            The expression to be compiled\n     * @return {{eval: Function} | Array.<{eval: Function}>} code\n     *            An object with the compiled expression\n     * @throws {Error}\n     */\n\n    return typed('compile', {\n      'string': function string(expr) {\n        return parse$1(expr).compile();\n      },\n      'Array | Matrix': function ArrayMatrix(expr) {\n        return deepMap(expr, function (entry) {\n          return parse$1(entry).compile();\n        });\n      }\n    });\n  }\n\n  var name$t = 'compile';\n  var factory_1$v = factory$v;\n\n  var compile = {\n  \tname: name$t,\n  \tfactory: factory_1$v\n  };\n\n  function factory$w(type, config, load, typed) {\n    var parse$1 = load(parse);\n    /**\n     * Evaluate an expression.\n     *\n     * Note the evaluating arbitrary expressions may involve security risks,\n     * see [https://mathjs.org/docs/expressions/security.html](https://mathjs.org/docs/expressions/security.html) for more information.\n     *\n     * Syntax:\n     *\n     *     math.eval(expr)\n     *     math.eval(expr, scope)\n     *     math.eval([expr1, expr2, expr3, ...])\n     *     math.eval([expr1, expr2, expr3, ...], scope)\n     *\n     * Example:\n     *\n     *     math.eval('(2+3)/4')                // 1.25\n     *     math.eval('sqrt(3^2 + 4^2)')        // 5\n     *     math.eval('sqrt(-4)')               // 2i\n     *     math.eval(['a=3', 'b=4', 'a*b'])    // [3, 4, 12]\n     *\n     *     let scope = {a:3, b:4}\n     *     math.eval('a * b', scope)           // 12\n     *\n     * See also:\n     *\n     *    parse, compile\n     *\n     * @param {string | string[] | Matrix} expr   The expression to be evaluated\n     * @param {Object} [scope]                    Scope to read/write variables\n     * @return {*} The result of the expression\n     * @throws {Error}\n     */\n\n    return typed('compile', {\n      'string': function string(expr) {\n        var scope = {};\n        return parse$1(expr).compile().eval(scope);\n      },\n      'string, Object': function stringObject(expr, scope) {\n        return parse$1(expr).compile().eval(scope);\n      },\n      'Array | Matrix': function ArrayMatrix(expr) {\n        var scope = {};\n        return deepMap(expr, function (entry) {\n          return parse$1(entry).compile().eval(scope);\n        });\n      },\n      'Array | Matrix, Object': function ArrayMatrixObject(expr, scope) {\n        return deepMap(expr, function (entry) {\n          return parse$1(entry).compile().eval(scope);\n        });\n      }\n    });\n  }\n\n  var name$u = 'eval';\n  var factory_1$w = factory$w;\n\n  var _eval = {\n  \tname: name$u,\n  \tfactory: factory_1$w\n  };\n\n  function factory$x(type, config, load, typed) {\n    /**\n     * Format a value of any type into a string.\n     *\n     * Syntax:\n     *\n     *    math.format(value)\n     *    math.format(value, options)\n     *    math.format(value, precision)\n     *    math.format(value, callback)\n     *\n     * Where:\n     *\n     *  - `value: *`\n     *    The value to be formatted\n     *  - `options: Object`\n     *    An object with formatting options. Available options:\n     *    - `notation: string`\n     *      Number notation. Choose from:\n     *      - 'fixed'\n     *        Always use regular number notation.\n     *        For example '123.40' and '14000000'\n     *      - 'exponential'\n     *        Always use exponential notation.\n     *        For example '1.234e+2' and '1.4e+7'\n     *      - 'engineering'\n     *        Always use engineering notation.\n     *        For example '123.4e+0' and '14.0e+6'\n     *      - 'auto' (default)\n     *        Regular number notation for numbers having an absolute value between\n     *        `lower` and `upper` bounds, and uses exponential notation elsewhere.\n     *        Lower bound is included, upper bound is excluded.\n     *        For example '123.4' and '1.4e7'.\n     *    - `precision: number`\n     *      A number between 0 and 16 to round the digits of the number. In case\n     *      of notations 'exponential', 'engineering', and 'auto', `precision`\n     *      defines the total number of significant digits returned.\n     *      In case of notation 'fixed', `precision` defines the number of\n     *      significant digits after the decimal point.\n     *      `precision` is undefined by default.\n     *    - `lowerExp: number`\n     *      Exponent determining the lower boundary for formatting a value with\n     *      an exponent when `notation='auto`. Default value is `-3`.\n     *    - `upperExp: number`\n     *      Exponent determining the upper boundary for formatting a value with\n     *      an exponent when `notation='auto`. Default value is `5`.\n     *    - `fraction: string`. Available values: 'ratio' (default) or 'decimal'.\n     *      For example `format(fraction(1, 3))` will output '1/3' when 'ratio' is\n     *      configured, and will output `0.(3)` when 'decimal' is configured.\n     * - `callback: function`\n     *   A custom formatting function, invoked for all numeric elements in `value`,\n     *   for example all elements of a matrix, or the real and imaginary\n     *   parts of a complex number. This callback can be used to override the\n     *   built-in numeric notation with any type of formatting. Function `callback`\n     *   is called with `value` as parameter and must return a string.\n     *\n     * When `value` is an Object:\n     *\n     * - When the object contains a property `format` being a function, this function\n     *   is invoked as `value.format(options)` and the result is returned.\n     * - When the object has its own `toString` method, this method is invoked\n     *   and the result is returned.\n     * - In other cases the function will loop over all object properties and\n     *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n     *\n     * When value is a function:\n     *\n     * - When the function has a property `syntax`, it returns this\n     *   syntax description.\n     * - In other cases, a string `'function'` is returned.\n     *\n     * Examples:\n     *\n     *    math.format(6.4)                                        // returns '6.4'\n     *    math.format(1240000)                                    // returns '1.24e6'\n     *    math.format(1/3)                                        // returns '0.3333333333333333'\n     *    math.format(1/3, 3)                                     // returns '0.333'\n     *    math.format(21385, 2)                                   // returns '21000'\n     *    math.format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n     *    math.format(2.3,  {notation: 'fixed', precision: 4})    // returns '2.3000'\n     *    math.format(52.8, {notation: 'exponential'})            // returns '5.28e+1'\n     *    math.format(12400,{notation: 'engineering'})            // returns '12.400e+3'\n     *    math.format(2000, {lowerExp: -2, upperExp: 2})          // returns '2e+3'\n     *\n     *    function formatCurrency(value) {\n     *      // return currency notation with two digits:\n     *      return '$' + value.toFixed(2)\n     *\n     *      // you could also use math.format inside the callback:\n     *      // return '$' + math.format(value, {notation: 'fixed', precision: 2})\n     *    }\n     *    math.format([2.1, 3, 0.016], formatCurrency}            // returns '[$2.10, $3.00, $0.02]'\n     *\n     * See also:\n     *\n     *    print\n     *\n     * @param {*} value                               Value to be stringified\n     * @param {Object | Function | number} [options]  Formatting options\n     * @return {string} The formatted value\n     */\n    var format = typed('format', {\n      'any': string.format,\n      'any, Object | function | number': string.format\n    });\n    format.toTex = undefined; // use default template\n\n    return format;\n  }\n\n  var name$v = 'format';\n  var factory_1$x = factory$x;\n\n  var format$1 = {\n  \tname: name$v,\n  \tfactory: factory_1$x\n  };\n\n  // Load the math.js core\n\n\n  // Create a new, empty math.js instance\n  // It will only contain methods `import` and `config`\n  var math$5 = core$1.create();\n\n  math$5.import(parse$1);\n  math$5.import(compile);\n  math$5.import(_eval);\n\n  math$5.import(format$1);\n\n  // create simple functions for all operators\n  math$5.import({\n    // arithmetic\n    add:        function (a, b) { return a + b },\n    subtract:   function (a, b) { return a - b },\n    multiply:   function (a, b) { return a * b },\n    divide:     function (a, b) { return a / b },\n    mod:        function (a, b) { return a % b },\n    unaryPlus:  function (a) { return  a },\n    unaryMinus: function (a) { return -a },\n\n    // bitwise\n    bitOr:           function (a, b) { return a | b },\n    bitXor:          function (a, b) { return a ^ b },\n    bitAnd:          function (a, b) { return a & b },\n    bitNot:          function (a) { return ~a },\n    leftShift:       function (a, b) { return a << b },\n    rightArithShift: function (a, b) { return a >> b },\n    rightLogShift:   function (a, b) { return a >>> b },\n\n    // logical\n    or:  function (a, b) { return !!(a || b) },\n    xor: function (a, b) { return !!a !== !!b },\n    and: function (a, b) { return !!(a && b) },\n    not: function (a) { return !a },\n\n    // relational\n    equal:     function (a, b) { return a == b },\n    unequal:   function (a, b) { return a != b },\n    smaller:   function (a, b) { return a < b },\n    larger:    function (a, b) { return a > b },\n    smallerEq: function (a, b) { return a <= b },\n    largerEq:  function (a, b) { return a >= b },\n\n    // matrix\n    // matrix: function (a) { return a },\n    matrix: function () { \n      throw new Error('Matrices not supported')\n    },\n    index: function () {\n      // TODO: create a simple index function\n      throw new Error('Matrix indexes not supported')\n    },\n\n    // add pi and e as lowercase\n    pi: Math.PI,\n    e: Math.E,\n    'true': true,\n    'false': false,\n    'null': null\n  });\n\n  // import everything from Math (like trigonometric functions)\n  var allFromMath = {};\n  Object.getOwnPropertyNames(Math).forEach(function (name) {\n    // filter out stuff like Firefox's \"toSource\" method.\n    if (!Object.prototype.hasOwnProperty(name)) {\n      allFromMath[name] = Math[name];\n    }\n  });\n  math$5.import(allFromMath);\n\n  var mathjsExpressionParser = math$5;\n\n  /**\n   * A DiceParser object, which takes a notation\n   * and parses it in to dice and modifiers\n   *\n   * @type {Parser}\n   */\n\n  var Parser = function () {\n    /**\n     * (Hopefully) temporary method for converting parsed notation\n     * into proper class objects.\n     * Currently the PEG parser returns generic objects, but we need\n     * our class objects like `StandardDice`.\n     * Once we have the PEG parser able to return class objects, this\n     * method can be removed.\n     *\n     * @param {*} expression\n     * @returns {*}\n     */\n    var parseExpression = function parseExpression(expression) {\n      if (Array.isArray(expression)) {\n        // loop through each array item and parse it\n        return expression.map(function (item) {\n          return parseExpression(item);\n        });\n      } else if (expression instanceof Object) {\n        if (expression.type === 'dice') {\n          // @todo calculation of sides and qty should be done in grammar as they should only be simple equations\n          var sides = parseExpression(expression.sides);\n          sides = Array.isArray(sides) ? sides.join('') : sides;\n          var qty = parseExpression(expression.qty);\n          qty = mathjsExpressionParser.eval(Array.isArray(qty) ? qty.join('') : qty); // parse the modifiers to proper objects\n\n          expression.modifiers = Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(expression.modifiers).map(function (k) {\n            return _defineProperty({}, k, parseExpression(expression.modifiers[k]));\n          }))));\n\n          switch (expression.subType) {\n            case 'standard':\n              return new StandardDice(expression.notation, mathjsExpressionParser.eval(sides), qty, expression.modifiers);\n\n            case 'percentile':\n              return new PercentileDice(expression.notation, qty, expression.modifiers);\n\n            case 'fudge':\n              return new FudgeDice(expression.notation, mathjsExpressionParser.eval(sides), qty, expression.modifiers);\n\n            default:\n              throw Error(\"Parser: Dice type was not recognised\");\n          }\n        } else if (expression.type === 'group') {\n          expression.expressions = parseExpression(expression.expressions); // parse the modifiers to proper objects\n\n          expression.modifiers = Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(expression.modifiers).map(function (k) {\n            return _defineProperty({}, k, parseExpression(expression.modifiers[k]));\n          }))));\n          return new RollGroup(expression.notation, expression.expressions, expression.modifiers);\n        } else if (expression.type === 'modifier') {\n          switch (expression.subType) {\n            case 'drop':\n              return new DropModifier(expression.notation, expression.end, expression.qty);\n\n            case 'explode':\n              expression.comparePoint = parseExpression(expression.comparePoint);\n              return new ExplodeModifier(expression.notation, expression.comparePoint, expression.compound, expression.penetrate);\n\n            case 'keep':\n              return new KeepModifier(expression.notation, expression.end, expression.qty);\n\n            case 'target':\n              expression.successCP = parseExpression(expression.successCP);\n              expression.failureCP = expression.failureCP ? parseExpression(expression.failureCP) : null;\n              return new TargetModifier(expression.notation, expression.successCP, expression.failureCP);\n\n            case 're-roll':\n              expression.comparePoint = parseExpression(expression.comparePoint);\n              return new ReRollModifier(expression.notation, expression.once, expression.comparePoint);\n\n            case 'critical-success':\n              expression.comparePoint = parseExpression(expression.comparePoint);\n              return new CriticalSuccessModifier(expression.notation, expression.comparePoint);\n\n            case 'critical-failure':\n              expression.comparePoint = parseExpression(expression.comparePoint);\n              return new CriticalFailureModifier(expression.notation, expression.comparePoint);\n\n            case 'sort':\n              return new SortingModifier(expression.notation, expression.direction);\n          }\n        } else if (expression.type === 'compare-point') {\n          return new ComparePoint(expression.operator, expression.value);\n        }\n      }\n\n      return expression;\n    };\n    /**\n     * A DiceParser object, which takes a notation\n     * and parses it in to rolls\n     *\n     * @param {string|Object} notation  The dice notation or object\n     */\n\n\n    var Parser =\n    /*#__PURE__*/\n    function () {\n      function Parser() {\n        _classCallCheck(this, Parser);\n      }\n\n      _createClass(Parser, null, [{\n        key: \"parse\",\n\n        /** Public methods **/\n\n        /**\n         * Parses the given dice notation\n         * and returns a list of dice and modifiers found\n         *\n         * @link https://en.m.wikipedia.org/wiki/Dice_notation\n         * @param {string} notation\n         * @returns {Array}\n         */\n        value: function parse(notation) {\n          if (!notation) {\n            throw Error('Notation is required');\n          } else if (typeof notation !== 'string') {\n            throw Error('Notation must be a string');\n          } // parse the notation\n\n\n          var parsed = grammar_1(notation); // (Hopefully) temporary solution to parse the generic objects into class instances\n\n          return parseExpression(parsed);\n        }\n      }]);\n\n      return Parser;\n    }();\n\n    return Parser;\n  }();\n\n  var DiceRoll = function () {\n    /**\n     * @type {symbol}\n     *\n     * @private\n     */\n    var _calculateTotal = Symbol('calculateTotals');\n    /**\n     * The notation\n     *\n     * @type {symbol}\n     *\n     * @private\n     */\n\n\n    var _notation = Symbol('notation');\n    /**\n     * List of dice definition objects\n     *\n     * @type {symbol}\n     *\n     * @private\n     */\n\n\n    var _parsedNotation = Symbol('parsed-notation');\n    /**\n     * List of rolls\n     *\n     * @type {symbol}\n     *\n     * @private\n     */\n\n\n    var _rolls = Symbol('rolls');\n    /**\n     * The roll total\n     *\n     * @type {symbol}\n     *\n     * @private\n     */\n\n\n    var _total = Symbol('totals');\n\n    var DiceRoll =\n    /*#__PURE__*/\n    function () {\n      /**\n       * Parses the notation and rolls the dice\n       *\n       * @param notation\n       */\n      function DiceRoll(notation) {\n        _classCallCheck(this, DiceRoll);\n\n        if (!notation) {\n          throw new Error('Notation is required');\n        } // initialise the parsed dice array\n\n\n        this[_parsedNotation] = [];\n\n        if (notation instanceof Object && !Array.isArray(notation)) {\n          // validate object\n          // @todo see if we can assert that the notation is valid\n          if (!notation.notation) {\n            // object doesn't contain a notation property\n            throw new Error('Notation is required');\n          } else if (typeof notation.notation !== 'string') {\n            throw new Error(\"Notation is not valid: \".concat(notation.notation));\n          } else if (notation.rolls) {\n            // we have rolls - validate them\n            if (!Array.isArray(notation.rolls)) {\n              // rolls is not an array\n              throw new Error(\"Rolls must be an Array: \".concat(notation.rolls));\n            } else {\n              // if roll is a RollResults, return it, otherwise try to convert to a RollResults object\n              this[_rolls] = notation.rolls.map(function (roll) {\n                if (roll instanceof RollResults) {\n                  // already a RollResults object\n                  return roll;\n                } else if (Array.isArray(roll)) {\n                  // array of values\n                  return new RollResults(roll);\n                } else if (roll instanceof Object && Array.isArray(roll.rolls)) {\n                  // object with list of rolls\n                  return new RollResults(roll.rolls);\n                }\n              });\n            }\n          } // store the notation\n\n\n          this[_notation] = notation.notation; // parse the notation\n\n          this[_parsedNotation] = Parser.parse(this.notation);\n\n          if (!this[_rolls] || !this[_rolls].length) {\n            // ensure rolls is an empty array\n            this[_rolls] = []; // roll the dice\n\n            this.roll();\n          }\n        } else if (typeof notation === 'string') {\n          // @todo see if we can assert that the notation is valid\n          // store the notation\n          this[_notation] = notation; // empty the current rolls\n\n          this[_rolls] = []; // parse the notation\n\n          this[_parsedNotation] = Parser.parse(this.notation); // roll the dice\n\n          this.roll();\n        } else {\n          throw new Error(\"Notation is not valid: \".concat(notation));\n        }\n      }\n      /*************************\n       * Static Methods\n       *************************/\n\n      /**\n       * Imports the given dice roll data and builds an object from it.\n       *\n       * Throws Error on failure\n       *\n       * @param {{}|string|DiceRoll} data The data to import\n       *\n       * @throws Error\n       *\n       * @returns {DiceRoll}\n       */\n\n\n      _createClass(DiceRoll, [{\n        key: \"export\",\n\n        /*************************\n         * Public methods\n         *************************/\n\n        /**\n         * Exports the DiceRoll in the given format.\n         * If no format is specified, JSON is returned.\n         *\n         * @throws Error\n         * @param {exportFormats=} format The format to export the data as (ie. JSON, base64)\n         * @returns {string|null}\n         */\n        value: function _export() {\n          var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exportFormats.JSON;\n\n          switch (format) {\n            case exportFormats.BASE_64:\n              // JSON encode, then base64, otherwise it exports the string representation of the roll output\n              return btoa(this.export(exportFormats.JSON));\n\n            case exportFormats.JSON:\n              return JSON.stringify(this);\n\n            case exportFormats.OBJECT:\n              return JSON.parse(this.export(exportFormats.JSON));\n\n            default:\n              throw new Error(\"Unrecognised export format: \".concat(format));\n          }\n        }\n        /**\n         * Returns whether the object has rolled dice or not\n         *\n         * @returns {boolean}\n         */\n\n      }, {\n        key: \"hasRolls\",\n        value: function hasRolls() {\n          return !!(this[_parsedNotation] && Array.isArray(this.rolls) && this.rolls.length);\n        }\n        /**\n         * Rolls the dice for the existing notation.\n         * This is useful if you want to re-roll the dice,\n         * for some reason, but it's usually better to\n         * create a new DiceRoll instance instead.\n         *\n         * @returns {Array}\n         */\n\n      }, {\n        key: \"roll\",\n        value: function roll() {\n          // clear the roll log\n          this[_rolls] = []; // reset the cached total\n\n          this[_total] = 0; // saved the rolls to the log\n\n          this[_rolls] = this[_parsedNotation].map(function (item) {\n            if (item instanceof StandardDice || item instanceof RollGroup) {\n              // roll the object and return the value\n              return item.roll();\n            }\n          }).filter(Boolean); // return the rolls;\n\n          return this[_rolls];\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var notation = this.notation,\n              output = this.output,\n              rolls = this.rolls,\n              total = this.total;\n          return {\n            notation: notation,\n            output: output,\n            rolls: rolls,\n            total: total,\n            type: 'dice-roll'\n          };\n        }\n        /**\n         * Returns the String representation\n         * of the object as the roll notation\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.output;\n        }\n        /*************************\n         * Private Methods\n         *************************/\n\n        /**\n         * Calculates the total roll value and returns it\n         *\n         * @returns {Number}\n         */\n\n      }, {\n        key: _calculateTotal,\n        value: function value() {\n          var _this = this;\n\n          var formula = '';\n          var rollIndex = 0;\n\n          if (this.hasRolls()) {\n            // loop through each roll and calculate the totals\n            this[_parsedNotation].forEach(function (item) {\n              // @todo need to handle roll groups\n              if (item instanceof StandardDice) {\n                // @todo should roll results be stored on their relevant parsed object?\n                // item is a die - total the rolls for it\n                formula += _this.rolls[rollIndex] ? _this.rolls[rollIndex].value : 0; // increment the roll index and store the previous rolls / parsed die\n\n                rollIndex++;\n              } else {\n                formula += item;\n              }\n            });\n          } // if a total formula has been produced, evaluate it and round it to max 2 decimal places\n\n\n          return formula ? diceUtils.toFixed(mathjsExpressionParser.eval(formula), 2) : 0;\n        }\n      }, {\n        key: \"notation\",\n\n        /*************************\n         * Public Properties\n         *************************/\n\n        /**\n         * The dice notation\n         *\n         * @returns {string}\n         */\n        get: function get() {\n          return this[_notation] || '';\n        }\n        /**\n         * Returns the roll notation and rolls in the format of:\n         * 2d20+1d6: [20,2]+[2] = 24\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"output\",\n        get: function get() {\n          var _this2 = this;\n\n          var rollIndex = 0;\n          var output = \"\".concat(this.notation, \": \");\n\n          if (this.hasRolls()) {\n            output += this[_parsedNotation].map(function (item) {\n              if (item instanceof StandardDice) {\n                var rollResults = _this2.rolls[rollIndex] || null; // increment the roll index\n\n                rollIndex++;\n                return rollResults;\n              }\n\n              return item;\n            }) // remove any empty values\n            .filter(Boolean) // join into a single string\n            .join(''); // add the total\n\n            output += \" = \".concat(this.total);\n          } else {\n            output += 'No dice rolled';\n          }\n\n          return output;\n        }\n        /**\n         * The dice rolled for the notation\n         *\n         * @returns {RollResults[]}\n         */\n\n      }, {\n        key: \"rolls\",\n        get: function get() {\n          return this[_rolls] || [];\n        }\n        /**\n         * Returns the roll total\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"total\",\n        get: function get() {\n          // only calculate the total if it has not already been done\n          if (!this[_total] && this.hasRolls()) {\n            this[_total] = this[_calculateTotal]();\n          } // return the total\n\n\n          return this[_total] || 0;\n        }\n      }], [{\n        key: \"import\",\n        value: function _import(data) {\n          if (!data) {\n            throw new Error('No data to import');\n          } else if (diceUtils.isJson(data)) {\n            // data is JSON format - parse and import\n            return DiceRoll.import(JSON.parse(data));\n          } else if (diceUtils.isBase64(data)) {\n            // data is base64 encoded - decode and import\n            return DiceRoll.import(atob(data));\n          } else if (_typeof(data) === 'object') {\n            // if data is a `DiceRoll` return it, otherwise build it\n            return data instanceof DiceRoll ? data : new DiceRoll(data);\n          } else {\n            throw new Error(\"Unrecognised import format for data: \".concat(data));\n          }\n        }\n      }]);\n\n      return DiceRoll;\n    }();\n\n    return DiceRoll;\n  }();\n\n  /**\n   * A DiceRoller handles dice rolling functionality,\n   * keeps track of rolls and can output logs etc.\n   *\n   * @type {DiceRoller}\n   */\n\n  var DiceRoller = function () {\n    /**\n     * history of log rolls\n     *\n     * @type {symbol}\n     */\n    var _log = Symbol('log');\n    /**\n     * A DiceRoller handles dice rolling functionality,\n     * keeps track of rolls and can output logs etc.\n     *\n     * @param {{}=} data\n     */\n\n\n    var DiceRoller =\n    /*#__PURE__*/\n    function () {\n      /**\n       * Initialises the object\n       *\n       * @constructor\n       * @param data\n       */\n      function DiceRoller(data) {\n        var _this = this;\n\n        _classCallCheck(this, DiceRoller);\n\n        this[_log] = [];\n\n        if (data) {\n          if (Array.isArray(data.log)) {\n            // loop through each log entry and import it\n            data.log.forEach(function (roll) {\n              _this[_log].push(DiceRoll.import(roll));\n            });\n          } else if (data.log) {\n            throw new Error('DiceRoller: Roll log must be an Array');\n          }\n        }\n      }\n      /**\n       * Returns the current roll log\n       *\n       * @returns {DiceRoll[]}\n       */\n\n\n      _createClass(DiceRoller, [{\n        key: \"clearLog\",\n\n        /**\n         * Clears the roll history log\n         */\n        value: function clearLog() {\n          this[_log].length = 0;\n        }\n        /**\n         * Exports the roll log in the given format.\n         * If no format is specified, JSON is returned.\n         *\n         * @throws Error\n         * @param {exportFormats=} format The format to export the data as (ie. JSON, base64)\n         * @returns {string|null}\n         */\n\n      }, {\n        key: \"export\",\n        value: function _export(format) {\n          switch (format || exportFormats.JSON) {\n            case exportFormats.BASE_64:\n              // JSON encode, then base64\n              return btoa(this.export(exportFormats.JSON));\n\n            case exportFormats.JSON:\n              return JSON.stringify(this);\n\n            case exportFormats.OBJECT:\n              return JSON.parse(this.export(exportFormats.JSON));\n\n            default:\n              throw new Error('Unrecognised export format: ' + format);\n          }\n        }\n        /**\n         * Takes the given roll data and imports it into\n         * the existing DiceRoller, appending the rolls\n         * to the current roll log.\n         * Returns the roll log.\n         *\n         * @param {*} data\n         *\n         * @throws Error\n         *\n         * @returns {DiceRoll[]}\n         */\n\n      }, {\n        key: \"import\",\n        value: function _import(data) {\n          var _this2 = this;\n\n          if (!data) {\n            throw new Error('No data to import');\n          } else if (diceUtils.isJson(data)) {\n            // data is JSON - parse and import\n            return this.import(JSON.parse(data));\n          } else if (diceUtils.isBase64(data)) {\n            // data is base64 encoded - decode an import\n            return this.import(atob(data));\n          } else if (_typeof(data) === 'object') {\n            // if `log` is not defined, but data is an array, use it as the list of logs\n            if (!data.log && Array.isArray(data) && data.length) {\n              data = {\n                log: data\n              };\n            }\n\n            if (data.log && Array.isArray(data.log)) {\n              // loop through each log entry and import it\n              data.log.forEach(function (roll) {\n                _this2[_log].push(DiceRoll.import(roll));\n              });\n            } else if (data.log) {\n              throw new Error('Roll log must be an Array');\n            }\n\n            return this.log;\n          } else {\n            throw new Error('Unrecognised import format for data: ' + data);\n          }\n        }\n        /**\n         * Returns an object for JSON serialising\n         *\n         * @returns {{}}\n         */\n\n      }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n          var log = this.log,\n              output = this.output,\n              total = this.total;\n          return {\n            log: log,\n            output: output,\n            total: total,\n            type: 'dice-roller'\n          };\n        }\n        /**\n         * Returns the String representation\n         * of the object as the roll notations\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.output;\n        }\n        /**\n         * Rolls the given dice notation(s) and returns them.\n         *\n         * You can roll multiple, separate notations at once by\n         * passing them as separate arguments like:\n         * ```\n         * roll('2d6', '4d10', 'd8');\n         * ```\n         *\n         * If only a single notation is passed, a single DiceRoll\n         * object will be returned, if multiple are provided then\n         * it will return an array of DiceRoll objects.\n         *\n         * @param {string[]} notations\n         *\n         * @returns {DiceRoll|DiceRoll[]}\n         */\n\n      }, {\n        key: \"roll\",\n        value: function roll() {\n          var _this3 = this;\n\n          for (var _len = arguments.length, notations = new Array(_len), _key = 0; _key < _len; _key++) {\n            notations[_key] = arguments[_key];\n          }\n\n          if (!notations || !notations.length) {\n            throw new Error('No notations specified');\n          } // remove any empty/falsey notations\n\n\n          var filteredNotations = notations.filter(Boolean); // ensure we still have notations\n\n          if (!filteredNotations.length) {\n            throw new Error('No notations specified');\n          }\n\n          var rolls = filteredNotations.map(function (notation) {\n            var diceRoll = new DiceRoll(notation); // add the roll log to our global log\n\n            _this3[_log].push(diceRoll); // return the current DiceRoll\n\n\n            return diceRoll;\n          });\n          return rolls.length > 1 ? rolls : rolls[0];\n        }\n      }, {\n        key: \"log\",\n        get: function get() {\n          return this[_log] || [];\n        }\n        /**\n         * Returns the roll notation and rolls in the format of:\n         * 2d20+1d6: [20,2]+[2] = 24; 1d8: [6] = 6\n         *\n         * @returns {string}\n         */\n\n      }, {\n        key: \"output\",\n        get: function get() {\n          // return the log as a joined string\n          return this.log.join('; ');\n        }\n        /**\n         * Returns the total for all the rolls\n         *\n         * @returns {number}\n         */\n\n      }, {\n        key: \"total\",\n        get: function get() {\n          return this.log.reduce(function (prev, current) {\n            return prev + current.total;\n          }, 0);\n        }\n        /**\n         * Takes the given data, imports it into a new DiceRoller instance\n         * and returns the DiceRoller\n         *\n         * @throws Error\n         * @param data\n         * @returns {DiceRoller}\n         */\n\n      }], [{\n        key: \"import\",\n        value: function _import(data) {\n          // create a new DiceRoller object\n          var diceRoller = new DiceRoller(); // import the data\n\n          diceRoller.import(data); // return the DiceRoller\n\n          return diceRoller;\n        }\n      }]);\n\n      return DiceRoller;\n    }();\n\n    return DiceRoller;\n  }();\n\n  exports.Dice = Dice;\n  exports.DiceRoll = DiceRoll;\n  exports.DiceRoller = DiceRoller;\n  exports.Modifiers = Modifiers;\n  exports.Parser = Parser;\n  exports.diceUtils = diceUtils;\n  exports.exportFormats = exportFormats;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","<script>\n  import RPG from 'rpg-dice-roller';\n  import { client } from '../lib/speechly';\n\n  let textContent = '';\n  let transcript = '';\n\n  const updateTranscript = (text) => {\n    transcript.innerHTML = text;\n  };\n\n  const appendMessage = (message) => {\n    textContent.innerHTML = textContent.innerHTML += `${message}\\n`;\n    textContent.scrollTop = textContent.scrollHeight;\n  };\n  const clear = () => (textContent.innerHTML = '');\n\n  export let recording = boolean;\n\n  $: {\n    if (recording) {\n      client.startContext((err) => {\n        if (err !== undefined) {\n          console.error(err);\n          updateTranscript('Error: Failed to start recording!');\n        } else {\n          updateTranscript('Listening...');\n        }\n      });\n    } else {\n      client.stopContext();\n    }\n  }\n\n  // React to the phrases received from the API\n  client.onSegmentChange((segment) => {\n    const phrase = segment.words\n      .map(({ value, isFinal }) => {\n        const klass = isFinal ? 'final' : 'tentative';\n        return `<span class=\"transcript-${klass}\">${value.toLowerCase()}</span>`;\n      })\n      .join(' ');\n    updateTranscript(phrase);\n\n    if (segment.isFinal) {\n      // roll dice\n      const rolls = [];\n      const roller = new RPG.DiceRoller();\n      let quantity = 1;\n      for (const { type, value } of segment.entities) {\n        switch (type) {\n          case 'quantity':\n            quantity = isNaN(value) ? 1 : value;\n            break;\n          case 'dice':\n            if (!isNaN(value)) {\n              const roll = `${Number(quantity)}d${Number(value)}`;\n              rolls.push(roll);\n              roller.roll(roll);\n              quantity = 1; // reset\n            }\n            break;\n        }\n      }\n      if (roller.total) {\n        appendMessage(`Rolling: ${rolls.join(' + ')}`);\n        appendMessage(\n          roller\n            .toString()\n            .split(';')\n            .map((r) => r.trim())\n            .join('\\n'),\n        );\n        appendMessage(`Total: ${roller.total}\\n`);\n      } else {\n        appendMessage(\"Sorry, didn't hear any rolls this time.\\n\");\n      }\n    }\n  });\n</script>\n\n<style>\n  pre.pre-main {\n    resize: vertical;\n    height: 35vh;\n    max-height: 135vh;\n    border-radius: 0.25em;\n    color: #333;\n  }\n</style>\n\n<div>\n  <pre class=\"bg-white small border p-3\" bind:this={transcript} />\n  <pre\n    class=\"pre-scrollable pre-main bg-white small border p-3\"\n    bind:this={textContent} />\n  <button class=\"btn btn-lg btn-primary btn-block\" on:click={clear}>\n    Clear\n  </button>\n</div>\n","<script>\n  import { client } from './lib/speechly';\n  import DiceThrowsListener from './components/DiceRollListener.svelte';\n  import MicrophoneIcon from './components/MicrophoneIcon.svelte';\n\n  // Initialize the client - this will ask the user for microphone permissions and establish the connection to Speechly API.\n  // Make sure you call `initlialize` from a user action handler (e.g. from a button press handler).\n  let initializing = false;\n  let initialized = false;\n\n  const initialize = () => {\n    initializing = true;\n\n    client.initialize((err) => {\n      initializing = false;\n      if (err !== undefined) {\n        console.error('Failed to initialize Speechly client:', err);\n        return;\n      }\n\n      initialized = true;\n    });\n  };\n\n  let recording = false;\n\n  let timeout;\n  const toggleRecord = () => {\n    recording = !recording;\n    if (recording) {\n      timeout = setTimeout(() => {\n        recording = false;\n      }, 8000); // automatically stop after 8 seconds\n    } else {\n      clearTimeout(timeout);\n    }\n  };\n</script>\n\n<style>\n\n</style>\n\n<div class=\"container\">\n  <div class=\"mt-5 mb-3 text-center\">\n    <img class=\"logo\" alt=\"logo\" src=\"d20.png\" />\n    <h1>DnD Voice Dice Roller</h1>\n    <p>\n      Try saying something like:\n      <i>\"Roll 2d8 + 2d4\"</i>\n    </p>\n\n    {#if initialized}\n      <button\n        class=\"btn btn-lg btn-{recording ? 'danger' : 'primary'}\"\n        on:click={toggleRecord}>\n        {#if !recording}\n          <MicrophoneIcon />\n          Click to Speak\n        {:else}Stop Recording{/if}\n      </button>\n    {:else}\n      <button\n        class=\"btn btn-lg btn-primary\"\n        disabled={initializing}\n        on:click={initialize}>\n        {#if !initializing}Start{:else}Starting...{/if}\n      </button>\n    {/if}\n  </div>\n\n  <DiceThrowsListener {recording} />\n\n  <p align=\"center\" class=\"mt-3\">\n    &copy; 2020\n    <a href=\"https://viljami.io\" target=\"_blank\">viljami.io</a>\n    <a\n      href=\"https://github.com/anttiviljami/dnd-voice-dice-roll\"\n      target=\"_blank\">\n      <img\n        src=\"https://img.icons8.com/material-sharp/96/000000/github.png\"\n        alt=\"GitHub\"\n        class=\"icon\" />\n    </a>\n  </p>\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n  target: document.body,\n  props: {},\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","defineProperty","exports","ClientState","state","_a","states","get","unknown","types_1","Failed","NoBrowserSupport","NoAudioConsent","Disconnecting","Disconnected","Connecting","Connected","Starting","Stopping","Recording","LANGUAGES_LIST","aa","nativeName","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu","ISO6391","codes","code","getName","getNativeName","validate","values","keys","find","language","toLowerCase","hasOwnProperty","LANGUAGES_ZH_NAMES","ISO6391ZH","super","getLanguages","assign","zhName","getZhName","_hasDontEnumBug","_dontEnums","obj","prop","prototype","call","exec","key","thisObj","toString","checkDontEnum","ctor","constructor","isProto","hasOwn","forIn","val","sort","arr","start","end","len","Math","max","min","result","args","argsArr","slice","arguments","apply","concat","rest_methodNames","functions","bind","_rKind","_toString","UNDEF","kind","kindOf","isArray","isKind","containsMatch","array","pattern","deepMatches","patternLength","matchArray","forOwn","matchObject","src","identity","makeIterator","needle","some","deepFillIn","defaults","n","newValue","curValue","isPlainObject","deepMixIn","objects","copyProp","existing","x","y","checkProperties","isObject","every","makeCompare","var_defaults","base","output","level","flattenTo","prefix","nestedPrefix","parts","split","last","shift","iterator","temp","compare","Infinity","vals","source","mixIn","flags","multiline","global","ignoreCase","RegExp","Date","deepClone","instanceClone","out","cloneObject","cloneArray","clone","merge","path","item","fromIndex","propName","count","memo","initial","size","Error","list","namespace","bindAll","require$$0","contains","require$$1","require$$2","require$$3","require$$4","equals","require$$5","require$$6","fillIn","require$$7","require$$8","require$$9","flatten","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$18","matches","require$$19","compareFn","arrMax","require$$21","arrMin","require$$23","require$$24","omit","var_keys","property","pick","pluck","require$$27","reduce","require$$28","reject","require$$29","undefined","isFunction","set","require$$31","require$$32","require$$33","unset","require$$34","require$$35","Iso31661a2","mout","singleton","getCountry","countries","getCode","country","idx","getCountries","getCodes","getData","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BQ","BA","BW","BV","BR","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CW","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SX","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW","module","REG","LocaleCode","match","languageCode","getLanguageCode","LanguageCode","getLanguageName","getLanguageNativeName","getLanguageZhName","countryCode","getCountryCode","CountryCode","validateLanguageCode","validateCountryCode","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rng","_nodeId","_clockseq","byteToHex","substr","bytesToUuid","buf","offset","bth","join","_lastMSecs","_lastNSecs","version","hashfunc","generateUUID","off","str","unescape","encodeURIComponent","bytes","charCodeAt","stringToBytes","uuid","replace","hex","parseInt","uuidToBytes","TypeError","err","DNS","URL","safeAdd","lsw","md5cmn","q","s","t","num","cnt","md5ff","md5gg","md5hh","md5ii","v3","v35","msg","input","length32","charAt","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","bytesToWords","f","z","ROTL","v5","K","H","N","ceil","M","j","pow","floor","W","e","T","clockseq","seedBytes","random","msecs","getTime","nsecs","dt","tmh","rnds","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","onAudio","initialized","handleAudio","inputBuffer","getChannelData","window","AudioContext","audioContext","isWebkit","webkitAudioContext","ErrDeviceNotSupported","sampleRate","navigator","mediaDevices","resume","mediaStream","getUserMedia","audio","video","_b","ErrNoAudioConsent","audioTrack","getAudioTracks","enabled","audioProcessor","createScriptProcessor","createMediaStreamSource","connect","destination","ErrNotInitialized","getTracks","stop","proc","disconnect","Downsampler","sourceSampleRate","targetSampleRate","buffer","Float32Array","resampleRatio","outputLength","outputBuffer","round","remainingOffset","sinc","piX","PI","sin","sum","generateFilter","Int16Array","downsampler","isMuted","onAudioCb","audioBuffer","downsampler_1","float32ToInt16","browser_audio_processor_1","BrowserAudioProcessor","generateDownsampler","cb","initialize","catch","mute","close","unmute","__export","WebsocketResponseType","baseUrl","appId","startCbs","stopCbs","onResponseCb","onCloseCb","onWebsocketMessage","response","JSON","parse","console","error","Started","audio_context","Stopped","onWebsocketClose","reason","onWebsocketError","deviceId","websocket","url","protocol","ws","WebSocket","errhandler","openhandler","initializeWebsocket","params","URLSearchParams","generateWsUrl","closeCode","closeReason","isOpen","send","StartEventJSON","StopEventJSON","audioChunk","readyState","OPEN","stringify","storage","localStorage","getItem","ErrKeyNotFound","setItem","ctxId","sId","isFinalized","words","entities","intent","isFinal","contextId","v","w","startPosition","endPosition","entityMapKey","word","start_timestamp","end_timestamp","startTimestamp","endTimestamp","entity","start_position","end_position","__importDefault","mod","__esModule","default","locale_code_1","_c","_d","_e","_f","_g","activeContexts","reconnectAttemptCount","nextReconnectDelay","stateChangeCb","segmentChangeCb","tentativeTranscriptCb","tentativeEntitiesCb","tentativeIntentCb","transcriptCb","entityCb","intentCb","handleWebsocketResponse","debug","log","segment_id","warn","segmentState","segment_1","SegmentState","websocket_1","TentativeTranscript","parsers_1","parseTentativeTranscript","transcript","updateTranscript","Transcript","parseTranscript","TentativeEntities","parseTentativeEntities","updateEntities","Entity","parseEntity","TentativeIntent","tentativeIntent","parseIntent","updateIntent","Intent","SegmentEnd","finalize","toSegment","handleWebsocketClosure","reconnectWebsocket","handleMicrophoneAudio","sendAudio","microphone","microphone_1","BrowserMicrophone","DefaultSampleRate","apiClient","WebsocketClient","storage_1","LocalStorage","onResponse","onClose","setState","uuid_1","v4","errs","message","wsErr","startContext","stopContext","setTimeout","newState","state_1","stateToString","client_1","Client","client","_typeof","Symbol","_classCallCheck","Constructor","_defineProperties","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_defineProperty","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_superPropBase","object","_get","receiver","Reflect","desc","getOwnPropertyDescriptor","_set","isStrict","_slicedToArray","_arrayWithHoles","_arr","_n","_s","_i","_iterableToArrayLimit","_nonIterableRest","_toConsumableArray","arr2","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","peg$SyntaxError","expected","found","location","captureStackTrace","child","parent","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","classEscape","inverted","any","other","description","toUpperCase","descriptions","describeExpected","describeFound","grammar_1","peg$result","peg$FAILED","peg$startRuleFunctions","Main","peg$parseMain","peg$startRuleFunction","peg$c1","peg$literalExpectation","peg$c3","peg$c5","peg$c10","peg$c13","peg$c16","peg$c18","peg$c19","peg$c20","peg$classExpectation","peg$c24","peg$c26","peg$c29","peg$c30","peg$c33","peg$c36","peg$c38","peg$c41","peg$c44","peg$c47","peg$c49","peg$c52","peg$c56","peg$c58","peg$c60","peg$c62","peg$c64","peg$c66","peg$c68","peg$c70","peg$c71","expr","peg$c74","peg$c76","peg$c78","peg$c80","peg$c82","peg$c84","peg$c86","peg$c88","peg$c90","peg$c92","peg$c94","peg$c97","peg$c100","peg$c101","peg$c102","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c110","peg$c113","peg$c115","peg$c117","peg$c119","peg$c120","peg$c121","peg$c122","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computePosDetails","pos","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","peg$fail","peg$parseExpression","peg$parseDiceGroup","s0","s1","s3","s4","s5","s6","s7","s8","s9","exprs","modifiers","peg$parse_","peg$parseModifier","notation","expressions","subType","peg$parseDice","s2","die","peg$parseIntegerOrExpression","qty","sides","peg$parseStandardDie","peg$parsePercentileDie","test","peg$parseFudgeDie","peg$parseDie","modifier","peg$parseComparePoint","penetrate","compound","comparePoint","peg$parseExplodeModifier","peg$parseFailComparePoint","successCP","failureCP","peg$parseTargetModifier","peg$parseIntegerNumber","peg$parseDropModifier","peg$parseKeepModifier","once","peg$parseRerollModifier","peg$parseCriticalSuccessModifier","peg$parseCriticalFailModifier","direction","peg$parseSortingModifier","peg$parseCompareOperator","peg$parseFloatNumber","operator","head","tail","peg$parseFactor","peg$parseOperator","_ref3","_ref4","flat","s10","func","expr1","expr2","peg$c98","peg$parseMathFunction","peg$parseNumber","parseFloat","depth","flattened","flatMap","_failureCP","_direction","_modifiers","_notation","_qty","_sides","_once","_rolls","_compound","_penetrate","_comparePoint","_operator","_value","diceUtils","freeze","isNumeric","Number","isNaN","isFinite","isBase64","btoa","atob","isJson","parsed","generateNumber","sumArray","_this","numbers","prev","current","compareNumbers","toFixed","decPlaces","exportFormats","BASE_64","OBJECT","Modifier","order","results","dice","ComparePoint","isValidOperator","ComparisonModifier","_Modifier","isMatch","RollResult","_calculationValue","_initialValue","_useInTotal","useInTotal","initialVal","initialValue","calculationValue","modifierFlags","acc","flag","ExplodeModifier","_ComparisonModifier","_this2","rolls","roll","subRolls","compareValue","isComparePoint","prevRoll","rollResult","rollOnce","RollResults","addRoll","ReRollModifier","hasReRolled","StandardDice","entries","entry","FudgeDice","_StandardDice","nonBlanks","total","PercentileDice","Dice","CriticalFailureModifier","CriticalSuccessModifier","KeepModifier","_end","_map$sort$map","rollIndex","_rangeToDrop","DropModifier","_KeepModifier","SortingModifier","TargetModifier","failureComparePoint","isSuccess","isFailure","getStateValue","successComparePoint","Modifiers","RollGroup","_expressions","createCommonjsModule","globalThis","isBigNumber","valueOf","extend","deepExtend","deepEqual","canDefineProperty","lazy","_uninitialized","traverse","names","isFactory","factory","typedFunction","ok","notOk","undef","_types","anyType","_ignore","_conversions","typed","types","conversions","ignore","findTypeByName","typeName","findInArray","hint","findTypeIndex","findTypeName","stringifyParams","param","typeNames","getTypeName","restParam","parseParam","trim","notEmpty","notIgnore","matchingConversions","conversion","filterConversions","exactTypes","typeIndex","conversionIndex","convertibleTypes","hasRestParam","hasConversions","compileTest","test0","test1","tests","compileTests","varIndex","lastTest","testRestParam","getParamAtIndex","signature","getExpectedTypeNames","excludeConversions","isExactType","mergeExpectedParams","signatures","uniq","createError","_name","matchingSignatures","nextMatchingDefs","actualType","category","actual","lengths","maxLength","expectedLength","getLowestTypeIndex","getLowestConversionIndex","compareParams","param1","param2","compareSignatures","signature1","signature2","compileArgConversion","conversion0","conversion1","convert","arg","splitParams","ignoreConversionTypes","_splitParams","typeGroups","filteredTypes","typeGroup","createTypedFunction","signaturesMap","SyntaxError","parsedSignatures","parsedParam","isInvalidParam","parseSignature","notNull","parsedSignature","conflictingSignature","hasOverlap","len1","len2","restParam1","restParam2","hasConflictingParams","ok0","ok1","ok2","ok3","ok4","ok5","allOk","test00","test10","test20","test30","test40","test50","test01","test11","test21","test31","test41","test51","fnConvert","compiledConversions","fnPreprocess","compileArgsPreprocessing","fn0","fn1","fn2","fn3","fn4","fn5","len0","len3","len4","len5","iStart","iEnd","generic","arg0","arg1","createSignaturesMap","array1","array2","extractSignatures","validateUnique","_signature","_fn","string, Object","...Function","string, ...Function","addType","beforeObjectTest","addConversion","number","zeros","isNumber","isInteger","sign","format","precision","toExponential","toEngineering","exponential","lower","upper","fixedOptions","lowerExp","LN10","upperExp","toPrecision","digits","splitNumber","String","exponent","dot","coefficients","rounded","roundDigits","newExp","significandsDiff","abs","expDiff","decimalIdx","decimals","decimalVal","splitValue","pp","first","unshift","DBL_EPSILON","EPSILON","nearlyEqual","epsilon","diff","_typeof$1","_createTyped","isComplex","Complex","isFraction","Fraction","isUnit","isString","isMatrix","isDenseMatrix","isSparseMatrix","isRange","isIndex","isBoolean","isResultSet","isHelp","isDate","isRegExp","isNull","isUndefined","isAccessorNode","isNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","BigNumber","toNumber","DenseMatrix","matrix","E","on","listener","_","emit","evtArr","evts","liveEvents","tinyEmitter","TinyEmitter","emitter","ArgumentsError","stack","isArgumentsError","ArgumentsError_1","_typeof$2","_import","math","config","load","wrap","wrapper","transform","isTypedFunction","override","_importTransform","silent","expression","allowedInExpressions","mathWithTransform","_deleteTransform","_importFactory","existingTransform","resolver","factoryAllowedInExpressions","isSupportedType","unsafe","docs","json","chain","mathImport","validateOption","findIndex","MATRIX","NUMBER","_config","curr","changes","isFactory$1","core$1","factories","instances","predictable","randomSeed","deepMap","skipZeros","_typeof2","_typeof$3","toTex","number$1","string","NaN","Unit","null","Unit, string | Unit","unit","valuelessUnit","Array | Matrix","0","1","2","bignumber","div","times","fraction","number, number","numerator","denominator","numeric","getTypeOf","validInputTypes","validOutputTypes","outputType","inputType","_typeof$4","isSafeProperty","safeNativeProperties","Function","isSafeMethod","method","safeNativeMethods","toLocaleString","customs","getSafeProperty","setSafeProperty","validateSafeMethod","keywords","_typeof$5","hasOwnProperty$1","Node","eval","scope","compile","comment","_compile","symbol","_validateScope","argNames","_ifNode","_traverse","_transform","cloneDeep","customString","toJSON","toHTML","customTex","_toTex","getIdentifier","getContent","IndexError","RangeError","isIndexError","IndexError_1","error_transform","formatter","gt","isZero","exp","toSignificantDigits","mul","formatNumber","formatBigNumber","endsWith","search","looksLikeFraction","formatArray","syntax","escaped","escape","DimensionError","relation","isDimensionError","DimensionError_1","_DimensionError","_validate","dim","dimNext","validateIndex","_number","_IndexError","resize","defaultValue","_string","_defaultValue","_resize","elem","oldLen","newLen","minLen","reshape","sizes","newArray","flatArray","product","totalSize","sizeIndex","tmpArray2","tmpArray","_reshape","squeeze","arraySize","dims","_squeeze","unsqueeze","outer","_unsqueeze","filterRegExp","regexp","separator","identify","identifier","generalize","_interopRequireDefault","_create","string, string","datatype","Matrix","Array | Matrix, string","Array | Matrix, string, string","getSafeProperty$1","setSafeProperty$1","_getObjectProperty","dimension","_setObjectProperty","replacement","updated","subset","matrix$1","Array, Index","isScalar","Matrix, Index","Object, Index","string, Index","strLen","range","Array, Index, any","Array, Index, any, any","Matrix, Index, any","Matrix, Index, any, any","string, Index, string","_setSubstring","string, Index, string, string","Object, Index, any","chars","_len","_typeof$6","errorTransform","getSafeProperty$2","access","subset$1","isObjectProperty","getObjectProperty","getSafeProperty$3","AccessorNode","Node$1","access$1","needParenthesis","evalObject","evalIndex","mathjs","fromJSON","ArrayNode","items","deprecated","evalItems","evalItem","childNode","_typeof$7","errorTransform$1","setSafeProperty$2","properties","AssignmentNode","FunctionAssignmentNode","ConditionalNode","latexLeftParens","latexRightParens","latexParens","OperatorNode:or","associativity","associativeWith","OperatorNode:xor","OperatorNode:and","OperatorNode:bitOr","OperatorNode:bitXor","OperatorNode:bitAnd","OperatorNode:equal","OperatorNode:unequal","OperatorNode:smaller","OperatorNode:larger","OperatorNode:smallerEq","OperatorNode:largerEq","RelationalNode","OperatorNode:leftShift","OperatorNode:rightArithShift","OperatorNode:rightLogShift","OperatorNode:to","RangeNode","OperatorNode:add","OperatorNode:subtract","OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:dotDivide","OperatorNode:mod","OperatorNode:unaryPlus","OperatorNode:unaryMinus","OperatorNode:bitNot","OperatorNode:not","OperatorNode:pow","OperatorNode:dotPow","OperatorNode:factorial","OperatorNode:transpose","getPrecedence","_node","parenthesis","operators","getAssociativity","isAssociativeWith","nodeA","nodeB","identifierA","identifierB","getSafeProperty$4","setSafeProperty$3","assign$1","operators$1","precedence","exprPrecedence","evalValue","childObject","evalParentObject","parentProp","evalParentIndex","parentIndex","ResultSet","map$1","BlockNode","ResultSet$1","blocks","visible","evalBlocks","mathTypeOf","condition","trueExpr","falseExpr","evalCondition","evalTrueExpr","evalFalseExpr","re","im","testCondition","conditionPrecedence","truePrecedence","falsePrecedence","_extends","defaultEscapes","{","}","\\","#","$","%","&","^","~","formatEscapes","–","—"," ","\t","\r\n","\n","defaultEscapeMapFn","latex","symbols","Alpha","alpha","Beta","beta","Gamma","gamma","Delta","delta","Epsilon","varepsilon","Zeta","zeta","Eta","eta","Theta","theta","vartheta","Iota","iota","Kappa","kappa","varkappa","Lambda","lambda","Mu","mu","Nu","nu","Xi","xi","Omicron","omicron","Pi","varpi","Rho","rho","varrho","Sigma","sigma","varsigma","Tau","tau","Upsilon","upsilon","Phi","phi","varphi","Chi","chi","Psi","psi","Omega","omega","true","false","inf","Inf","infinity","oo","lim","transpose","ctranspose","factorial","dotPow","unaryPlus","unaryMinus","bitNot","not","multiply","divide","dotMultiply","dotDivide","subtract","leftShift","rightArithShift","rightLogShift","equal","unequal","smaller","larger","smallerEq","largerEq","bitAnd","bitXor","bitOr","and","xor","defaultTemplate","units","deg","_ref","_ref$preserveFormatti","preserveFormatting","_ref$escapeMapFn","escapeMapFn","runningStr","escapes","escapeKeys","_loop","specialCharFound","dist","toSymbol","escapeLatex","ConstantNode","getType","toLatex","forEach$1","setSafeProperty$4","childArgNames","evalExpr","childArgs","Range","hasStart","hasEnd","hasStep","nums","toArray","map$2","escape$1","IndexNode","Range$1","dimensions","dotNotation","createRange","evalDimensions","needsEnd","evalStart","evalEnd","evalStep","_evalStart","_evalEnd","_evalStep","_childArgNames","evalRange","_evalRange","evalDimension","_typeof$8","escape$2","isSafeProperty$1","hasOwnProperty$2","ObjectNode","evalEntries","stringifiedKey","parsedKey","_key","map$3","escape$3","isSafeMethod$1","getSafeProperty$5","OperatorNode","op","implicit","calculateNecessaryParentheses","root","operandPrecedence","operandIdentifier","rootIdentifier","lhsParens","rhsParens","lhsPrecedence","assocWithLhs","_rootIdentifier","lhsIdentifier","rhsIdentifier","rhsPrecedence","assocWithRhs","argPrecedence","assocWithArg","argAssociativity","evalArgs","evalArg0","_evalArg","evalArg1","evalArg","isUnary","isBinary","parens","assoc","operand","opIsNamed","lhs","rhs","stringifiedArgs","lhsTex","rhsTex","texifiedArgs","ParenthesisNode","content","escape$4","hasOwnProperty$3","getSafeProperty$6","SymbolNode","isValuelessUnit","_typeof$9","_extends$1","latex$1","escape$5","hasOwnProperty$4","map$4","validateSafeMethod$1","getSafeProperty$7","FunctionNode","SymbolNode$1","rawArgs","_rawArgs","evalFn","_rawArgs2","nodeToString","expandTemplate","template","regex","inputPos","nodeToTex","latexConverter","customToTex","startPrecedence","stepPrecedence","endPrecedence","escape$6","conditionals","isRelationalNode","compiled","evalLhs","evalRhs","condFn","paramStrings","paramPrecedence","operatorMap","_extends$2","numeric$1","AccessorNode$1","ArrayNode$1","AssignmentNode$1","BlockNode$1","ConditionalNode$1","ConstantNode$1","FunctionAssignmentNode$1","IndexNode$1","ObjectNode$1","OperatorNode$1","ParenthesisNode$1","FunctionNode$1","RangeNode$1","RelationalNode$1","extraNodes","parseStart","TOKENTYPE","DELIMITERS",",","(",")","[","]","\"","'",";","+","-","*",".*","/","./",".^","!","|","^|","=",":","?","==","!=","<",">","<=",">=","<<",">>",">>>","NAMED_DELIMITERS","in","CONSTANTS","NUMERIC_CONSTANTS","currentString","currentCharacter","prevCharacter","nextCharacter","getToken","tokenType","token","isWhitespace","nestingLevel","c1","c2","c3","isDigitDot","isDigit","isDecimalMark","createSyntaxError","isAlpha","getTokenSkipNewline","openParams","closeParams","conditionalLevel","parseAssignment","parseBlock","valid","parseLogicalXor","parseLogicalOr","parseConditional","parseLogicalAnd","parseBitwiseOr","parseBitwiseXor","parseBitwiseAnd","parseRelational","parseShift","cond","parseConversion","parseRange","parseAddSubtract","parseMultiplyDivide","parseImplicitMultiplication","parseRule2","parseUnary","tokenStates","CustomNode","parseAccessors","parseDoubleQuotesStringToken","parseSingleQuotesStringToken","rows","cols","row","parseRow","numberStr","parseEnd","parseParentheses","parseNumber","parseObject","parseMatrix","parseSingleQuotesString","parseDoubleQuotesString","parseSymbol","parseCustomNodes","parseLeftHandOperators","parsePow","col","cPrev","cNext","isValidLatinOrGreek","isValidMathSymbol","high","low","parse$1","string | Array | Matrix","string | Array | Matrix, Object","_eval","Array | Matrix, Object","format$1","any, Object | function | number","math$5","import","allFromMath","getOwnPropertyNames","_log","mathjsExpressionParser","Parser","parseExpression","k","DiceRoll","_calculateTotal","_parsedNotation","_total","export","Boolean","formula","hasRolls","rollResults","DiceRoller","_this3","notations","filteredNotations","diceRoll","diceRoller","textContent","innerHTML","appendMessage","scrollTop","scrollHeight","recording","boolean","onSegmentChange","segment","phrase","roller","RPG","quantity","initializing","timeout","clearTimeout","body"],"mappings":"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AAI,MACJC,GAAI,QACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,KACJC,GAAI,OACJC,GAAI,QACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,QACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,SACJC,GAAI,QACJC,GAAI,QACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,SACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,UACJC,GAAI,SACJC,GAAI,OACJC,GAAI,SACJC,GAAI,MACJC,GAAI,UACJC,GAAI,MACJC,GAAI,SACJC,GAAI,OACJC,GAAI,OACJC,GAAI,QACJC,GAAI,QACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,QACJC,GAAI,KACJC,GAAI,OACJC,GAAI,KACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,QACJC,GAAI,SACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,SACJC,GAAI,QACJC,GAAI,OACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,QACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,KACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,QACJC,GAAI,MACJC,GAAI,MACJC,GAAI,QACJC,GAAI,MACJC,GAAI,OACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OCrLS,MA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"}